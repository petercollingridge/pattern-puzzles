{"version":3,"sources":["PuzzleMap/Icons/ColourGraphs.js","utils/common.js","Toolbars/Toolbar.js","Toolbars/Button.js","Puzzles/PuzzlePage.js","Puzzles/PuzzleComponents/Primitives.js","Puzzles/PuzzleComponents/utils.js","Puzzles/PuzzleComponents/Graph.js","Puzzles/puzzleLoaders.js","utils/graphUtils.js","utils/evaluation.js","Puzzles/ColourGraphs.js","PuzzleMap/Icons/ColourMaps.js","Puzzles/PuzzleComponents/Map.js","Puzzles/ColourMaps.js","PuzzleMap/Icons/Transformations.js","Puzzles/Transformations.js","PuzzleMap/Icons/Sequences.js","Puzzles/PuzzleComponents/Sequence.js","Puzzles/Sequences.js","PuzzleMap/Icons/Categorisation.js","Puzzles/PuzzleComponents/Categories.js","Puzzles/Categorisation.js","puzzleData.js","PuzzleMap/Icons/Icon.js","PuzzleMap/PuzzleMap.js","serviceWorker.js","index.js","App.js"],"names":["ColourGraphs","react_default","a","createElement","className","x","y","width","height","fill","x1","y1","x2","y2","cx","cy","r","d","handleKeyDown","evt","callback","key","keyCode","DELTA_ANGLE","Math","PI","Toolbar","_ref","puzzle","nColours","selectedColour","angle","colours","_loop","i","cos","sin","concat","setColour","setState","push","role","aria-checked","tabIndex","onClick","onKeyDown","selectColourIndicator","Button","props","flashing","viewBox","COLOURS","PuzzlePage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","queryString","parse","location","search","index","parseInt","q","state","solved","update","bind","assertThisInitialized","getPuzzle","nextPuzzle","_this$props","getPuzzleObject","puzzles","colourPalette","nextState","evaluate","length","aria-label","react_router_dom","to","_this$state","style","color","getNextPuzzleButton","id","preserveAspectRatio","result","in","dx","dy","stdDeviation","in2","mode","operator","radius","displayPuzzle","React","Component","withRouter","Line","isColourable","item","colourItem","arguments","undefined","fixed","colour","colourThisItem","Graph","_ref$edges","edges","_ref$nodes","nodes","colourNode","map","edge","Primitives_Line","assign","node","ColourableGraph","Graph_Graph","nodeIndex","getGraphObject","_ref$size","size","_ref$r","nodeObjects","_ref2","_ref3","slicedToArray","nodeColour","Boolean","edgeObjects","_ref4","_ref5","n1","n2","node1","node2","getGraphAndUncolouredCopy","_ref6","_ref6$nodes","_ref6$edges","_ref6$size","_ref6$r","target","blank","_ref7","_ref8","getMapObject","_ref9","_ref9$regions","regions","_ref9$connections","connections","_ref9$size","regionObjects","_ref10","_ref11","connectionObjects","_ref12","_ref13","getSequenceObject","_ref14","pattern","answer","sequence","n","getGraphSequence","_ref15","graphs","forEach","graph","answerGraph","blankGraph","getCategoryObjects","_ref16","categories","randomRotate","categoryObjects","category","copies","type","object","rotate","floor","random","arr","j","temp","shuffle","getPointsOnACircle","_ref$offsetAngle","offsetAngle","_ref$dx","_ref$dy","points","dAngle","getNodesOnCircle","_ref2$r","_ref2$offsetAngle","_ref2$dx","_ref2$dy","Array","isArray","getLineOfEdges","start","stop","getLoopOfEdges","max","linearGraph","scale","startX","loopGraph","triangleGraph","squareGraph","allItemsHaveValue","items","attr","every","allItemsColoured","allConnectedItemsHaveDifferentColours","filter","cxn","graphIsChromatic","sequencesMatch","seq1","seq2","sequencesAreEquivalent","mapping1","Map","mapping2","value1","get","value2","set","graphNodesAreSameColour","samePatternButDifferent","min","sequenceHasNoMatches","ColourMaps","rx","ry","_ref$regions","ColourableMap","Map_Map","Transformations","Fragment","href","transform","identity1","reflection1","rotation1","colour1","Transformation","Puzzles_PuzzlePage","Transformations_Transformation","Icons_Sequences","Sequence","_ref$sequence","GraphSequence","t1","t2","t112","t221","t121","t211","t123","t231","t312","s1122","s2211","s2112","s1221","s1212","s2121","correctSequence","correctGraphSequence","ColourableSequence","Sequence_Sequence","Icons_Categorisation","Categories","colourCategory","_getCirclePackedInCir","R","phi","cPhi","categoryPositions","categorySize","getCirclePackedInCircle","component","displayCategories","Categories_Categories","puzzleData","addData","name","slug","icons","components","icon","getData","from","_","ColourGraphIcons","ColourMapIcons","CategorisationIcons","TransformationIcons","SequencesIcons","puzzleLayout","Icon","children","PuzzleMap","section","window","hostname","match","ReactDOM","render","react_router","values","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37d94b5a.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst ColourGraphIcon1 = () => <g>\n    <g className=\"graph-edges\">\n        <rect x=\"-20\" y=\"-20\" width=\"40\" height=\"40\" fill=\"none\" />\n        <line x1=\"-20\" y1=\"-20\" x2=\"20\" y2=\"20\" />\n        <line x1=\"-20\" y1=\"20\" x2=\"20\" y2=\"-20\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-20\" cy=\"-20\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"-20\" cy=\"20\" r=\"8\" />\n        <circle className=\"colour-1\" cx=\"20\" cy=\"20\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"20\" cy=\"-20\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"0\" cy=\"0\" r=\"8\" />\n    </g>\n</g>\n\nconst ColourGraphIcon2 = () => <g>\n    <g className=\"graph-edges\">\n        <rect x=\"-32\" y=\"-16\" width=\"64\" height=\"32\" />\n        <line x1=\"0\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n        <line x1=\"-32\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n        <line x1=\"32\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-32\" cy=\"-16\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"0\" cy=\"-16\" r=\"8\" />\n        <circle className=\"colour-1\" cx=\"32\" cy=\"-16\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"32\" cy=\"16\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"0\" cy=\"16\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"-32\" cy=\"16\" r=\"8\" />\n    </g>\n</g>\n\nconst ColourGraphIcon3 = () => <g>\n    <g className=\"graph-edges\">\n        <path d=\"M32 0L16 27.7h-32L-32 0 -16 -27.71h32z\" />\n        <line x1=\"16\" y1=\"-27.71\" x2=\"16\" y2=\"27.71\" />\n        <line x1=\"-16\" y1=\"-27.71\" x2=\"-16\" y2=\"27.71\" />\n        <line className=\"edge-outline\" x1=\"-32\" y1=\"0\" x2=\"32\" y2=\"0\" />\n        <line x1=\"-32\" y1=\"0\" x2=\"32\" y2=\"0\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"32\" cy=\"0\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"16\" cy=\"27.71\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"-16\" cy=\"27.71\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"-32\" cy=\"0\" r=\"8\" />\n        <circle className=\"colour-1\" cx=\"-16\" cy=\"-27.71\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"16\" cy=\"-27.71\" r=\"8\" />\n    </g>\n</g>\n\nexport default [ColourGraphIcon1, ColourGraphIcon2, ColourGraphIcon3];\n","export function shuffle(arr) {\n    for (let i = arr.length; i--; ) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n    return arr;\n}\n\n// Click enter or space triggers a given callback\nexport const handleKeyDown = (evt, callback) => {\n    if (evt.key === 'Enter' || evt.keyCode === 32) {\n        callback();\n    }\n};\n","import React from 'react';\nimport { handleKeyDown } from '../utils/common';\n\n\nconst TOOLBAR_R = 136;\nconst DELTA_ANGLE = Math.PI / 18;\n\nexport default function ({ puzzle, nColours, selectedColour }) {\n    const r = 8;\n    let angle = Math.PI - DELTA_ANGLE * (nColours - 1) / 2;\n\n    const colours = [];\n    for (let i = 1; i <= nColours; i++) {\n        const cx = (TOOLBAR_R + r) * Math.cos(angle);\n        const cy = (TOOLBAR_R + r) * Math.sin(angle);\n        \n        let className = `colour-palette colour-${i}`;\n        if (selectedColour === i) {\n            className += ' selected';\n        } else if (i === 1 && !selectedColour) {\n            className += ' flashing';\n        }\n\n        const setColour = () => puzzle.setState({ selectedColour: i });\n\n        colours.push(\n            <circle\n                className={className}\n                role=\"radio\"\n                aria-checked={selectedColour === i}\n                tabIndex=\"0\"\n                key={i}\n                cx={cx}\n                cy={cy}\n                r={r}\n                onClick={setColour}\n                onKeyDown={(evt) => handleKeyDown(evt, setColour) }\n            />\n        );\n\n        angle += DELTA_ANGLE;\n    }\n\n    let selectColourIndicator = \"selected-colour-indicator\";\n    if (selectedColour) {\n        selectColourIndicator += ` colour-${selectedColour}`;\n    }\n\n    return <g className=\"toolbar\">\n        <circle className={selectColourIndicator} r=\"132\" />\n        <g className=\"colour-palette\" role=\"radiogroup\">\n            { colours }\n        </g>\n    </g>;\n}\n","import React from 'react';\nimport { handleKeyDown } from '../utils/common';\n\n\nexport default (props) => {\n    let className = props.className || \"\";\n    if (props.flashing) { className += \" flashing\"; }\n\n    return <svg viewBox=\"-12 -12 24 24\">\n        <circle\n            className={className}\n            tabIndex=\"0\"\n            r=\"9\"\n            onClick={props.onClick}\n            onKeyDown={(evt) => handleKeyDown(evt, props.onClick)}\n            role=\"button\" />\n    </svg>\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { parse } from 'query-string';\n\nimport Toolbar from '../Toolbars/Toolbar';\nimport Button from '../Toolbars/Button';\n\nimport './puzzle.css';\n\n\nconst COLOURS = [\n    'rgb(170, 170, 170)',\n    'rgb(20, 146, 196)',\n    'rgb(196, 20, 96)',\n    'rgb(20, 198, 96)',\n    'rgb(220, 220, 20)',\n];\n\nclass PuzzlePage extends React.Component {\n    constructor(props) {\n        super(props);\n   \n        const queryString = parse(props.location.search);\n        const index = parseInt(queryString.q) || 0;\n\n        this.state = {\n            index,\n\t\t\tsolved: false,\n            selectedColour: null,\n        }\n\n        this.update = this.update.bind(this);\n        this.getPuzzle = this.getPuzzle.bind(this);\n        this.nextPuzzle = this.nextPuzzle.bind(this);\n    }\n\n    componentDidMount() {\n        // Load the first puzzle\n        this.getPuzzle(this.state.index);\n    }\n\n    getPuzzle(index) {\n        const { getPuzzleObject, puzzles } = this.props;\n        const puzzle = puzzles[index];\n\n        if (puzzle) {\n            this.setState({\n                puzzle: getPuzzleObject(puzzle),\n                colourPalette: puzzle.colourPalette\n            });\n        }\n    }\n\n    nextPuzzle() {\n        const nextState = this.state.index + 1;\n        this.setState({\n            index: nextState,\n            solved: false,\n            selectedColour: null\n        });\n        this.getPuzzle(nextState);\n    }\n\n    // Child element has updated so evaluate to see if puzzle has been solved\n    update(puzzle) {\n        const solved = this.props.evaluate(puzzle);\n        this.setState({ puzzle, solved });\n    }\n\n    getNextPuzzleButton() {\n        // Only show button if the puzzle has been solved\n        if (!this.state.solved) { return null; }\n\n        if (this.state.index < this.props.puzzles.length - 1) {\n            // Button to go to the next puzzle\n            return <div className=\"menu-button next-puzzle-button\" aria-label=\"Next puzzle\">\n                <Button onClick={this.nextPuzzle} flashing/>\n            </div>\n        } else {\n            // Button to go back to the home page\n            return <Link to=\"/pattern-puzzles/\" className=\"menu-button next-puzzle-button\" aria-label=\"Puzzle completed\">\n                <Button flashing/>\n            </Link>\n        }\n    }\n\n    render() {\n        const { index, puzzle, colourPalette, selectedColour } = this.state;\n        if (!puzzle) { return null; }\n\n        // Determine what the selected colour is if we have selected one\n        const style = {\n            color: COLOURS[selectedColour || 0]\n        };\n        const className = selectedColour ? \"colour-selected\" : \"\";\n\n        return <main>\n            <nav>\n                <Link to=\"/pattern-puzzles/\" className=\"menu-button back-button\" aria-label=\"Back to menu\">\n                    <Button />\n                </Link>\n\n                { this.getNextPuzzleButton() }\n            </nav>\n\n            <svg id=\"puzzle-chamber\" viewBox=\"-128 -128 256 256\" preserveAspectRatio=\"xMidYMid meet\">\n                <defs>\n                    <filter id=\"shadow-filter\">\n                        <feOffset result=\"offOut\" in=\"SourceAlpha\" dx=\"2\" dy=\"2\"/>\n                        <feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\"5\" />\n                        <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\n                    </filter>\n                    <filter id=\"glow-filter\" x=\"-250%\" y=\"-250%\" width=\"500%\" height=\"500%\">\n                        <feMorphology in=\"mask\" result=\"dilated\" operator=\"dilate\" radius=\"1\" />\n                        <feGaussianBlur stdDeviation=\"3\" result=\"colouredBlur\" />\n                        <feMerge>\n                            <feMergeNode in=\"coloredBlur\"/>\n                            <feMergeNode in=\"SourceGraphic\"/>\n                        </feMerge>\n                    </filter>\n                </defs>\n\n                <rect className=\"background\" x=\"-200\" y=\"-200\" width=\"400\" height=\"400\" />\n\n                <g id=\"puzzle\" key={index} className={className} style={style}>\n                    { this.props.displayPuzzle(puzzle, selectedColour, this.update) }\n                </g>\n\n                <circle id=\"chamber-window\" r=\"212\" />\n                <Toolbar \n                    puzzle={this}\n                    nColours={colourPalette}\n                    selectedColour={selectedColour}\n                />\n            </svg>\n        </main>\n    }\n};\n\nexport default withRouter(PuzzlePage);\n","import React from 'react';\n\n\nexport const Line = ({ x1, y1, x2, y2 }) =>\n    <line x1={x1} y1={y1} x2={x2} y2={y2} />\n","import { handleKeyDown } from '../../utils/common';\n\n\n// Given a node, return props to make it colourable\nexport function isColourable(item, i, colourItem, className=\"\") {\n    if (item.fixed || !colourItem) {\n        return {\n            className: `fill-${item.colour} ${ className }`\n        };\n    }\n    \n    const colourThisItem = () => colourItem(i);\n\n    className += \" colourable \";\n    if (item.colour) {\n        className += ` fill-${item.colour}`;\n    } else {\n        className += \" empty-region\";\n    }\n\n    return {\n        className,\n        tabIndex: 0,\n        onClick: colourThisItem,\n        onKeyDown: (evt) => handleKeyDown(evt, colourThisItem)\n    };\n}\n","import React from 'react';\nimport { Line } from './Primitives';\nimport { isColourable } from './utils';\n\n\nexport const Graph = ({ edges=[], nodes=[], colourNode }) =>\n    <g className=\"graph\">\n        <g className=\"graph-edges\">\n            { edges.map((edge, i) =>\n                <g key={i}>\n                    <Line className=\"edge-outline\" {...edge} />\n                    <Line {...edge} />\n                </g>\n            )}\n        </g>\n\n        <g className=\"graph-nodes\">\n            { nodes.map((node, i) => \n                <circle\n                    key={i}\n                    r={node.r}\n                    cx={node.x}\n                    cy={node.y}\n                    {...isColourable(node, i, colourNode)}\n                />\n            )}\n        </g>\n    </g>\n\n// <puzzle> is an object representing the puzzle and what the update function uses to determine\n//  whether the puzzle has been solved\n// <selectedColour> is colour currently select by the user, so what a node will be coloured when clicked\n// <update> is the puzzle's update function which allows the puzzle's state to be updated and then evaluated\nexport const ColourableGraph = (puzzle, selectedColour, update) => {\n    // Function that takes a node index, to colour the node in a graph, and update it\n    const colourNode = nodeIndex => {\n        puzzle.nodes[nodeIndex].colour = selectedColour;\n        update(puzzle);\n    };\n\n    return <Graph {...puzzle} colourNode={colourNode} />\n};\n","/***\n * These functions take the raw puzzle data and return an object that can used to\n * display the puzzle and determine when the correct answer is found\n***/\n\nimport { shuffle } from '../utils/common';\n\n// Given arrays of node coordinates and edge coordinates, return an object of nodes and edges\nexport function getGraphObject({ nodes=[], edges=[], size=32, r=10, colour }) {\n    const nodeObjects = nodes.map(([x, y, nodeColour]) => ({\n        r,\n        x: x * size,\n        y: y * size,\n        colour: nodeColour || colour,\n        fixed: Boolean(nodeColour || colour)\n    }));\n\n    const edgeObjects = edges.map(([n1, n2]) => {\n        const node1 = nodeObjects[n1];\n        const node2 = nodeObjects[n2];\n        return {\n            node1,\n            node2,\n            x1: node1.x,\n            y1: node1.y,\n            x2: node2.x,\n            y2: node2.y\n        };\n    });\n\n    return {\n        nodes: nodeObjects,\n        edges: edgeObjects\n    };\n}\n\n// Given arrays of node coordinates and edge coordinates, return two objects of nodes and edges,\n// one includes the node colours and one is empty\nexport function getGraphAndUncolouredCopy({ nodes=[], edges=[], size=32, r=8 }) {\n    const target = getGraphObject({ nodes, edges, size, r });\n\n    // Remove the colours from the nodes\n    const blankNodes = nodes.map(([x, y]) => [x, y]);\n    const blankGraph = getGraphObject({ nodes: blankNodes, edges, size, r });\n\n    return { target, blank: blankGraph };\n}\n\nexport function getMapObject({ regions=[], connections=[], size=1 }) {\n    const regionObjects = regions.map(([x, y, width, height]) => ({\n        x: (x - width / 2) * size,\n        y: (y - height / 2) * size,\n        width: width * size,\n        height: height * size,\n    }));\n\n    const connectionObjects = connections.map(([n1, n2]) => ({\n        node1: regionObjects[n1],\n        node2: regionObjects[n2],\n    }));\n\n    // Create a graph of the map in order to evaluate the solution\n    return {\n        regions: regionObjects,\n        connections: connectionObjects\n    };\n}\n\nexport function getSequenceObject({ pattern, answer }) {\n    //  Get a sequence of node objects\n    const sequence = pattern.map(colour => ({\n        colour,\n        fixed: colour > 0\n    }));\n\n    // Target sequence is the starting sequence with any 0s replaced by the answer items\n    let n = 0;\n    const target = pattern.map(colour => {\n        if (colour > 0) {\n            return { colour };\n        } else {\n            return { colour: answer[n++] };\n        }\n    });\n\n    return { sequence, target };\n}\n\nexport function getGraphSequence({ graphs, answer }) {\n    const sequence = [];\n    const target = [];\n\n    let n = 0;\n    graphs.forEach(graph => {\n        if (graph) {\n            sequence.push(getGraphObject(graph));\n            target.push(getGraphObject(graph));\n        } else {\n            // Target sequence is the starting sequence with any nulls replaced by the answer graphs\n            const answerGraph = getGraphObject(answer[n]);\n            target.push(answerGraph);\n            \n            // Displayed sequence show answer as a blank graph\n            const blankGraph = getGraphObject(answer[n]);\n            blankGraph.nodes.forEach(node => {\n                node.fixed = false;\n                node.colour = 0;\n            });\n\n            sequence.push(blankGraph);\n            target.push(answerGraph);\n            n++;\n        }\n    });\n\n    return { sequence, target };\n}\n\n// Return an array of category object which have a colour, and an object to display\nexport function getCategoryObjects({ categories, randomRotate }) {\n    const categoryObjects = [];\n    \n    categories.forEach(category => {\n        const copies = category.copies || 1;\n\n        for (let i = 0; i < copies; i++) {\n            categoryObjects.push({\n                category: category.type,\n                object: category.item,\n                rotate: randomRotate ? Math.floor(Math.random() * 12) * 30 : 0\n            });\n        }\n    });\n\n    return shuffle(categoryObjects);\n}\n","export function getPointsOnACircle(n, {r=1, offsetAngle=0, dx=0, dy=0}={}) {\n    const points = [];\n    const dAngle = 2 * Math.PI / n;\n    let angle = (offsetAngle * Math.PI / 180 || 0) - 0.5 * dAngle;\n\n    for (let i = 0; i < n; i++) {\n        points.push([\n            dx + r * Math.sin(angle),\n            dy + r * Math.cos(angle),\n        ]);\n        angle += dAngle;\n    }\n\n    return points;\n}\n\nexport function getNodesOnCircle(colours, {r=1, offsetAngle=0, dx=0, dy=0}={}) {\n    // If colours is a number rather than an array, create an empty array of that size\n    // i.e. none of the nodes will have a colour\n    if (!Array.isArray(colours)) {\n        colours = new Array(colours);\n    }\n\n    const n = colours.length;\n    const points = getPointsOnACircle(n, { r, offsetAngle, dx, dy });\n\n    // Combine coordinates with colours\n    const nodes = points.map(([x, y], i) => [x, y, colours[i]]);\n\n    return nodes;\n}\n\nexport function getLineOfEdges(start, stop) {\n    if (stop === undefined) {\n        stop = start - 1;\n        start = 0;\n    }\n\n    var edges = [];\n    for (var i = start; i < stop; i++) {\n        edges.push([i, i + 1]);\n    }\n\n    return edges;\n}\n\nexport function getLoopOfEdges(start, stop) {\n    if (stop === undefined) {\n        stop = Math.max(0, start - 1);\n        start = 0;\n    }\n\n    const edges = getLineOfEdges(start, stop);\n    if (start !== stop) {\n        edges.push([stop, start]);\n    }\n\n    return edges;\n}\n\nexport function linearGraph(colours, scale=1) {\n    if (!Array.isArray(colours)) {\n        colours = new Array(colours);\n    }\n\n    const n = colours.length;\n    const startX = - (n - 1) * scale / 2;\n    const nodes = colours.map((colour, i) => [startX + i * scale, 0, colour])\n    const edges = getLineOfEdges(n);\n\n    return { nodes, edges };\n}\n\nexport function loopGraph(colours, scale=1) {\n    if (!Array.isArray(colours)) {\n        colours = new Array(colours);\n    }\n\n    const nodes = getNodesOnCircle(colours, { r: scale });\n    const edges = getLoopOfEdges(colours.length);\n\n    return { nodes, edges };\n}\n\nexport function triangleGraph(colours, scale=1) {\n    // Can pass in a single colour to set all nodes to that colour\n    if (!Array.isArray(colours)) {\n        colours = [colours, colours, colours];\n    }\n\n    return {\n        nodes: getNodesOnCircle(colours, { r: scale }),\n        edges: getLoopOfEdges(3)\n    };\n}\n\nexport function squareGraph(colours, scale=1) {\n    // Can pass in a single colour to set all nodes to that colour\n    if (!Array.isArray(colours)) {\n        colours = [colours, colours, colours, colours];\n    }\n\n    return {\n        nodes: getNodesOnCircle(colours, { r: scale }),\n        edges: getLoopOfEdges(4)\n    };\n}\n","export const allItemsHaveValue = (items=[], attr) =>\n    attr ?\n        items.every(item => item[attr] > 0) :\n        items.every(item => item > 0);\n\nexport const allItemsColoured = (items=[]) => allItemsHaveValue(items, 'colour');\n\nexport const extractAttribute = (items=[], attr) =>\n    items.map(item => item[attr]);\n\nexport function allConnectedItemsHaveDifferentColours(cxns=[]) {\n    const failingCxns = cxns.filter(cxn => cxn.node1.colour === cxn.node2.colour);\n    return failingCxns.length === 0;\n}\n\nexport const graphIsChromatic = ({ nodes, edges }) => \n    allItemsHaveValue(nodes, 'colour') &&\n    allConnectedItemsHaveDifferentColours(edges);\n\nexport const sequencesMatch = (seq1, seq2, attr) => {\n    if (seq1.length !== seq2.length) { return false; }\n    for (let i = 0; i < seq1.length; i++) {\n        const value1 = attr ? seq1[i][attr] : seq1[i];\n        const value2 = attr ? seq2[i][attr] : seq2[i];\n        if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n};\n\nexport const sequenceHasNoMatches = (seq1, seq2) => {\n    const n = Math.min(seq1.length, seq2.length);\n\n    for (let i = 0; i < n; i++) {\n        if (seq1[i] === seq2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Test whether there is a consistent mapping between the values in one array to the value the other\nexport const sequencesAreEquivalent = (seq1, seq2) => {\n    if (seq1.length !== seq2.length) { \n        return false;\n    }\n\n    const mapping1 = new Map();\n    const mapping2 = new Map();\n\n    for (let i = 0; i < seq1.length; i++) {\n        const value1 = mapping1.get(seq1[i]);\n        const value2 = mapping2.get(seq2[i]);\n\n        if (value1 === undefined) {\n            mapping1.set(seq1[i], seq2[i]);\n        } else if (value1 !== seq2[i]) {\n            return false;\n        }\n\n        if (value2 === undefined) {\n            mapping2.set(seq2[i], seq1[i]);\n        } else if (value2 !== seq1[i]) {\n            return false;\n        }\n        \n    }\n\n    return true;\n};\n\n// Test whether the nodes of two graphs are the same colour\nexport const graphNodesAreSameColour = ({ blank, target }) => \n    allItemsColoured(blank.nodes) &&\n    sequencesMatch(blank.nodes, target.nodes, 'colour');\n\n// Test whether the nodes of two graphs have the same pattern,\n// i.e. there is a consistent mapping from the colours in one graph to the colour in the target\nexport const graphNodesHaveSamePattern = ({ blank, target }) =>\n    allItemsColoured(blank.nodes) &&\n    sequencesAreEquivalent(blank.nodes, target.nodes);\n\nexport const samePatternButDifferent = (seq1, seq2) =>\n    allItemsHaveValue(seq1) &&\n    allItemsHaveValue(seq2) &&\n    sequenceHasNoMatches(seq1, seq2) &&\n    sequencesAreEquivalent(seq1, seq2);\n","/*\n * Colour all nodes on a graph such that no edges joins two nodes of the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { ColourableGraph } from './PuzzleComponents/Graph';\nimport { getGraphObject } from './puzzleLoaders';\nimport { getNodesOnCircle, getLoopOfEdges } from '../utils/graphUtils';\nimport { graphIsChromatic } from '../utils/evaluation';\n\n\nconst puzzles1 = [\n\t{\n\t\tcolourPalette: 1,\n\t\tnodes: [[0, 0]]\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: [[-1, 0], [1, 0]],\n\t\tedges: [[0, 1]],\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: [[-2, 0], [0, 0], [2, 0]],\n\t\tedges: [[0, 1], [1, 2]],\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: getNodesOnCircle(3),\n\t\tedges: getLoopOfEdges(3),\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4),\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4).concat([[1, 3]]),\n\t}, {\n\t\tcolourPalette: 4,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4).concat([[1, 3], [0, 2]]),\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: [[0, 0]].concat(getNodesOnCircle(4)),\n\t\tedges: getLoopOfEdges(1, 4).concat([[0, 1], [0, 2], [0, 3], [0, 4]]),\n\t}\n];\n\nconst puzzles2 = [\n    {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6),\n    }, {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[1, 4]]),\n    }, {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 3]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [1, 4], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [1, 4], [1, 3]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: getNodesOnCircle(3).concat(getNodesOnCircle(3, { r: 2, offsetAngle: 60 })),\n        edges: getLoopOfEdges(3).concat([[0, 3], [1, 3], [1, 4], [2, 4], [0, 5], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        scale: 16,\n        nodes: getNodesOnCircle(3).concat(getNodesOnCircle(3, { r: 4, offsetAngle: 60 })),\n        edges: getLoopOfEdges(3)\n            .concat(getLoopOfEdges(3, 5))\n            .concat([[0, 3], [1, 3], [1, 4], [2, 4], [0, 5], [2, 5]]),\n    }\n];\n\n// TODO: Give more colourPalette than required\nconst puzzles3 = [\n    {\n        colourPalette: 2,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6),\n    }, {\n        colourPalette: 2,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [2, 4], [0, 4]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[1, 3], [0, 4], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[2, 4], [1, 3], [0, 4], [1, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 3], [1, 4], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [1, 3], [2, 4], [3, 5], [4, 0], [5, 1]]),\n    }\n];\n\nconst puzzles = [puzzles1, puzzles2, puzzles3];\n\nexport const ColourGraph = (n) =>\n    <PuzzlePage\n        puzzles={puzzles[n]}\n        evaluate={graphIsChromatic}\n\t\tgetPuzzleObject={getGraphObject}\n\t\tdisplayPuzzle={ColourableGraph}\n    />\n","import React from 'react';\n\n\nconst ColourMapIcon1 = () =>\n    <g className=\"graph-nodes\">\n        <rect className=\"colour-1\" x=\"-28\" y=\"-28\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"0\" y=\"-28\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"-28\" y=\"0\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"0\" y=\"0\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-3\" x=\"-12\" y=\"-12\" width=\"24\" height=\"24\" rx=\"2\" ry=\"2\" />\n    </g>\n\nconst ColourMapIcon2 = () =>\n    <g className=\"graph-nodes\">\n        <rect className=\"colour-1\" x=\"-30\" y=\"-30\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"0\" y=\"-30\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"-30\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-3\" x=\"-10\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"10\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"-30\" y=\"10\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"0\" y=\"10\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n    </g>\n\nexport default [ColourMapIcon1, ColourMapIcon2];\n","import React from 'react';\nimport { isColourable } from './utils';\n\n\nexport const Map = ({ regions=[], colourItem }) =>\n    <g className=\"graph\">\n        <g className=\"graph-nodes\">\n            { regions.map((item, i) =>\n                <rect\n                    key={i}\n                    x={item.x}\n                    y={item.y}\n                    width={item.width}\n                    height={item.height}\n                    rx=\"3\"\n                    ry=\"3\"\n                    {...isColourable(item, i, colourItem)}\n                />\n            )}\n        </g>\n    </g>\n","/*\n * Colour regions on a map such that no two touching regions have the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Map } from './PuzzleComponents/Map';\nimport { getMapObject } from './puzzleLoaders';\nimport { allItemsColoured, allConnectedItemsHaveDifferentColours } from '../utils/evaluation';\n\n\nconst puzzles1 = [\n    {\n        colourPalette: 1,\n        regions: [[0, 0, 32, 32]]\n    }, {\n        colourPalette: 2,\n        regions: [[-16, 0, 32, 32], [16, 0, 32, 32]],\n        connections: [[0, 1]]\n    }, {\n        colourPalette: 2,\n        regions: [[-32, 0, 32, 32], [0, 0, 32, 32], [32, 0, 32, 32]],\n        connections: [[0, 1], [1, 2]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [0, -16, 64, 32]],\n        connections: [[0, 1], [1, 2], [0, 2]]\n    }, {\n        colourPalette: 2,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [-16, -16, 32, 32], [16, -16, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [-16, -16, 32, 32], [16, -16, 32, 32], [0, 0, 28, 28]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 3,\n        regions: [[0, 0, 72, 72], [-12, 12, 24, 24], [12, 12, 24, 24], [-12, -12, 24, 24], [12, -12, 24, 24], [0, 0, 24, 24]],\n        connections: [[1, 2], [3, 4], [1, 3], [2, 4], [0, 1], [0, 2], [0, 3], [0, 4], [5, 1], [5, 2], [5, 3], [5, 4]]\n    }, {\n        colourPalette: 4,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [0, -16, 64, 32], [0, 0, 28, 28]],\n        connections: [[0, 1], [0, 2], [0, 3], [1, 2], [1, 3], [2, 3]]\n    }\n];\n\nconst puzzles2 = [\n    {\n        colourPalette: 2,\n        regions: [[0, 0, 96, 96], [0, 0, 32, 32]],\n        connections: [[0, 1]]\n    }, {\n        colourPalette: 3,\n        regions: [[-24, 0, 48, 96], [24, 0, 48, 96], [0, 0, 32, 32]],\n        connections: [[0, 1], [1, 2], [0, 2]]\n    }, {\n        colourPalette: 4,\n        regions: [[0, -32, 96, 32], [-24, 16, 48, 64], [24, 16, 48, 64], [0, 0, 32, 32]],\n        connections: [[0, 1], [0, 2], [0, 3], [1, 2], [1, 3], [2, 3]]\n    }, {\n        colourPalette: 3,\n        regions: [[-24, -24, 48, 48], [24, -24, 48, 48], [-24, 24, 48, 48], [24, 24, 48, 48], [0, 0, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, -32, 64, 32], [32, -16, 32, 64], [-32, 16, 32, 64], [16, 32, 64, 32], [0, 0, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 2,\n        regions: [\n            [-32, -32, 32, 32], [0, -32, 32, 32], [32, -32, 32, 32],\n            [-32, 0, 32, 32], [0, 0, 32, 32], [32, 0, 32, 32],\n            [-32, 32, 32, 32], [0, 32, 32, 32], [32, 32, 32, 32]\n        ],\n        connections: [\n            [0, 1], [1, 2], [3, 4], [4, 5], [6, 7], [7, 8],\n            [0, 3], [1, 4], [2, 5], [3, 6], [4, 7], [5, 8]\n        ]\n    }\n];\n\nconst puzzles = [puzzles1, puzzles2];\n\nconst ColourableMap = (puzzle, selectedColour, update) => {\n    const colourItem = index => {\n        puzzle.regions[index].colour = selectedColour;\n        update(puzzle);\n    }\n\n    return <Map {...puzzle} colourItem={colourItem}/>\n};\n\nconst evaluate = ({ regions, connections }) => \n    allItemsColoured(regions) &&\n    allConnectedItemsHaveDifferentColours(connections);\n\nexport const ColourMap = (n) =>\n\t<PuzzlePage\n\t\tpuzzles={puzzles[n]}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getMapObject}\n\t\tdisplayPuzzle={ColourableMap} />\n","import React from 'react';\n\n\nconst IdentityIcon1 = () => <React.Fragment>\n    <defs>\n        <g id=\"identity-1-puzzle\">\n            <g className=\"graph-edges\">\n                <line x1=\"-15\" y1=\"13\" x2=\"0\" y2=\"-13\" />\n                <line x1=\"-15\" y1=\"13\" x2=\"15\" y2=\"13\" />\n                <line x1=\"0\" y1=\"-13\" x2=\"15\" y2=\"13\" />\n            </g>\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-1\" cx=\"-15\" cy=\"13\" r=\"5\" />\n                <circle className=\"colour-2\" cx=\"0\" cy=\"-13\" r=\"5\" />\n                <circle className=\"colour-3\" cx=\"15\" cy=\"13\" r=\"5\" />\n            </g>\n        </g>\n    </defs>\n\n    <use href=\"#identity-1-puzzle\" transform=\"translate(-24, -4)\"/>\n    <use href=\"#identity-1-puzzle\" transform=\"translate(24, -4)\"/>\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n</React.Fragment>\n\nconst ReflectionIcon1 = () => <React.Fragment>\n    <defs>\n        <g id=\"reflection-1-puzzle\">\n            <g className=\"graph-edges\">\n                <line x1=\"12\" y1=\"0\" x2=\"-11\" y2=\"-15\" />\n                <line x1=\"12\" y1=\"0\" x2=\"-11\" y2=\"15\" />\n                <line x1=\"-11\" y1=\"-15\" x2=\"-11\" y2=\"15\" />\n            </g>\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-2\" cx=\"12\" cy=\"0\" r=\"5\" />\n                <circle className=\"colour-1\" cx=\"-11\" cy=\"15\" r=\"5\" />\n                <circle className=\"colour-1\" cx=\"-11\" cy=\"-15\" r=\"5\" />\n            </g>\n        </g>\n    </defs>\n\n    <use href=\"#reflection-1-puzzle\" transform=\"translate(-20)\"/>\n    <use href=\"#reflection-1-puzzle\" transform=\"translate(20) scale(-1, 1)\"/>\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n</React.Fragment>\n\nconst RotationIcon1 = () => <React.Fragment>\n    <defs>\n        <g id=\"rotation-1-puzzle\">\n            <g className=\"graph-edges\">\n                <line x1=\"-16\" y1=\"13\" x2=\"-2\" y2=\"-13\" />\n                <line x1=\"-16\" y1=\"13\" x2=\"12\" y2=\"13\" />\n                <line x1=\"-2\" y1=\"-13\" x2=\"12\" y2=\"13\" />\n            </g>\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-1\" cx=\"-16\" cy=\"13\" r=\"5\" />\n                <circle className=\"colour-2\" cx=\"-2\" cy=\"-13\" r=\"5\" />\n                <circle className=\"colour-1\" cx=\"12\" cy=\"13\" r=\"5\" />\n            </g>\n        </g>\n    </defs>\n\n    <use href=\"#rotation-1-puzzle\" transform=\"translate(-20)\"/>\n    <use href=\"#rotation-1-puzzle\" transform=\"translate(20) rotate(180)\"/>\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n</React.Fragment>\n\nconst TransformColourIcon1 = () => <React.Fragment>\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n\n    <g transform=\"translate(-20)\">\n        <g className=\"graph-edges\">\n            <line x1=\"0\" y1=\"16\" x2=\"0\" y2=\"-16\" />\n        </g>\n        <g className=\"graph-nodes\">\n            <circle className=\"colour-1\" cx=\"0\" cy=\"-16\" r=\"5\" />\n            <circle className=\"colour-2\" cx=\"0\" cy=\"0\" r=\"5\" />\n            <circle className=\"colour-1\" cx=\"0\" cy=\"16\" r=\"5\" />\n        </g>\n    </g>\n\n    <g transform=\"translate(20)\">\n        <g className=\"graph-edges\">\n            <line x1=\"0\" y1=\"16\" x2=\"0\" y2=\"-16\" />\n        </g>\n        <g className=\"graph-nodes\">\n            <circle className=\"colour-2\" cx=\"0\" cy=\"-16\" r=\"5\" />\n            <circle className=\"colour-1\" cx=\"0\" cy=\"0\" r=\"5\" />\n            <circle className=\"colour-2\" cx=\"0\" cy=\"16\" r=\"5\" />\n        </g>\n    </g>\n</React.Fragment>\n\nexport default [IdentityIcon1, ReflectionIcon1, RotationIcon1, TransformColourIcon1];\n","/*\n * Colour all nodes on a graph such that no edges joins two nodes of the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Graph } from './PuzzleComponents/Graph';\nimport { getGraphAndUncolouredCopy } from './puzzleLoaders';\nimport { getNodesOnCircle, getLoopOfEdges, getLineOfEdges } from '../utils/graphUtils';\nimport { graphNodesAreSameColour, samePatternButDifferent } from '../utils/evaluation';\n\n\nconst identity1 = [\n\t{\n\t\tcolourPalette: 1,\n        nodes: [[0, 0, 1]]\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2]),\n        edges: getLineOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: [[-1, 0, 1], [0, 0, 2], [1, 0, 1]],\n        edges: [[0, 1], [1, 2]]\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 4,\n        nodes: getNodesOnCircle([1, 2, 3, 4]),\n        edges: getLoopOfEdges(4)\n\t}, {\n        size: 24,\n        colourPalette: 3,\n        nodes: [[-1, -1, 1], [1, -1, 1], [-0.5, 0, 2], [0.5, 0, 3], [-1, 1, 3], [1, 1, 2]],\n        edges: [[0, 2], [2, 3], [3, 1], [2, 4], [3, 5]]\n    }, {\n        size: 24,\n        colourPalette: 4,\n        nodes: [[-1.5, -1, 1], [-0.5, -1, 2], [0.5, -1, 1], [-0.5, 0, 1], [0.5, 0, 3], [-0.5, 1, 3], [0.5, 1, 4], [1.5, 1, 3]],\n        edges: [[0, 1], [1, 2], [1, 3], [3, 4], [4, 6], [5, 6], [6, 7]]\n    }\n];\n\nconst reflection1 = [\n\t{\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 2], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 1]),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3]),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 2, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 4,\n        nodes: getNodesOnCircle([1, 2, 3, 4]),\n        edges: getLoopOfEdges(4)\n\t}\n];\n\nconst rotation1 = [\n\t{\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 2], { dy: 0.25 }),\n\t\tedges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2], { offsetAngle: 90 }),\n\t\tedges: getLoopOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2]),\n\t\tedges: getLoopOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 2, 2]),\n\t\tedges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 1, 2]),\n\t\tedges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 2], { dy: 0.25 }),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3], { dy: 0.25 }),\n\t\tedges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 4,\n        nodes: getNodesOnCircle([1, 2, 3, 4]),\n        edges: getLoopOfEdges(4)\n\t}\n];\n\nconst colour1 = [\n\t{\n\t\tcolourPalette: 1,\n        nodes: [[0, 0, 2]]\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2]),\n        edges: getLineOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: [[-1, 0, 1], [0, 0, 2], [1, 0, 1]],\n        edges: getLineOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3]),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3, 2]).concat([[0, 0, 3]]),\n        edges: getLoopOfEdges(4).concat([[0, 4], [1, 4] ,[2, 4], [3, 4]])\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3, 1, 2, 3]),\n        edges: getLoopOfEdges(6)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([2, 3, 1, 3, 2, 1]),\n        edges: getLoopOfEdges(6)\n\t}\n];\n\nconst ColourableGraph = (puzzle, selectedColour, update) => {\n    const colourNode = nodeIndex => {\n        puzzle.blank.nodes[nodeIndex].colour = selectedColour;\n        update(puzzle);\n    }\n\n    return <Graph {...puzzle.blank} colourNode={colourNode}/>\n};\n\nconst Transformation = ({ puzzles, transform, evaluate }) => {\n\tconst displayGraphs = (puzzle, selectedColour, update) => <g>\n        <g transform=\"translate(-60)\">\n            <Graph {...puzzle.target} />\n        </g>\n        <g transform={ \"translate(60) \" + transform }>\n            { ColourableGraph(puzzle, selectedColour, update) }\n        </g>\n\n        <line className=\"reflection-line\" y1=\"-200\" y2=\"200\" />\n    </g>\n\n\treturn <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getGraphAndUncolouredCopy}\n\t\tdisplayPuzzle={displayGraphs} />\n};\n\nconst patternMatchGraphs = ({ blank, target }) => {\n\tconst seq1 = blank.nodes.map(node => node.colour);\n\tconst seq2 = target.nodes.map(node => node.colour);\n\treturn samePatternButDifferent(seq1, seq2);\n}\n\nconst puzzles = [\n\t<Transformation puzzles={identity1} transform=\"\" evaluate={graphNodesAreSameColour} />,\n\t<Transformation puzzles={reflection1} transform=\"scale(-1 1)\" evaluate={graphNodesAreSameColour}/>,\n\t<Transformation puzzles={rotation1} transform=\"rotate(180)\" evaluate={graphNodesAreSameColour} />,\n\t<Transformation puzzles={colour1} transform=\"\" evaluate={patternMatchGraphs} />,\n];\n\nexport const Transformations = (n) => puzzles[n];\n","import React from 'react';\n\n\nconst SequencesIcon1 = () => \n    <g className=\"graph-nodes\">\n        <rect className=\"colour-1\" x=\"-37.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"-22.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"-7.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"7.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"22.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n    </g>\n\nconst SequencesIcon2 = () => \n    <g className=\"graph-nodes\">\n        {[1, 2, 1, 0, 1, 2, 1].map((colour, index) =>\n            <rect\n                key={index}\n                className={\"colour-\" + colour}\n                x={-42 + index * 12}\n                y=\"-7.5\"\n                width=\"12\" height=\"12\" rx=\"2\" ry=\"2\" />\n        )}\n    </g>\n\nconst SequencesIcon3 = () => <React.Fragment>\n    <defs>\n        <g id=\"triangle\" className=\"graph-edges\">\n            <line x1=\"-15\" y1=\"13\" x2=\"0\" y2=\"-13\" />\n            <line x1=\"-15\" y1=\"13\" x2=\"15\" y2=\"13\" />\n            <line x1=\"0\" y1=\"-13\" x2=\"15\" y2=\"13\" />\n        </g>\n        <g id=\"triangle-1\">\n            <use href=\"#triangle\" />\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-1\" cx=\"-15\" cy=\"13\" r=\"7\" />\n                <circle className=\"colour-2\" cx=\"0\" cy=\"-13\" r=\"7\" />\n                <circle className=\"colour-1\" cx=\"15\" cy=\"13\" r=\"7\" />\n            </g>\n        </g>\n        <g id=\"triangle-2\">\n            <use href=\"#triangle\" />\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-2\" cx=\"-15\" cy=\"13\" r=\"7\" />\n                <circle className=\"colour-1\" cx=\"0\" cy=\"-13\" r=\"7\" />\n                <circle className=\"colour-2\" cx=\"15\" cy=\"13\" r=\"7\" />\n            </g>\n        </g>\n    </defs>\n\n    <use href=\"#triangle-1\" transform=\"translate(-34, -4) scale(0.45)\"/>\n    <use href=\"#triangle-2\" transform=\"translate(-11, -4) scale(0.45)\"/>\n    <use href=\"#triangle-1\" transform=\"translate(11, -4) scale(0.45)\"/>\n    <use href=\"#triangle-2\" transform=\"translate(34, -4) scale(0.45)\"/>\n</React.Fragment>\n\nexport default [\n    SequencesIcon1,\n    SequencesIcon2,\n    SequencesIcon3,\n];\n","import React from 'react';\nimport { Graph } from './Graph';\nimport { isColourable } from './utils';\n\n\nexport const Sequence = ({ sequence=[], colourItem }) => {\n    const size = Math.min(24, 200 / sequence.length);\n    const startX = -(sequence.length * size) / 2;\n\n    return <g className=\"sequence\">\n        { sequence.map((item, i) => {\n            return <rect\n                key={i}\n                x={startX + i * size }\n                y={-size / 2}\n                width={size - 1}\n                height={size - 1}\n                rx=\"3\"\n                ry=\"3\"\n                {...isColourable(item, i, colourItem)}\n            />\n        })}\n    </g>\n};\n\nexport const GraphSequence = (puzzle, selectedColour, update) => {\n    const sequence = puzzle.sequence;\n\n    let size = Math.min(120, 240 / sequence.length);\n    const scale = Math.min(1, size / 90);\n    size /= scale;\n    const startX = -size * (sequence.length - 1) / 2;\n\n    return <g className=\"sequence\"  transform={`scale(${ scale })`}>\n        { sequence.map((graph, i) => {\n            const colourNode = nodeIndex => {\n                graph.nodes[nodeIndex].colour = selectedColour;\n                update(puzzle);\n            };\n\n            return <g key={i} transform={`translate(${ startX + i * size })`}>\n                <Graph {...graph} colourNode={colourNode} />\n            </g>\n        })}\n    </g>\n};\n","/*\n * Colour regions on a map such that no two touching regions have the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Sequence, GraphSequence } from './PuzzleComponents/Sequence';\nimport { getSequenceObject, getGraphSequence } from './puzzleLoaders';\nimport { allItemsColoured, sequencesMatch } from '../utils/evaluation';\nimport { triangleGraph, squareGraph } from '../utils/graphUtils';\n\n\n// Sequence of coloured blocks with uncoloured blocks at the end\nconst puzzles1 = [\n    {\n        colourPalette: 1,\n        pattern: [1, 1, 1, 0],\n        answer: [1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 1, 1, 0, 0],\n        answer: [1, 1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 2, 1, 2, 0, 0],\n        answer: [1, 2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 3, 1, 2, 3, 0, 0, 0],\n        answer: [1, 2, 3]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 2, 2, 1, 1, 0, 0],\n        answer: [2, 2]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 2, 1, 2, 2, 0, 0, 0],\n        answer: [1, 2, 2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 3, 3, 1, 2, 3, 3, 0, 0, 0, 0],\n        answer: [1, 2, 3, 3]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 0, 0, 0, 0],\n        answer: [1, 2, 1, 1]\n    }\n];\n\n// Sequence of coloured blocks with uncoloured blocks in the middle of the sequence\nconst puzzles2 = [\n    {\n        colourPalette: 1,\n        pattern: [1, 1, 0, 1, 1],\n        answer: [1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 0, 1, 2, 1],\n        answer: [2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 3, 0, 2, 3],\n        answer: [1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 2, 2, 1, 0, 0, 2],\n        answer: [1, 2]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 2, 1, 2, 0, 0, 2, 2],\n        answer: [2, 1]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 3, 2, 1, 0, 1, 2, 3, 2, 1],\n        answer: [3]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 3, 0, 0, 3, 1, 2, 3, 2, 1],\n        answer: [2, 1]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 1, 0, 0, 0, 1, 2, 3, 1, 1, 2, 3],\n        answer: [2, 3, 1]\n    }\n];\n\n// Sequence of coloured graphs with uncoloured one at the end\nconst t1 = triangleGraph(1);\nconst t2 = triangleGraph(2);\nconst t112 = triangleGraph([1, 1, 2]);\nconst t221 = triangleGraph([2, 2, 1]);\nconst t121 = triangleGraph([1, 2, 1]);\nconst t211 = triangleGraph([2, 1, 1]);\nconst t123 = triangleGraph([1, 2, 3]);\nconst t231 = triangleGraph([2, 3, 1]);\nconst t312 = triangleGraph([3, 1, 2]);\n\nconst s1122 = squareGraph([1, 1, 2, 2]);\nconst s2211 = squareGraph([2, 2, 1, 1]);\nconst s2112 = squareGraph([2, 1, 1, 2]);\nconst s1221 = squareGraph([1, 2, 2, 1]);\nconst s1212 = squareGraph([1, 2, 1, 2]);\nconst s2121 = squareGraph([2, 1, 2, 1]);\n\nconst puzzles3 = [\n    {\n        colourPalette: 1,\n        graphs: [t1, t1, t1, null],\n        answer: [t1]\n    }, {\n        colourPalette: 2,\n        graphs: [t1, t2, t1, t2, null],\n        answer: [t1]\n    }, {\n        colourPalette: 2,\n        graphs: [t112, t221, t112, t221, null],\n        answer: [t112]\n    }, {\n        colourPalette: 2,\n        graphs: [s1122, s2211, s1122, s2211, null],\n        answer: [s1122]\n    }, {\n        colourPalette: 2,\n        graphs: [s1212, s2121, s1212, s2121, s1212, null],\n        answer: [s2121]\n    }, {\n        colourPalette: 2,\n        graphs: [s1122, s1221, s2211, null],\n        answer: [s2112]\n    }, {\n        colourPalette: 2,\n        graphs: [t112, t121, t211, t112, t121, null],\n        answer: [t211]\n    }, {\n        colourPalette: 3,\n        graphs: [t123, t231, t312, t123, null],\n        answer: [t312]\n    }\n];\n\nconst puzzles = [puzzles1, puzzles2, puzzles3];\n\nconst correctSequence = ({ sequence, target }) =>\n    sequencesMatch(sequence, target, 'colour');\n\nconst correctGraphSequence = ({ sequence, target }) =>\n    sequence.every((graph, index) =>\n        sequencesMatch(graph.nodes, target[index].nodes, 'colour')\n    );\n\nconst ColourableSequence = (puzzle, selectedColour, update) => {\n    const colourItem = index => {\n        puzzle.sequence[index].colour = selectedColour;\n        update(puzzle);\n    }\n\n    return <Sequence {...puzzle} colourItem={colourItem}/>\n};\n\nexport const Sequences = (n) => {\n    if (n < 2) {\n        return <PuzzlePage\n            puzzles={puzzles[n]}\n            evaluate={correctSequence}\n            getPuzzleObject={getSequenceObject}\n            displayPuzzle={ColourableSequence} />\n    } else {\n        return <PuzzlePage\n            puzzles={puzzles[n]}\n            evaluate={correctGraphSequence}\n            getPuzzleObject={getGraphSequence}\n            displayPuzzle={GraphSequence} />\n    }\n}\n","import React from 'react';\n\n\nconst Categorisation1 = () => <g>\n    <g className=\"categories\">\n        <circle className=\"colour-1\" cx=\"-24\" cy=\"0\" r=\"23\" />\n        <circle className=\"colour-2\" cx=\"24\" cy=\"0\" r=\"23\" />\n    </g>\n    <g className=\"graph-edges\">\n        <line x1=\"30\" y1=\"0\" x2=\"18\" y2=\"0\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-24\" cy=\"0\" r=\"4\" />\n        <circle className=\"colour-1\" cx=\"32\" cy=\"0\" r=\"4\" />\n        <circle className=\"colour-1\" cx=\"16\" cy=\"0\" r=\"4\" />\n    </g>\n</g>\n\nconst Categorisation2 = () => <g>\n    <g className=\"categories\">\n        <circle className=\"colour-1\" cx=\"-24\" cy=\"0\" r=\"23\" />\n        <circle className=\"colour-2\" cx=\"24\" cy=\"0\" r=\"23\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-24\" cy=\"0\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"24\" cy=\"0\" r=\"8\" />\n    </g>\n</g>\n\nconst Categorisation3 = () => <g>\n    <g className=\"categories\">\n        <circle className=\"colour-1\" cx=\"-20\" cy=\"-20\" r=\"19\" />\n        <circle className=\"colour-2\" cx=\"20\" cy=\"-20\" r=\"19\" />\n        <circle className=\"colour-2\" cx=\"-20\" cy=\"20\" r=\"19\" />\n        <circle className=\"colour-3\" cx=\"20\" cy=\"20\" r=\"19\" />\n    </g>\n    <g className=\"graph-edges\">\n        <line x1=\"-25\" y1=\"-20\" x2=\"-15\" y2=\"-20\" />\n        <line x1=\"25\" y1=\"-20\" x2=\"15\" y2=\"-20\" />\n        <line x1=\"-25\" y1=\"20\" x2=\"-15\" y2=\"20\" />\n        <line x1=\"25\" y1=\"20\" x2=\"15\" y2=\"20\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-28\" cy=\"-20\" r=\"4\" />\n        <circle className=\"colour-1\" cx=\"-12\" cy=\"-20\" r=\"4\" />\n        <circle className=\"colour-1\" cx=\"28\" cy=\"-20\" r=\"4\" />\n        <circle className=\"colour-2\" cx=\"12\" cy=\"-20\" r=\"4\" />\n        <circle className=\"colour-1\" cx=\"-28\" cy=\"20\" r=\"4\" />\n        <circle className=\"colour-2\" cx=\"-12\" cy=\"20\" r=\"4\" />\n        <circle className=\"colour-2\" cx=\"28\" cy=\"20\" r=\"4\" />\n        <circle className=\"colour-2\" cx=\"12\" cy=\"20\" r=\"4\" />\n    </g>\n</g>\n\n    export default [Categorisation1, Categorisation2, Categorisation3];\n","import React from 'react';\nimport { getPointsOnACircle } from '../../utils/graphUtils';\nimport { isColourable } from './utils';\n\n\nconst getCirclePackedInCircle = (R, n) => {\n    const phi = Math.PI * (0.5 - 1 / n);\n    const cPhi = Math.cos(phi);\n    const r = R / (1 + cPhi);\n    const points = getPointsOnACircle(n, { r });\n\n    return {\n        categoryPositions: points,\n        categorySize: r * cPhi\n    };\n};\n\nexport const Categories = ({ size, categories, colourCategory }) => {\n    const { categoryPositions, categorySize } = getCirclePackedInCircle(size, categories.length);\n\n    return <g>\n        { categories.map((category, i) => {\n            let transform = `translate(${ categoryPositions[i][0] } ${ categoryPositions[i][1] })`;\n            if (category.rotate) {\n                transform += ` rotate(${ category.rotate })`;\n            }\n\n            return <g key={i} transform={transform}>\n                <circle\n                    {...isColourable(category, i, colourCategory, 'category')}\n                    r={categorySize * 0.95}\n                    />\n                <g className=\"no-pointer\">\n                    { category.component }\n                </g>\n            </g>\n        })}\n    </g>\n}\n","import React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Graph } from './PuzzleComponents/Graph';\nimport { Categories } from './PuzzleComponents/Categories';\nimport { getCategoryObjects, getGraphObject } from './puzzleLoaders';\nimport {\n    linearGraph,\n    loopGraph,\n    triangleGraph,\n    getPointsOnACircle,\n    getLineOfEdges,\n    getLoopOfEdges\n} from '../utils/graphUtils';\nimport { allItemsColoured, sequencesAreEquivalent } from '../utils/evaluation';\n\n\n// Graphs are all the same colour and need to be match by shape\nconst puzzle1 = [\n    {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: { nodes: [[0, 0, 1]] }},\n            { type: 2, item: linearGraph([1, 1]) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, copies: 3, item: linearGraph([1, 1, 1]) },\n            { type: 2, copies: 2, item: triangleGraph(1, 0.8) }\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            { type: 1, copies: 2, item: linearGraph([1, 1, 1]) },\n            { type: 2, copies: 2, item: triangleGraph(1, 0.8) },\n            { type: 3, copies: 2, item: {\n                nodes: [[0.5, 0.5], [-0.5, 0.5], [0.5, -0.5]],\n                edges: [[0, 1], [0, 2]],\n                colour: 1\n            }}\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            { type: 1, copies: 2, item: loopGraph([1, 1, 1, 1], 0.8) },\n            {\n                type: 2,\n                copies: 3,\n                item: {\n                    nodes: getPointsOnACircle(4, { r: 0.8 }),\n                    edges: getLineOfEdges(4),\n                    colour: 1\n                }\n            }, {\n                type: 3,\n                item: {\n                    nodes: getPointsOnACircle(4, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [0, 3]],\n                    colour: 1\n                }\n            },\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            {\n                type: 1,\n                copies: 2,\n                item: {\n                    nodes: getPointsOnACircle(4, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [0, 3]],\n                    colour: 1\n                }\n            }, {\n                type: 2,\n                copies: 2,\n                item: {\n                    nodes: getPointsOnACircle(4, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [2, 3]],\n                    colour: 1\n                }\n            }, {\n                type: 3,\n                copies: 2,\n                item: {\n                    nodes: getPointsOnACircle(4, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [0, 3], [2, 3]],\n                    colour: 1\n                }\n            },\n        ]\n    }, {\n        colourPalette: 4,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 1, 1, 1, 1], 0.8) },\n            {\n                type: 2,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(5, { r: 0.8 }),\n                    edges: getLineOfEdges(5),\n                    colour: 1\n                }\n            }, {\n                type: 3 ,\n                copies: 2,\n                item: {\n                    nodes: getPointsOnACircle(5, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [0, 3], [0, 4]],\n                    colour: 1\n                }\n            }, {\n                type: 4,\n                item: {\n                    nodes: getPointsOnACircle(5, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [0, 3], [3, 4]],\n                    colour: 1\n                }\n            }\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            {\n                type: 1,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(6, { r: 0.9 }),\n                    edges: ([[0, 1], [1, 2], [2, 5], [4, 5], [3, 4]]),\n                    colour: 1\n                }\n            }, {\n                type: 2,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(6, { r: 0.9 }),\n                    edges: ([[0, 1], [1, 2], [2, 4], [4, 5], [3, 4]]),\n                    colour: 1\n                }\n            }, {\n                type: 3,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(6, { r: 0.9 }),\n                    edges: ([[0, 1], [1, 2], [1, 4], [4, 5], [3, 4]]),\n                    colour: 1\n                }\n            }\n        ]\n    }, {\n        colourPalette: 4,\n        randomRotate: true,\n        categories: [\n            {\n                type: 1,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(6),\n                    edges: getLoopOfEdges(6).concat([[0, 3], [0, 4], [1, 5]]),\n                    colour: 1\n                }\n            }, {\n                type: 2,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(6),\n                    edges: getLoopOfEdges(6).concat([[0, 3], [0, 4], [1, 4]]),\n                    colour: 1\n                }\n            }, {\n                type: 3,\n                copies: 1, \n                item: {\n                    nodes: getPointsOnACircle(6),\n                    edges: getLoopOfEdges(6).concat([[0, 3], [0, 4], [2, 4]]),\n                    colour: 1\n                }\n            }, {\n                type: 4,\n                copies: 1, \n                item: {\n                    nodes: getPointsOnACircle(6),\n                    edges: getLoopOfEdges(6).concat([[0, 2], [0, 4], [1, 5]]),\n                    colour: 1\n                }\n            }\n        ]\n    }\n]\n\n// Graphs are all the same shape and orientation and need to be matched by colour\nconst puzzle2 = [\n\t{\n        colourPalette: 2,\n        categories: [\n            { type: 1, item: { nodes: [[0, 0, 1]] }},\n            { type: 2, item: { nodes: [[0, 0, 2]] }},\n        ]\n    }, {\n\t\tcolourPalette: 2,\n        categories: [\n            { type: 1, item: linearGraph([1, 1]) },\n            { type: 1, item: linearGraph([1, 1]) },\n            { type: 2, item: linearGraph([2, 2]) },\n            { type: 2, item: linearGraph([2, 2]) },\n        ]\n    }, {\n\t\tcolourPalette: 3,\n        categories: [\n            { type: 1, item: linearGraph([1, 1]) },\n            { type: 2, item: linearGraph([1, 2]) },\n            { type: 2, item: linearGraph([1, 2]) },\n            { type: 3, item: linearGraph([2, 2]) },\n        ]\n    }, {\n        colourPalette: 2,\n        categories: [\n            { type: 1, item: linearGraph([1, 2, 1]) },\n            { type: 1, item: linearGraph([1, 2, 1]) },\n            { type: 2, item: linearGraph([2, 1, 2]) },\n            { type: 2, item: linearGraph([2, 1, 2]) },\n        ]\n    }, {\n        colourPalette: 3,\n        categories: [\n            { type: 1, item: linearGraph([1, 1, 2]) },\n            { type: 1, item: linearGraph([1, 1, 2]) },\n            { type: 2, item: linearGraph([1, 2, 1]) },\n            { type: 3, item: linearGraph([2, 1, 1]) },\n            { type: 3, item: linearGraph([2, 1, 1]) },\n        ]\n    }, {\n        colourPalette: 3,\n        categories: [\n            { type: 1, item: loopGraph([1, 1, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1], 0.75) },\n            { type: 3, item: loopGraph([2, 1, 1], 0.75) },\n            { type: 3, item: loopGraph([2, 1, 1], 0.75) },\n        ]\n    }, {\n        colourPalette: 3,\n        categories: [\n            { type: 1, item: loopGraph([1, 1, 2, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 1, 2, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1, 2], 0.75) },\n            { type: 3, item: loopGraph([2, 1, 2, 1], 0.75) },\n            { type: 3, item: loopGraph([2, 1, 2, 1], 0.75) },\n        ]\n    }, {\n        colourPalette: 4,\n        categories: [\n            { type: 1, item: loopGraph([1, 2, 3, 1, 2, 3], 0.75) },\n            { type: 2, item: loopGraph([3, 2, 1, 3, 2, 1], 0.75) },\n            { type: 2, item: loopGraph([3, 2, 1, 3, 2, 1], 0.75) },\n            { type: 3, item: loopGraph([1, 2, 3, 2, 3, 1], 0.75) },\n            { type: 3, item: loopGraph([1, 2, 3, 2, 3, 1], 0.75) },\n            { type: 4, item: loopGraph([3, 2, 1, 2, 3, 1], 0.75) },\n        ]\n    }\n];\n\n// Graphs are all the same shape but rotated and need to be matched by colour\nconst puzzle3 = [\n    {\n        colourPalette: 3,\n        categories: [\n            { type: 1, item: linearGraph([1, 1]) },\n            { type: 2, item: linearGraph([1, 2]) },\n            { type: 2, item: linearGraph([2, 1]) },\n            { type: 3, item: linearGraph([2, 2]) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: linearGraph([1, 2, 1]) },\n            { type: 1, item: linearGraph([1, 2, 1]) },\n            { type: 1, item: linearGraph([1, 2, 1]) },\n            { type: 2, item: linearGraph([2, 1, 2]) },\n            { type: 2, item: linearGraph([2, 1, 2]) },\n            { type: 2, item: linearGraph([2, 1, 2]) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 2, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 2, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 2, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 1, 2], 0.75) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 1, 2, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 1, 2, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 1, 2, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1, 2], 0.75) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 2, 3], 0.75) },\n            { type: 1, item: loopGraph([1, 2, 3], 0.75) },\n            { type: 2, item: loopGraph([1, 3, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 3, 2], 0.75) },\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 1, 2, 3], 0.75) },\n            { type: 1, item: loopGraph([1, 1, 2, 3], 0.75) },\n            { type: 2, item: loopGraph([1, 1, 3, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 1, 3, 2], 0.75) },\n            { type: 3, item: loopGraph([1, 2, 1, 3], 0.75) },\n            { type: 3, item: loopGraph([1, 2, 1, 3], 0.75) },\n        ]\n    }, {\n        colourPalette: 4,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 2, 3, 4], 0.75) },\n            { type: 1, item: loopGraph([1, 2, 3, 4], 0.75) },\n            { type: 2, item: loopGraph([1, 4, 3, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 4, 3, 2], 0.75) },\n            { type: 3, item: loopGraph([1, 3, 2, 4], 0.75) },\n            { type: 4, item: loopGraph([1, 2, 4, 3], 0.75) },\n        ]\n    }, {\n        colourPalette: 4,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 2, 3, 1, 2, 3], 0.75) },\n            { type: 2, item: loopGraph([1, 3, 2, 1, 3, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 3, 2, 1, 3, 2], 0.75) },\n            { type: 3, item: loopGraph([1, 2, 3, 2, 3, 1], 0.75) },\n            { type: 4, item: loopGraph([1, 2, 1, 3, 2, 3], 0.75) },\n            { type: 4, item: loopGraph([1, 2, 1, 3, 2, 3], 0.75) },\n        ]\n    }\n];\n\nconst puzzles = [puzzle1, puzzle2, puzzle3];\n\nconst displayCategories = (categories, selectedColour, update) => {\n    categories.forEach(item => {\n        item.component = <Graph {...getGraphObject(item.object)} />\n    });\n\n    const colourCategory = index => {\n        categories[index].colour = selectedColour;\n        update(categories);\n    };\n\n    return <Categories size=\"128\" categories={categories} colourCategory={colourCategory} />\n};\n\nconst evaluate = puzzle =>\n    allItemsColoured(puzzle) &&\n    sequencesAreEquivalent(puzzle.map(item => item.category), puzzle.map(item => item.colour));\n\nexport const Categorisation = (n) =>\n    <PuzzlePage\n        puzzles={puzzles[n]}\n        evaluate={evaluate}\n        getPuzzleObject={getCategoryObjects}\n        displayPuzzle={displayCategories} />\n","import ColourGraphIcons from './PuzzleMap/Icons/ColourGraphs';\nimport { ColourGraph } from './Puzzles/ColourGraphs';\n\nimport ColourMapIcons from './PuzzleMap/Icons/ColourMaps';\nimport { ColourMap } from './Puzzles/ColourMaps';\n\nimport TransformationIcons from './PuzzleMap/Icons/Transformations';\nimport { Transformations } from './Puzzles/Transformations';\n\nimport SequencesIcons from './PuzzleMap/Icons/Sequences';\nimport { Sequences } from './Puzzles/Sequences';\n\nimport CategorisationIcons from './PuzzleMap/Icons/Categorisation';\nimport { Categorisation } from './Puzzles/Categorisation';\n\n\n// Mapping puzzle names to URLS, icons and components\nexport const puzzleData = {};\n\naddData('colour-graphs', 'colour-graphs', ColourGraphIcons, ColourGraph, 3);\naddData('colour-maps', 'colour-maps', ColourMapIcons, ColourMap, 2);\naddData('categorisation', 'categorisation', CategorisationIcons, Categorisation, 3);\naddData('transformations', 'transformations', TransformationIcons, Transformations, 4);\naddData('sequences', 'sequences', SequencesIcons, Sequences, 3);\n\nfunction addData(name, slug, icons, components, n) {\n    for (let i = 0; i < n; i++) {\n        puzzleData[`${ name }-${ i }`] = {\n            slug: `${ slug }-${ i }`,\n            icon: icons[i](),\n            component: () => components(i)\n        }\n    }\n}\n\nfunction getData(name, n) {\n    return Array\n        .from({ length: n })\n        .map((_, index) => puzzleData[`${ name }-${ index }`]);\n}\n\n// Puzzle data grouped into categories\nexport const puzzleLayout = [\n    getData('colour-graphs', 3),\n    getData('colour-maps', 2),\n    getData('categorisation', 3),\n    getData('transformations', 4),\n    getData('sequences', 3),\n];\n","import React from 'react';\nimport './icons.css';\n\nexport default (props) =>\n    <svg viewBox=\"-55 -55 110 110\">\n        <defs>\n            <filter id=\"glow-spotlight\" x=\"-200%\" y=\"-200%\" width=\"400%\" height=\"400%\">\n                <feGaussianBlur stdDeviation=\"2\" result=\"colouredBlur\" />\n                <feMerge>\n                    <feMergeNode in=\"coloredBlur\"/>\n                    <feMergeNode in=\"SourceGraphic\"/>\n                </feMerge>\n            </filter>\n        </defs>\n        <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n        <circle className=\"spotlight-outline\" cx=\"0\" cy=\"0\" r=\"49\" />\n        { props.children }\n    </svg>\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { puzzleLayout } from '../puzzleData';\nimport Icon from './Icons/Icon';\nimport './puzzleMap.css';\n\n\nexport default () =>\n    <main className=\"front-page\">\n        <nav className=\"puzzle-map\">\n            {\n                puzzleLayout.map((section, i) =>\n                    <div className=\"puzzle-section\" key={i}>{\n                        section.map(\n                            ({ slug, icon }) => <Link className=\"map-link\" key={slug} to={'/pattern-puzzles/' + slug}>\n                                <Icon>{ icon }</Icon>\n                            </Link>\n                        )\n                    }</div>\n                )\n            }\n        </nav>\n    </main>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { puzzleData } from './puzzleData';\nimport PuzzleMap from './PuzzleMap/PuzzleMap';\n\nimport './base.css';\n\n\nconst BASE_URL = '/pattern-puzzles';\n\nexport default () =>\n    <Router>\n        <Switch>\n            {\n                Object.values(puzzleData).map(({ slug, component }) =>\n                    <Route key={slug} path={`${ BASE_URL }/${ slug }`} component={component} />\n                )\n            }\n            <Route path={`${BASE_URL}/`} component={PuzzleMap} />\n        </Switch>\n    </Router>\n"],"sourceRoot":""}