{"version":3,"sources":["Icons/ColourGraphs.js","Icons/ColourMaps.js","PuzzleMap.js","Toolbars/Toolbar.js","Puzzles/PuzzlePage.js","Puzzles/PuzzleComponents/Graph.js","utils/getPuzzleObjects.js","utils/graphUtils.js","utils/evaluationUtils.js","Puzzles/ColourGraphs.js","Puzzles/PuzzleComponents/Map.js","Puzzles/ColourMaps.js","Puzzles/PuzzleComponents/Sequence.js","Puzzles/RepeatingPatterns.js","serviceWorker.js","index.js","App.js"],"names":["ColourGraphIcon1","react_default","a","createElement","viewBox","className","cx","cy","r","x","y","width","height","fill","x1","y1","x2","y2","color","ColourGraphIcon2","ColourGraphIcon3","d","ColourMapIcon1","rx","ry","PuzzleMap","react_router_dom","to","ColourGraphs_ColourGraphIcon1","ColourGraphs_ColourGraphIcon2","ColourGraphs_ColourGraphIcon3","ColourMaps_ColourMapIcon1","DELTA_ANGLE","Math","PI","Toolbar","_ref","puzzle","nColours","selectedColour","angle","colours","_loop","i","cos","sin","concat","setColour","setState","push","role","aria-checked","tabIndex","key","onClick","onKeyDown","evt","callback","keyCode","handleKeyDown","selectColourIndicator","COLOURS","PuzzlePage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","index","solved","update","bind","assertThisInitialized","getPuzzle","nextPuzzle","childState","evaluate","puzzles","length","aria-label","nextState","_this$props","getPuzzleObject","_this$props2","displayPuzzle","_this$state","colourPalette","puzzleElement","style","getNextPuzzleButton","id","preserveAspectRatio","result","in","dx","dy","stdDeviation","in2","mode","React","Component","Graph","nodes","edges","colourNode","puzzlePage","page","newNodes","slice","colour","_this2","_this$state$nodes","_this$state$edges","map","edge","node","getGraphObject","_ref$nodes","_ref$edges","_ref$size","size","_ref$r","nodeObjects","_ref2","_ref3","slicedToArray","edgeObjects","_ref4","_ref5","n1","n2","node1","node2","getMapObject","_ref6","_ref6$regions","regions","_ref6$connections","connections","_ref6$size","regionObjects","_ref7","_ref8","connectionObjects","_ref9","_ref10","getSequenceObject","_ref11","pattern","answer","patternObjects","item","fixed","sequence","target","getNodesOnCircle","offset","n","Array","isArray","dAngle","getLoopOfEdges","start","stop","undefined","allItemsColoured","items","every","allConnectedItemsHaveDifferentColours","cxns","cxn","puzzles1","puzzles2","scale","puzzles3","ColourGraph","PuzzlePage_PuzzlePage","graphObject","Graph_Graph","assign","nodeRadius","ColourGraph1","ColourGraphs_ColourGraph","ColourGraph2","ColourGraph3","Map","newRegions","region","ColourMap","mapObject","Map_Map","ColourMap1","ColourMaps_ColourMap","newSequence","_this3","min","startX","RepeatingPatterns","seq1","seq2","attr","sequencesMatch","Sequence_Map","RepeatingPatterns1","RepeatingPatterns_RepeatingPatterns","Boolean","window","location","hostname","match","ReactDOM","render","react_router","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f064adbe.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ColourGraphIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-edges\">\n        <rect x=\"-20\" y=\"-20\" width=\"40\" height=\"40\" fill=\"none\" />\n        <line x1=\"-20\" y1=\"-20\" x2=\"20\" y2=\"20\" />\n        <line x1=\"-20\" y1=\"20\" x2=\"20\" y2=\"-20\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle color=\"rgb(20, 146, 196)\" cx=\"-20\" cy=\"-20\" r=\"8\" />\n        <circle color=\"rgb(196, 20, 96)\" cx=\"-20\" cy=\"20\" r=\"8\" />\n        <circle color=\"rgb(20, 146, 196)\" cx=\"20\" cy=\"20\" r=\"8\" />\n        <circle color=\"rgb(196, 20, 96)\" cx=\"20\" cy=\"-20\" r=\"8\" />\n        <circle color=\"rgb(147, 20, 198)\" cx=\"0\" cy=\"0\" r=\"8\" />\n    </g>\n</svg>\n\nexport const ColourGraphIcon2 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-edges\">\n        <rect x=\"-32\" y=\"-16\" width=\"64\" height=\"32\" />\n        <line x1=\"0\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n        <line x1=\"-32\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n        <line x1=\"32\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle color=\"rgb(20, 146, 196)\" cx=\"-32\" cy=\"-16\" r=\"8\" />\n        <circle color=\"rgb(196, 20, 96)\" cx=\"0\" cy=\"-16\" r=\"8\" />\n        <circle color=\"rgb(20, 146, 196)\" cx=\"32\" cy=\"-16\" r=\"8\" />\n        <circle color=\"rgb(196, 20, 96)\" cx=\"32\" cy=\"16\" r=\"8\" />\n        <circle color=\"rgb(147, 20, 198)\" cx=\"0\" cy=\"16\" r=\"8\" />\n        <circle color=\"rgb(196, 20, 96)\" cx=\"-32\" cy=\"16\" r=\"8\" />\n    </g>\n</svg>\n\nexport const ColourGraphIcon3 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-edges\">\n        <path d=\"M32 0L16 27.7h-32L-32 0 -16 -27.71h32z\" />\n        <line x1=\"16\" y1=\"-27.71\" x2=\"16\" y2=\"27.71\" />\n        <line x1=\"-16\" y1=\"-27.71\" x2=\"-16\" y2=\"27.71\" />\n        <line className=\"edge-outline\" x1=\"-32\" y1=\"0\" x2=\"32\" y2=\"0\" />\n        <line x1=\"-32\" y1=\"0\" x2=\"32\" y2=\"0\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle color=\"rgb(20, 146, 196)\" cx=\"32\" cy=\"0\" r=\"8\" />\n        <circle color=\"rgb(147, 20, 198)\" cx=\"16\" cy=\"27.71\" r=\"8\" />\n        <circle color=\"rgb(196, 20, 96)\" cx=\"-16\" cy=\"27.71\" r=\"8\" />\n        <circle color=\"rgb(147, 20, 198)\" cx=\"-32\" cy=\"0\" r=\"8\" />\n        <circle color=\"rgb(20, 146, 196)\" cx=\"-16\" cy=\"-27.71\" r=\"8\" />\n        <circle color=\"rgb(196, 20, 96)\" cx=\"16\" cy=\"-27.71\" r=\"8\" />\n    </g>\n</svg>\n","import React from 'react';\n\nexport const ColourMapIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-nodes\">\n        <rect color=\"rgb(20, 146, 196)\" x=\"-28\" y=\"-28\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(196, 20, 96)\" x=\"0\" y=\"-28\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(196, 20, 96)\" x=\"-28\" y=\"0\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(20, 146, 196)\" x=\"0\" y=\"0\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(147, 20, 198)\" x=\"-12\" y=\"-12\" width=\"24\" height=\"24\" rx=\"2\" ry=\"2\" />\n    </g>\n</svg>","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport {\n    ColourGraphIcon1,\n    ColourGraphIcon2,\n    ColourGraphIcon3\n } from './Icons/ColourGraphs';\n\nimport { ColourMapIcon1 } from './Icons/ColourMaps';\n\nimport './puzzleMap.css';\n\n\nexport default () =>\n    <main className=\"front-page\">\n        <nav className=\"puzzle-map\">\n            <Link className=\"map-link\" to=\"/colour-graphs-1\"><ColourGraphIcon1/></Link>\n            <Link className=\"map-link\" to=\"/colour-graphs-2\"><ColourGraphIcon2/></Link>\n            <Link className=\"map-link\" to=\"/colour-graphs-3\"><ColourGraphIcon3/></Link>\n            <Link className=\"map-link\" to=\"/colour-maps-1\"><ColourMapIcon1/></Link>\n        </nav>\n    </main>\n","import React from 'react';\n\n\nconst TOOLBAR_R = 112;\nconst DELTA_ANGLE = Math.PI / 20;\n\nconst handleKeyDown = (evt, callback) => {\n    if (evt.key === 'Enter' || evt.keyCode === 32) {\n        callback();\n    }\n};\n\nexport default function ({ puzzle, nColours, selectedColour }) {\n    const r = 6;\n    let angle = Math.PI - DELTA_ANGLE * (nColours - 1) / 2;\n\n    const colours = [];\n    for (let i = 1; i <= nColours; i++) {\n        const cx = (TOOLBAR_R + r) * Math.cos(angle);\n        const cy = (TOOLBAR_R + r) * Math.sin(angle);\n        \n        let className = `colour-palette colour-${i}`;\n        if (selectedColour === i) {\n            className += ' selected';\n        }\n\n        const setColour = () => puzzle.setState({ selectedColour: i });\n\n        colours.push(\n            <circle\n                className={className}\n                role=\"radio\"\n                aria-checked={selectedColour === i}\n                tabIndex=\"0\"\n                key={i}\n                cx={cx}\n                cy={cy}\n                r={r}\n                onClick={setColour}\n                onKeyDown={(evt) => handleKeyDown(evt, setColour) }\n            />\n        );\n\n        angle += DELTA_ANGLE;\n    }\n\n    let selectColourIndicator = \"selected-colour-indicator\";\n    if (selectedColour) {\n        selectColourIndicator += ` colour-${selectedColour}`;\n    }\n\n    return <g className=\"toolbar\">\n        <circle className={selectColourIndicator} r=\"109\" />\n        <g className=\"colour-palette\" role=\"radiogroup\">\n            { colours }\n        </g>\n    </g>;\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Toolbar from '../Toolbars/Toolbar';\n\nimport './puzzle.css';\n\n\nconst COLOURS = [\n    'rgb(30, 20, 20)',\n    'rgb(20, 146, 196)',\n    'rgb(196, 20, 96)',\n    'rgb(147, 20, 198)',\n    'rgb(20, 198, 96)',\n];\n\nexport default class PuzzlePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: 0,\n\t\t\tsolved: false,\n            selectedColour: null,\n        }\n\n        this.update = this.update.bind(this);\n        this.getPuzzle = this.getPuzzle.bind(this);\n        this.nextPuzzle = this.nextPuzzle.bind(this);\n    }\n\n    componentDidMount() {\n        this.getPuzzle(0);\n    }\n\n    update(childState) {\n        this.setState({\n            solved: this.props.evaluate(childState, this.state.puzzle)\n        });\n    }\n\n    getNextPuzzleButton() {\n        if (!this.state.solved) { return null; }\n\n        if (this.state.index < this.props.puzzles.length - 1) {\n            return <div className=\"menu-button next-puzzle-button\" aria-label=\"Next puzzle\">\n                <svg viewBox=\"-10 -10 20 20\">\n                    <circle r=\"9\" onClick={this.nextPuzzle}/>\n                </svg>\n            </div>\n        } else {\n            return <Link to=\"/\" className=\"menu-button next-puzzle-button\" aria-label=\"Puzzle completed\">\n                <svg viewBox=\"-10 -10 20 20\">\n                    <circle r=\"9\" />\n                </svg>\n            </Link>\n        }\n    }\n\n    nextPuzzle() {\n        const nextState = this.state.index + 1;\n        this.setState({\n            index: nextState,\n            solved: false,\n            selectedColour: null\n        });\n        this.getPuzzle(nextState);\n    }\n\n    getPuzzle(index) {\n        const { getPuzzleObject, puzzles } = this.props;\n        this.setState({\n            puzzle: getPuzzleObject(puzzles[index])\n        });\n    }\n\n    render() {\n        const { puzzles, displayPuzzle } = this.props;\n        const { index, selectedColour, puzzle } = this.state;\n        if (!puzzle) { return null; }\n\n        const colourPalette = puzzles[index].colourPalette;\n        const puzzleElement = displayPuzzle(this, puzzle);\n\n        // Determine what the selected colour is if we have selected one\n        const style = selectedColour ? { color: COLOURS[selectedColour] } : {};\n        const className = selectedColour ? \"colour-selected\" : \"\";\n\n        return <main>\n            <nav>\n                <Link to=\"/\" className=\"menu-button back-button\" aria-label=\"Back to menu\">\n                    <svg viewBox=\"-10 -10 20 20\">\n                        <circle r=\"9\" />\n                    </svg>\n                </Link>\n\n                { this.getNextPuzzleButton() }\n            </nav>\n\n            <svg id=\"puzzle-chamber\" viewBox=\"-128 -128 256 256\" preserveAspectRatio=\"xMidYMid slice\">\n                <defs>\n                    <filter id=\"shadow-filter\" x=\"0\" y=\"0\" width=\"120%\" height=\"120%\">\n                        <feOffset result=\"offOut\" in=\"SourceAlpha\" dx=\"2\" dy=\"2\"/>\n                        <feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\"5\" />\n                        <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\n                    </filter>\n                </defs>\n\n                <g id=\"puzzle\" key={index} className={className} style={style}>\n                    { puzzleElement }\n                </g>\n\n                <circle id=\"chamber-window\" r=\"145\" />\n                <Toolbar \n                    puzzle={this}\n                    nColours={colourPalette}\n                    selectedColour={selectedColour}\n                />\n            </svg>\n        </main>\n    }\n};\n","import React from 'react';\nimport './graph.css';\n\n\nexport default class Graph extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nodes: props.nodes,\n            edges: props.edges\n        };\n\n        this.colourNode = this.colourNode.bind(this);\n    }\n\n    colourNode(i) {\n        // Add colour to array of node colours\n        const puzzlePage = this.props.page;\n        const newNodes = this.state.nodes.slice();\n        newNodes[i].colour = puzzlePage.state.selectedColour;\n\n        this.setState({\n            nodes: newNodes\n        });\n\n        puzzlePage.update(this.state);\n    }\n\n    render() {\n        const {\n            nodes = [],\n            edges = []\n        } = this.state;\n\n        return <g className=\"graph\">\n            <g className=\"graph-edges\">\n                { edges.map((edge, i) =>\n                    <g key={i}>\n                        <line\n                            className=\"edge-outline\"\n                            x1={edge.x1}\n                            y1={edge.y1}\n                            x2={edge.x2}\n                            y2={edge.y2}\n                        />\n                        <line\n                            x1={edge.x1}\n                            y1={edge.y1}\n                            x2={edge.x2}\n                            y2={edge.y2}\n                        />\n                    </g>\n                )}\n            </g>\n\n            <g className=\"graph-nodes\">\n                { nodes.map((node, i) => {\n                    let className = \"colourable \";\n                    if (node.colour) {\n                        className += `fill-${node.colour}`;\n                    } else {\n                        className += \"empty-region\";\n                    }\n\n                    return <circle\n                        key={i}\n                        className={className}\n                        cx={node.x}\n                        cy={node.y}\n                        r={node.r}\n                        onClick={() => this.colourNode(i)}\n                    />\n                })}\n            </g>\n        </g>\n    }\n};\n","// Given arrays of node coordinates and edge coordinates, return an object of nodes and edges\nexport function getGraphObject({ nodes=[], edges=[], size=32, r=8 }) {\n    const nodeObjects = nodes.map(([x, y]) => ({\n        x: x * size,\n        y: y * size,\n        r\n    }));\n\n    const edgeObjects = edges.map(([n1, n2]) => {\n        const node1 = nodeObjects[n1];\n        const node2 = nodeObjects[n2];\n        return {\n            node1,\n            node2,\n            x1: node1.x,\n            y1: node1.y,\n            x2: node2.x,\n            y2: node2.y\n        };\n    });\n\n    return {\n        nodes: nodeObjects,\n        edges: edgeObjects\n    };\n}\n\nexport function getMapObject({ regions=[], connections=[], size=1 }) {\n    const regionObjects = regions.map(([x, y, width, height]) => ({\n        x: (x - width / 2) * size,\n        y: (y - height / 2) * size,\n        width: width * size,\n        height: height * size,\n    }));\n\n    const connectionObjects = connections.map(([n1, n2]) => ({\n        node1: regionObjects[n1],\n        node2: regionObjects[n2],\n    }));\n\n    // Create a graph of the map in order to evaluate the solution\n    return {\n        regions: regionObjects,\n        connections: connectionObjects\n    };\n}\n\nexport function getSequenceObject({ pattern, answer }) {\n    const patternObjects = pattern.map(item => ({\n        colour: item,\n        fixed: true\n    }));\n\n    const sequence = patternObjects.concat(\n        answer.map(item => ({ colour: 0 })\n    ));\n    \n    // Target sequence is the existing sequence plus the answer fragment\n    const target = patternObjects.concat(\n        answer.map(item => ({ colour: item })\n    ));\n\n    return { sequence, target };\n}\n","export function getNodesOnCircle(colours, r, offset) {\n    var n;\n    if (Array.isArray(colours)) {\n        n = colours.length;\n    } else {\n        n = colours;\n        colours = new Array(n);\n    }\n\n    var nodes = [];\n    var dAngle = 2 * Math.PI / n;\n    var angle = (offset || 0) - 0.5 * dAngle;\n    r = r || 1\n\n    for (var i = 0; i < n; i++) {\n        nodes.push([\n            r * Math.sin(angle),\n            r * Math.cos(angle),\n            colours[i]\n        ]);\n        angle += dAngle;\n    }\n\n    return nodes;\n}\n\nexport function getLoopOfEdges(start, stop) {\n    if (stop === undefined) {\n        stop = start - 1;\n        start = 0;\n    }\n\n    var edges = [];\n    for (var i = start; i < stop; i++) {\n        edges.push([i, i + 1]);\n    }\n    edges.push([start, stop]);\n    return edges;\n}\n","export function allItemsColoured(items) {\n    return items.every(item => item.colour > 0);\n}\n\nexport function allConnectedItemsHaveDifferentColours(cxns) {\n    return cxns.every(cxn => cxn.node1.colour !== cxn.node2.colour);\n}\n\nexport const sequencesMatch = (seq1, seq2, attr) => {\n    if (seq1.length !== seq2.length) { return false; }\n    for (var i = 0; i < seq1.length; i++) {\n        if (seq1[i][attr] !== seq2[i][attr]) {\n            return false;\n        }\n    }\n    return true;\n};\n","/*\n * Colour all nodes on a graph such that no edges joins two nodes of the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport Graph from './PuzzleComponents/Graph';\nimport { getGraphObject } from '../utils/getPuzzleObjects';\nimport { getNodesOnCircle, getLoopOfEdges } from '../utils/graphUtils';\nimport { allItemsColoured, allConnectedItemsHaveDifferentColours } from '../utils/evaluationUtils';\n\n\nconst puzzles1 = [\n\t{\n\t\tcolourPalette: 1,\n\t\tnodes: [[0, 0]]\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: [[-1, 0], [1, 0]],\n\t\tedges: [[0, 1]],\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: [[-2, 0], [0, 0], [2, 0]],\n\t\tedges: [[0, 1], [1, 2]],\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: getNodesOnCircle(3),\n\t\tedges: getLoopOfEdges(3),\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4),\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4).concat([[1, 3]]),\n\t}, {\n\t\tcolourPalette: 4,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4).concat([[1, 3], [0, 2]]),\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: [[0, 0]].concat(getNodesOnCircle(4)),\n\t\tedges: getLoopOfEdges(1, 4).concat([[0, 1], [0, 2], [0, 3], [0, 4]]),\n\t}\n];\n\nconst puzzles2 = [\n    {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6),\n    }, {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[1, 4]]),\n    }, {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 3]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [1, 4], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [1, 4], [1, 3]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: getNodesOnCircle(3).concat(getNodesOnCircle(3, 2, Math.PI / 3)),\n        edges: getLoopOfEdges(3).concat([[0, 3], [1, 3], [1, 4], [2, 4], [0, 5], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        scale: 16,\n        nodes: getNodesOnCircle(3).concat(getNodesOnCircle(3, 4, Math.PI / 3)),\n        edges: getLoopOfEdges(3)\n            .concat(getLoopOfEdges(3, 5))\n            .concat([[0, 3], [1, 3], [1, 4], [2, 4], [0, 5], [2, 5]]),\n    }\n];\n\n// TODO: Give more colourPalette than required\nconst puzzles3 = [\n    {\n        colourPalette: 2,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6),\n    }, {\n        colourPalette: 2,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [2, 4], [0, 4]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[1, 3], [0, 4], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[2, 4], [1, 3], [0, 4], [1, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 3], [1, 4], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [1, 3], [2, 4], [3, 5], [4, 0], [5, 1]]),\n    }\n];\n\nconst ColourGraph = ({ puzzles }) => {\n\tconst evaluate = ({ nodes, edges }) => \n\t    allItemsColoured(nodes) && allConnectedItemsHaveDifferentColours(edges);\n\n\tconst displayGraph = (page, graphObject) => <Graph page={page} {...graphObject} size={32} nodeRadius={8} />\n\n\treturn <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getGraphObject}\n\t\tdisplayPuzzle={displayGraph} />;\n};\n\nexport const ColourGraph1 = () => <ColourGraph puzzles={puzzles1} />\n\nexport const ColourGraph2 = () => <ColourGraph puzzles={puzzles2} />\n\nexport const ColourGraph3 = () => <ColourGraph puzzles={puzzles3} />\n","import React from 'react';\n\n\nexport default class Map extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            regions: props.regions,\n            connections: props.connections\n        };\n\n        this.colourNode = this.colourNode.bind(this);\n    }\n\n    colourNode(i) {\n        // Add colour to array of node colours\n        const puzzlePage = this.props.page;\n        const newRegions = this.state.regions.slice();\n        newRegions[i].colour = puzzlePage.state.selectedColour;\n\n        this.setState({\n            regions: newRegions\n        });\n\n        puzzlePage.update(this.state);\n    }\n\n    render() {\n        const regions = this.state.regions;\n\n        return <g className=\"graph\">\n            <g className=\"graph-nodes\">\n                { regions.map((region, i) => {\n                    let className = \"colourable \";\n                    if (region.colour) {\n                        className += `fill-${region.colour}`;\n                    } else {\n                        className += \"empty-region\";\n                    }\n\n                    return <rect\n                        key={i}\n                        className={className}\n                        x={region.x}\n                        y={region.y}\n                        width={region.width}\n                        height={region.height}\n                        rx=\"3\"\n                        ry=\"3\"\n                        onClick={() => this.colourNode(i)}\n                    />\n                })}\n            </g>\n        </g>\n    }\n};\n","/*\n * Colour regions on a map such that no two touching regions have the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport Map from './PuzzleComponents/Map';\nimport { getMapObject } from '../utils/getPuzzleObjects';\nimport { allItemsColoured, allConnectedItemsHaveDifferentColours } from '../utils/evaluationUtils';\n\n\nvar puzzles1 = [\n    {\n        colourPalette: 1,\n        regions: [[0, 0, 32, 32]]\n    }, {\n        colourPalette: 2,\n        regions: [[-16, 0, 32, 32], [16, 0, 32, 32]],\n        connections: [[0, 1]]\n    }, {\n        colourPalette: 2,\n        regions: [[-32, 0, 32, 32], [0, 0, 32, 32], [32, 0, 32, 32]],\n        connections: [[0, 1], [1, 2]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [0, -16, 64, 32]],\n        connections: [[0, 1], [1, 2], [0, 2]]\n    }, {\n        colourPalette: 2,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [-16, -16, 32, 32], [16, -16, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [-16, -16, 32, 32], [16, -16, 32, 32], [0, 0, 28, 28]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 3,\n        regions: [[0, 0, 72, 72], [-12, 12, 24, 24], [12, 12, 24, 24], [-12, -12, 24, 24], [12, -12, 24, 24], [0, 0, 24, 24]],\n        connections: [[1, 2], [3, 4], [1, 3], [2, 4], [0, 1], [0, 2], [0, 3], [0, 4], [5, 1], [5, 2], [5, 3], [5, 4]]\n    }, {\n        colourPalette: 4,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [0, -16, 64, 32], [0, 0, 28, 28]],\n        connections: [[0, 1], [0, 2], [0, 3], [1, 2], [1, 3], [2, 3]]\n    }\n];\n\nconst ColourMap = ({ puzzles }) => {\n\tconst evaluate = ({ regions, connections }) => \n\t    allItemsColoured(regions) && allConnectedItemsHaveDifferentColours(connections);\n\n\tconst displayMap = (page, mapObject) => <Map page={page} {...mapObject} />\n\n\treturn <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getMapObject}\n\t\tdisplayPuzzle={displayMap} />;\n};\n\nexport const ColourMap1 = () => <ColourMap puzzles={puzzles1} />","import React from 'react';\n\n\nexport default class Map extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sequence: props.sequence,\n        };\n\n        this.colourNode = this.colourNode.bind(this);\n    }\n\n    colourNode(i) {\n        // Add colour to array of node colours\n        const puzzlePage = this.props.page;\n        const newSequence = this.state.sequence.slice();\n        newSequence[i].colour = puzzlePage.state.selectedColour;\n\n        // Update colour and then update parent page\n        this.setState(\n            { sequence: newSequence },\n            () => puzzlePage.update(this.state)\n        );\n    }\n\n    render() {\n        const sequence = this.state.sequence;\n\n        const size = Math.min(24, 160 / sequence.length);\n        const startX = -(sequence.length * size) / 2;\n\n        return <g className=\"sequence\">\n            { sequence.map((item, i) => {\n                let className;\n                let onClick;\n\n                if (!item.fixed) {\n                    onClick = () => this.colourNode(i);\n                    className = \"colourable \";\n                    if (item.colour) {\n                        className += `fill-${item.colour}`;\n                    } else {\n                        className += \"empty-region\";\n                    }\n                } else {\n                    className = `fill-${item.colour}`;\n                }\n\n                return <rect\n                    key={i}\n                    className={className}\n                    x={startX + i * size }\n                    y={-size / 2}\n                    width={size - 1}\n                    height={size - 1}\n                    rx=\"3\"\n                    ry=\"3\"\n                    onClick={onClick}\n                />\n            })}\n        </g>\n    }\n};\n","/*\n * Colour regions on a map such that no two touching regions have the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport Sequence from './PuzzleComponents/Sequence';\nimport { getSequenceObject } from '../utils/getPuzzleObjects';\nimport { allItemsColoured, sequencesMatch } from '../utils/evaluationUtils';\n\n\nconst puzzles1 = [\n    {\n        colourPalette: 1,\n        pattern: [1, 1, 1, 1],\n        answer: [1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 1, 1],\n        answer: [1, 1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 2, 1, 2],\n        answer: [1, 2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 3, 1, 2, 3],\n        answer: [1, 2, 3]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 2, 2, 1, 1],\n        answer: [2, 2]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 2, 1, 2, 2],\n        answer: [1, 2, 2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 2, 3, 3, 3, 1, 2, 2],\n        answer: [3, 3, 3]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 1, 2, 1, 2, 1, 1, 2],\n        answer: [1, 2, 1, 1]\n    }\n];\n\nconst RepeatingPatterns = ({ puzzles }) => {\n\tconst evaluate = ({ sequence }, { target }) => {\n        return allItemsColoured(sequence) && sequencesMatch(sequence, target, 'colour');\n    }\n\n\tconst displaySequence = (page, sequence) => <Sequence page={page} {...sequence} />\n\n\treturn <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getSequenceObject}\n\t\tdisplayPuzzle={displaySequence} />;\n};\n\nexport const RepeatingPatterns1 = (props) => <RepeatingPatterns puzzles={puzzles1} {...props} />","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport PuzzleMap from './PuzzleMap';\nimport {\n    ColourGraph1,\n    ColourGraph2,\n    ColourGraph3\n } from './Puzzles/ColourGraphs';\n\n import { ColourMap1 } from './Puzzles/ColourMaps';\n import { RepeatingPatterns1 } from './Puzzles/RepeatingPatterns';\n\nimport './base.css';\nimport './puzzle.css';\nimport './Icons/icons.css';\n\n\nexport default () =>\n    <Router>\n        <Switch>\n            <Route path=\"/colour-graphs-1\" component={ColourGraph1} />\n            <Route path=\"/colour-graphs-2\" component={ColourGraph2} />\n            <Route path=\"/colour-graphs-3\" component={ColourGraph3} />\n            <Route path=\"/colour-maps-1\" component={ColourMap1} />\n            <Route path=\"/repeating-patterns-1\" component={RepeatingPatterns1} />\n            <Route path=\"/\" component={PuzzleMap} />\n        </Switch>\n    </Router>\n"],"sourceRoot":""}