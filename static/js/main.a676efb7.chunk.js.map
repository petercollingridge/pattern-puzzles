{"version":3,"sources":["PuzzleMap.js","Icons/ColourGraphs.js","Icons/ColourMaps.js","Icons/RepeatingPatterns.js","Toolbars/Toolbar.js","Puzzles/PuzzlePage.js","Puzzles/PuzzleComponents/Graph.js","utils/getPuzzleObjects.js","utils/graphUtils.js","utils/evaluationUtils.js","Puzzles/ColourGraphs.js","Puzzles/PuzzleComponents/Map.js","Puzzles/ColourMaps.js","Puzzles/PuzzleComponents/Sequence.js","Puzzles/RepeatingPatterns.js","serviceWorker.js","index.js","App.js"],"names":["puzzles","react_default","a","createElement","viewBox","className","cx","cy","r","x","y","width","height","fill","x1","y1","x2","y2","color","d","rx","ry","PuzzleMap","map","section","i","key","_ref","_ref2","Object","slicedToArray","url","icon","react_router_dom","to","DELTA_ANGLE","Math","PI","Toolbar","puzzle","nColours","selectedColour","angle","colours","_loop","cos","sin","concat","setColour","setState","push","role","aria-checked","tabIndex","onClick","onKeyDown","evt","callback","keyCode","handleKeyDown","selectColourIndicator","COLOURS","PuzzlePage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","index","solved","update","bind","assertThisInitialized","getPuzzle","nextPuzzle","childState","evaluate","length","aria-label","nextState","_this$props","getPuzzleObject","_this$props2","displayPuzzle","_this$state","colourPalette","puzzleElement","style","getNextPuzzleButton","id","preserveAspectRatio","result","in","dx","dy","stdDeviation","in2","mode","React","Component","Graph","nodes","edges","colourNode","puzzlePage","page","newNodes","slice","colour","_this2","_this$state$nodes","_this$state$edges","edge","node","getGraphObject","_ref$nodes","_ref$edges","_ref$size","size","_ref$r","nodeObjects","_ref3","edgeObjects","_ref4","_ref5","n1","n2","node1","node2","getMapObject","_ref6","_ref6$regions","regions","_ref6$connections","connections","_ref6$size","regionObjects","_ref7","_ref8","connectionObjects","_ref9","_ref10","getSequenceObject","_ref11","pattern","answer","patternObjects","item","fixed","sequence","target","getNodesOnCircle","offset","n","Array","isArray","dAngle","getLoopOfEdges","start","stop","undefined","allItemsColoured","items","every","allConnectedItemsHaveDifferentColours","cxns","cxn","puzzles1","puzzles2","scale","puzzles3","ColourGraph","PuzzlePage_PuzzlePage","graphObject","Graph_Graph","assign","nodeRadius","ColourGraph1","ColourGraphs_ColourGraph","ColourGraph2","ColourGraph3","Map","newRegions","region","ColourMap","mapObject","Map_Map","ColourMap1","ColourMaps_ColourMap","ColourMap2","newSequence","_this3","min","startX","RepeatingPatterns","seq1","seq2","attr","sequencesMatch","Sequence_Map","RepeatingPatterns1","RepeatingPatterns_RepeatingPatterns","Boolean","window","location","hostname","match","ReactDOM","render","react_router","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a676efb7.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport {\n    ColourGraphIcon1,\n    ColourGraphIcon2,\n    ColourGraphIcon3\n } from './Icons/ColourGraphs';\n\nimport {\n    ColourMapIcon1,\n    ColourMapIcon2,\n} from './Icons/ColourMaps';\nimport { RepeatingPatternsIcon1 } from './Icons/RepeatingPatterns';\n\nimport './puzzleMap.css';\n\n\nconst puzzles = [\n    [\n        ['colour-graphs-1', <ColourGraphIcon1/>],\n        ['colour-graphs-2', <ColourGraphIcon2/>],\n        ['colour-graphs-3', <ColourGraphIcon3/>]\n    ],\n    [\n        ['colour-maps-1', <ColourMapIcon1/>],\n        ['colour-maps-2', <ColourMapIcon2/>],\n    ],\n    [['repeating-patterns-1', <RepeatingPatternsIcon1/>]],\n];\n\n\nexport default () =>\n    <main className=\"front-page\">\n        <nav className=\"puzzle-map\">\n            {\n                puzzles.map((section, i) =>\n                    <div className=\"puzzle-section\" key={i}>{\n                        section.map(\n                            ([url, icon]) => <Link className=\"map-link\" key={url} to={'/' + url}>\n                                { icon }\n                            </Link>\n                        )\n                    }</div>\n                )\n            }\n        </nav>\n    </main>\n","import React from 'react';\n\nexport const ColourGraphIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-edges\">\n        <rect x=\"-20\" y=\"-20\" width=\"40\" height=\"40\" fill=\"none\" />\n        <line x1=\"-20\" y1=\"-20\" x2=\"20\" y2=\"20\" />\n        <line x1=\"-20\" y1=\"20\" x2=\"20\" y2=\"-20\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle color=\"rgb(20, 146, 196)\" cx=\"-20\" cy=\"-20\" r=\"8\" />\n        <circle color=\"rgb(196, 20, 96)\" cx=\"-20\" cy=\"20\" r=\"8\" />\n        <circle color=\"rgb(20, 146, 196)\" cx=\"20\" cy=\"20\" r=\"8\" />\n        <circle color=\"rgb(196, 20, 96)\" cx=\"20\" cy=\"-20\" r=\"8\" />\n        <circle color=\"rgb(147, 20, 198)\" cx=\"0\" cy=\"0\" r=\"8\" />\n    </g>\n</svg>\n\nexport const ColourGraphIcon2 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-edges\">\n        <rect x=\"-32\" y=\"-16\" width=\"64\" height=\"32\" />\n        <line x1=\"0\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n        <line x1=\"-32\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n        <line x1=\"32\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle color=\"rgb(20, 146, 196)\" cx=\"-32\" cy=\"-16\" r=\"8\" />\n        <circle color=\"rgb(196, 20, 96)\" cx=\"0\" cy=\"-16\" r=\"8\" />\n        <circle color=\"rgb(20, 146, 196)\" cx=\"32\" cy=\"-16\" r=\"8\" />\n        <circle color=\"rgb(196, 20, 96)\" cx=\"32\" cy=\"16\" r=\"8\" />\n        <circle color=\"rgb(147, 20, 198)\" cx=\"0\" cy=\"16\" r=\"8\" />\n        <circle color=\"rgb(196, 20, 96)\" cx=\"-32\" cy=\"16\" r=\"8\" />\n    </g>\n</svg>\n\nexport const ColourGraphIcon3 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-edges\">\n        <path d=\"M32 0L16 27.7h-32L-32 0 -16 -27.71h32z\" />\n        <line x1=\"16\" y1=\"-27.71\" x2=\"16\" y2=\"27.71\" />\n        <line x1=\"-16\" y1=\"-27.71\" x2=\"-16\" y2=\"27.71\" />\n        <line className=\"edge-outline\" x1=\"-32\" y1=\"0\" x2=\"32\" y2=\"0\" />\n        <line x1=\"-32\" y1=\"0\" x2=\"32\" y2=\"0\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle color=\"rgb(20, 146, 196)\" cx=\"32\" cy=\"0\" r=\"8\" />\n        <circle color=\"rgb(147, 20, 198)\" cx=\"16\" cy=\"27.71\" r=\"8\" />\n        <circle color=\"rgb(196, 20, 96)\" cx=\"-16\" cy=\"27.71\" r=\"8\" />\n        <circle color=\"rgb(147, 20, 198)\" cx=\"-32\" cy=\"0\" r=\"8\" />\n        <circle color=\"rgb(20, 146, 196)\" cx=\"-16\" cy=\"-27.71\" r=\"8\" />\n        <circle color=\"rgb(196, 20, 96)\" cx=\"16\" cy=\"-27.71\" r=\"8\" />\n    </g>\n</svg>\n","import React from 'react';\n\n\nexport const ColourMapIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-nodes\">\n        <rect color=\"rgb(20, 146, 196)\" x=\"-28\" y=\"-28\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(196, 20, 96)\" x=\"0\" y=\"-28\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(196, 20, 96)\" x=\"-28\" y=\"0\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(20, 146, 196)\" x=\"0\" y=\"0\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(147, 20, 198)\" x=\"-12\" y=\"-12\" width=\"24\" height=\"24\" rx=\"2\" ry=\"2\" />\n    </g>\n</svg>\n\nexport const ColourMapIcon2 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-nodes\">\n        <rect color=\"rgb(20, 146, 196)\" x=\"-30\" y=\"-30\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(196, 20, 96)\" x=\"0\" y=\"-30\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(196, 20, 96)\" x=\"-30\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(20, 146, 196)\" x=\"10\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(20, 146, 196)\" x=\"-30\" y=\"10\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(196, 20, 96)\" x=\"0\" y=\"10\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(147, 20, 198)\" x=\"-10\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n    </g>\n</svg>","import React from 'react';\n\nexport const RepeatingPatternsIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-nodes\">\n        <rect color=\"rgb(20, 146, 196)\" x=\"-37.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(196, 20, 96)\" x=\"-22.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(20, 146, 196)\" x=\"-7.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(196, 20, 96)\" x=\"7.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect color=\"rgb(20, 146, 196)\" x=\"22.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n    </g>\n</svg>\n","import React from 'react';\n\n\nconst TOOLBAR_R = 112;\nconst DELTA_ANGLE = Math.PI / 20;\n\nconst handleKeyDown = (evt, callback) => {\n    if (evt.key === 'Enter' || evt.keyCode === 32) {\n        callback();\n    }\n};\n\nexport default function ({ puzzle, nColours, selectedColour }) {\n    const r = 6;\n    let angle = Math.PI - DELTA_ANGLE * (nColours - 1) / 2;\n\n    const colours = [];\n    for (let i = 1; i <= nColours; i++) {\n        const cx = (TOOLBAR_R + r) * Math.cos(angle);\n        const cy = (TOOLBAR_R + r) * Math.sin(angle);\n        \n        let className = `colour-palette colour-${i}`;\n        if (selectedColour === i) {\n            className += ' selected';\n        }\n\n        const setColour = () => puzzle.setState({ selectedColour: i });\n\n        colours.push(\n            <circle\n                className={className}\n                role=\"radio\"\n                aria-checked={selectedColour === i}\n                tabIndex=\"0\"\n                key={i}\n                cx={cx}\n                cy={cy}\n                r={r}\n                onClick={setColour}\n                onKeyDown={(evt) => handleKeyDown(evt, setColour) }\n            />\n        );\n\n        angle += DELTA_ANGLE;\n    }\n\n    let selectColourIndicator = \"selected-colour-indicator\";\n    if (selectedColour) {\n        selectColourIndicator += ` colour-${selectedColour}`;\n    }\n\n    return <g className=\"toolbar\">\n        <circle className={selectColourIndicator} r=\"109\" />\n        <g className=\"colour-palette\" role=\"radiogroup\">\n            { colours }\n        </g>\n    </g>;\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Toolbar from '../Toolbars/Toolbar';\n\nimport './puzzle.css';\n\n\nconst COLOURS = [\n    'rgb(30, 20, 20)',\n    'rgb(20, 146, 196)',\n    'rgb(196, 20, 96)',\n    'rgb(147, 20, 198)',\n    'rgb(20, 198, 96)',\n];\n\nexport default class PuzzlePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: 0,\n\t\t\tsolved: false,\n            selectedColour: null,\n        }\n\n        this.update = this.update.bind(this);\n        this.getPuzzle = this.getPuzzle.bind(this);\n        this.nextPuzzle = this.nextPuzzle.bind(this);\n    }\n\n    componentDidMount() {\n        this.getPuzzle(0);\n    }\n\n    update(childState) {\n        this.setState({\n            solved: this.props.evaluate(childState, this.state.puzzle)\n        });\n    }\n\n    getNextPuzzleButton() {\n        if (!this.state.solved) { return null; }\n\n        if (this.state.index < this.props.puzzles.length - 1) {\n            return <div className=\"menu-button next-puzzle-button\" aria-label=\"Next puzzle\">\n                <svg viewBox=\"-10 -10 20 20\">\n                    <circle r=\"9\" onClick={this.nextPuzzle}/>\n                </svg>\n            </div>\n        } else {\n            return <Link to=\"/\" className=\"menu-button next-puzzle-button\" aria-label=\"Puzzle completed\">\n                <svg viewBox=\"-10 -10 20 20\">\n                    <circle r=\"9\" />\n                </svg>\n            </Link>\n        }\n    }\n\n    nextPuzzle() {\n        const nextState = this.state.index + 1;\n        this.setState({\n            index: nextState,\n            solved: false,\n            selectedColour: null\n        });\n        this.getPuzzle(nextState);\n    }\n\n    getPuzzle(index) {\n        const { getPuzzleObject, puzzles } = this.props;\n        this.setState({\n            puzzle: getPuzzleObject(puzzles[index])\n        });\n    }\n\n    render() {\n        const { puzzles, displayPuzzle } = this.props;\n        const { index, selectedColour, puzzle } = this.state;\n        if (!puzzle) { return null; }\n\n        const colourPalette = puzzles[index].colourPalette;\n        const puzzleElement = displayPuzzle(this, puzzle);\n\n        // Determine what the selected colour is if we have selected one\n        const style = selectedColour ? { color: COLOURS[selectedColour] } : {};\n        const className = selectedColour ? \"colour-selected\" : \"\";\n\n        return <main>\n            <nav>\n                <Link to=\"/\" className=\"menu-button back-button\" aria-label=\"Back to menu\">\n                    <svg viewBox=\"-10 -10 20 20\">\n                        <circle r=\"9\" />\n                    </svg>\n                </Link>\n\n                { this.getNextPuzzleButton() }\n            </nav>\n\n            <svg id=\"puzzle-chamber\" viewBox=\"-128 -128 256 256\" preserveAspectRatio=\"xMidYMid slice\">\n                <defs>\n                    <filter id=\"shadow-filter\" x=\"0\" y=\"0\" width=\"120%\" height=\"120%\">\n                        <feOffset result=\"offOut\" in=\"SourceAlpha\" dx=\"2\" dy=\"2\"/>\n                        <feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\"5\" />\n                        <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\n                    </filter>\n                </defs>\n\n                <g id=\"puzzle\" key={index} className={className} style={style}>\n                    { puzzleElement }\n                </g>\n\n                <circle id=\"chamber-window\" r=\"145\" />\n                <Toolbar \n                    puzzle={this}\n                    nColours={colourPalette}\n                    selectedColour={selectedColour}\n                />\n            </svg>\n        </main>\n    }\n};\n","import React from 'react';\nimport './graph.css';\n\n\nexport default class Graph extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nodes: props.nodes,\n            edges: props.edges\n        };\n\n        this.colourNode = this.colourNode.bind(this);\n    }\n\n    colourNode(i) {\n        // Add colour to array of node colours\n        const puzzlePage = this.props.page;\n        const newNodes = this.state.nodes.slice();\n        newNodes[i].colour = puzzlePage.state.selectedColour;\n\n        this.setState({\n            nodes: newNodes\n        });\n\n        puzzlePage.update(this.state);\n    }\n\n    render() {\n        const {\n            nodes = [],\n            edges = []\n        } = this.state;\n\n        return <g className=\"graph\">\n            <g className=\"graph-edges\">\n                { edges.map((edge, i) =>\n                    <g key={i}>\n                        <line\n                            className=\"edge-outline\"\n                            x1={edge.x1}\n                            y1={edge.y1}\n                            x2={edge.x2}\n                            y2={edge.y2}\n                        />\n                        <line\n                            x1={edge.x1}\n                            y1={edge.y1}\n                            x2={edge.x2}\n                            y2={edge.y2}\n                        />\n                    </g>\n                )}\n            </g>\n\n            <g className=\"graph-nodes\">\n                { nodes.map((node, i) => {\n                    let className = \"colourable \";\n                    if (node.colour) {\n                        className += `fill-${node.colour}`;\n                    } else {\n                        className += \"empty-region\";\n                    }\n\n                    return <circle\n                        key={i}\n                        className={className}\n                        cx={node.x}\n                        cy={node.y}\n                        r={node.r}\n                        onClick={() => this.colourNode(i)}\n                    />\n                })}\n            </g>\n        </g>\n    }\n};\n","// Given arrays of node coordinates and edge coordinates, return an object of nodes and edges\nexport function getGraphObject({ nodes=[], edges=[], size=32, r=8 }) {\n    const nodeObjects = nodes.map(([x, y]) => ({\n        x: x * size,\n        y: y * size,\n        r\n    }));\n\n    const edgeObjects = edges.map(([n1, n2]) => {\n        const node1 = nodeObjects[n1];\n        const node2 = nodeObjects[n2];\n        return {\n            node1,\n            node2,\n            x1: node1.x,\n            y1: node1.y,\n            x2: node2.x,\n            y2: node2.y\n        };\n    });\n\n    return {\n        nodes: nodeObjects,\n        edges: edgeObjects\n    };\n}\n\nexport function getMapObject({ regions=[], connections=[], size=1 }) {\n    const regionObjects = regions.map(([x, y, width, height]) => ({\n        x: (x - width / 2) * size,\n        y: (y - height / 2) * size,\n        width: width * size,\n        height: height * size,\n    }));\n\n    const connectionObjects = connections.map(([n1, n2]) => ({\n        node1: regionObjects[n1],\n        node2: regionObjects[n2],\n    }));\n\n    // Create a graph of the map in order to evaluate the solution\n    return {\n        regions: regionObjects,\n        connections: connectionObjects\n    };\n}\n\nexport function getSequenceObject({ pattern, answer }) {\n    const patternObjects = pattern.map(item => ({\n        colour: item,\n        fixed: true\n    }));\n\n    const sequence = patternObjects.concat(\n        answer.map(item => ({ colour: 0 })\n    ));\n    \n    // Target sequence is the existing sequence plus the answer fragment\n    const target = patternObjects.concat(\n        answer.map(item => ({ colour: item })\n    ));\n\n    return { sequence, target };\n}\n","export function getNodesOnCircle(colours, r, offset) {\n    var n;\n    if (Array.isArray(colours)) {\n        n = colours.length;\n    } else {\n        n = colours;\n        colours = new Array(n);\n    }\n\n    var nodes = [];\n    var dAngle = 2 * Math.PI / n;\n    var angle = (offset || 0) - 0.5 * dAngle;\n    r = r || 1\n\n    for (var i = 0; i < n; i++) {\n        nodes.push([\n            r * Math.sin(angle),\n            r * Math.cos(angle),\n            colours[i]\n        ]);\n        angle += dAngle;\n    }\n\n    return nodes;\n}\n\nexport function getLoopOfEdges(start, stop) {\n    if (stop === undefined) {\n        stop = start - 1;\n        start = 0;\n    }\n\n    var edges = [];\n    for (var i = start; i < stop; i++) {\n        edges.push([i, i + 1]);\n    }\n    edges.push([start, stop]);\n    return edges;\n}\n","export function allItemsColoured(items) {\n    return items.every(item => item.colour > 0);\n}\n\nexport function allConnectedItemsHaveDifferentColours(cxns) {\n    return cxns.every(cxn => cxn.node1.colour !== cxn.node2.colour);\n}\n\nexport const sequencesMatch = (seq1, seq2, attr) => {\n    if (seq1.length !== seq2.length) { return false; }\n    for (var i = 0; i < seq1.length; i++) {\n        if (seq1[i][attr] !== seq2[i][attr]) {\n            return false;\n        }\n    }\n    return true;\n};\n","/*\n * Colour all nodes on a graph such that no edges joins two nodes of the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport Graph from './PuzzleComponents/Graph';\nimport { getGraphObject } from '../utils/getPuzzleObjects';\nimport { getNodesOnCircle, getLoopOfEdges } from '../utils/graphUtils';\nimport { allItemsColoured, allConnectedItemsHaveDifferentColours } from '../utils/evaluationUtils';\n\n\nconst puzzles1 = [\n\t{\n\t\tcolourPalette: 1,\n\t\tnodes: [[0, 0]]\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: [[-1, 0], [1, 0]],\n\t\tedges: [[0, 1]],\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: [[-2, 0], [0, 0], [2, 0]],\n\t\tedges: [[0, 1], [1, 2]],\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: getNodesOnCircle(3),\n\t\tedges: getLoopOfEdges(3),\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4),\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4).concat([[1, 3]]),\n\t}, {\n\t\tcolourPalette: 4,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4).concat([[1, 3], [0, 2]]),\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: [[0, 0]].concat(getNodesOnCircle(4)),\n\t\tedges: getLoopOfEdges(1, 4).concat([[0, 1], [0, 2], [0, 3], [0, 4]]),\n\t}\n];\n\nconst puzzles2 = [\n    {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6),\n    }, {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[1, 4]]),\n    }, {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 3]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [1, 4], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [1, 4], [1, 3]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: getNodesOnCircle(3).concat(getNodesOnCircle(3, 2, Math.PI / 3)),\n        edges: getLoopOfEdges(3).concat([[0, 3], [1, 3], [1, 4], [2, 4], [0, 5], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        scale: 16,\n        nodes: getNodesOnCircle(3).concat(getNodesOnCircle(3, 4, Math.PI / 3)),\n        edges: getLoopOfEdges(3)\n            .concat(getLoopOfEdges(3, 5))\n            .concat([[0, 3], [1, 3], [1, 4], [2, 4], [0, 5], [2, 5]]),\n    }\n];\n\n// TODO: Give more colourPalette than required\nconst puzzles3 = [\n    {\n        colourPalette: 2,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6),\n    }, {\n        colourPalette: 2,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [2, 4], [0, 4]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[1, 3], [0, 4], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[2, 4], [1, 3], [0, 4], [1, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 3], [1, 4], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [1, 3], [2, 4], [3, 5], [4, 0], [5, 1]]),\n    }\n];\n\nconst ColourGraph = ({ puzzles }) => {\n\tconst evaluate = ({ nodes, edges }) => \n\t    allItemsColoured(nodes) && allConnectedItemsHaveDifferentColours(edges);\n\n\tconst displayGraph = (page, graphObject) => <Graph page={page} {...graphObject} size={32} nodeRadius={8} />\n\n\treturn <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getGraphObject}\n\t\tdisplayPuzzle={displayGraph} />;\n};\n\nexport const ColourGraph1 = () => <ColourGraph puzzles={puzzles1} />\n\nexport const ColourGraph2 = () => <ColourGraph puzzles={puzzles2} />\n\nexport const ColourGraph3 = () => <ColourGraph puzzles={puzzles3} />\n","import React from 'react';\n\n\nexport default class Map extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            regions: props.regions,\n            connections: props.connections\n        };\n\n        this.colourNode = this.colourNode.bind(this);\n    }\n\n    colourNode(i) {\n        // Add colour to array of node colours\n        const puzzlePage = this.props.page;\n        const newRegions = this.state.regions.slice();\n        newRegions[i].colour = puzzlePage.state.selectedColour;\n\n        this.setState({\n            regions: newRegions\n        });\n\n        puzzlePage.update(this.state);\n    }\n\n    render() {\n        const regions = this.state.regions;\n\n        return <g className=\"graph\">\n            <g className=\"graph-nodes\">\n                { regions.map((region, i) => {\n                    let className = \"colourable \";\n                    if (region.colour) {\n                        className += `fill-${region.colour}`;\n                    } else {\n                        className += \"empty-region\";\n                    }\n\n                    return <rect\n                        key={i}\n                        className={className}\n                        x={region.x}\n                        y={region.y}\n                        width={region.width}\n                        height={region.height}\n                        rx=\"3\"\n                        ry=\"3\"\n                        onClick={() => this.colourNode(i)}\n                    />\n                })}\n            </g>\n        </g>\n    }\n};\n","/*\n * Colour regions on a map such that no two touching regions have the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport Map from './PuzzleComponents/Map';\nimport { getMapObject } from '../utils/getPuzzleObjects';\nimport { allItemsColoured, allConnectedItemsHaveDifferentColours } from '../utils/evaluationUtils';\n\n\nconst puzzles1 = [\n    {\n        colourPalette: 1,\n        regions: [[0, 0, 32, 32]]\n    }, {\n        colourPalette: 2,\n        regions: [[-16, 0, 32, 32], [16, 0, 32, 32]],\n        connections: [[0, 1]]\n    }, {\n        colourPalette: 2,\n        regions: [[-32, 0, 32, 32], [0, 0, 32, 32], [32, 0, 32, 32]],\n        connections: [[0, 1], [1, 2]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [0, -16, 64, 32]],\n        connections: [[0, 1], [1, 2], [0, 2]]\n    }, {\n        colourPalette: 2,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [-16, -16, 32, 32], [16, -16, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [-16, -16, 32, 32], [16, -16, 32, 32], [0, 0, 28, 28]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 3,\n        regions: [[0, 0, 72, 72], [-12, 12, 24, 24], [12, 12, 24, 24], [-12, -12, 24, 24], [12, -12, 24, 24], [0, 0, 24, 24]],\n        connections: [[1, 2], [3, 4], [1, 3], [2, 4], [0, 1], [0, 2], [0, 3], [0, 4], [5, 1], [5, 2], [5, 3], [5, 4]]\n    }, {\n        colourPalette: 4,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [0, -16, 64, 32], [0, 0, 28, 28]],\n        connections: [[0, 1], [0, 2], [0, 3], [1, 2], [1, 3], [2, 3]]\n    }\n];\n\nconst puzzles2 = [\n    {\n        colourPalette: 2,\n        regions: [[0, 0, 96, 96], [0, 0, 32, 32]],\n        connections: [[0, 1]]\n    }, {\n        colourPalette: 3,\n        regions: [[-24, 0, 48, 96], [24, 0, 48, 96], [0, 0, 32, 32]],\n        connections: [[0, 1], [1, 2], [0, 2]]\n    }, {\n        colourPalette: 4,\n        regions: [[0, -32, 96, 32], [-24, 16, 48, 64], [24, 16, 48, 64], [0, 0, 32, 32]],\n        connections: [[0, 1], [0, 2], [0, 3], [1, 2], [1, 3], [2, 3]]\n    }, {\n        colourPalette: 3,\n        regions: [[-24, -24, 48, 48], [24, -24, 48, 48], [-24, 24, 48, 48], [24, 24, 48, 48], [0, 0, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, -32, 64, 32], [32, -16, 32, 64], [-32, 16, 32, 64], [16, 32, 64, 32], [0, 0, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 2,\n        regions: [\n            [-32, -32, 32, 32], [0, -32, 32, 32], [32, -32, 32, 32],\n            [-32, 0, 32, 32], [0, 0, 32, 32], [32, 0, 32, 32],\n            [-32, 32, 32, 32], [0, 32, 32, 32], [32, 32, 32, 32]\n        ],\n        connections: [\n            [0, 1], [1, 2], [3, 4], [4, 5], [6, 7], [7, 8],\n            [0, 3], [1, 4], [2, 5], [3, 6], [4, 7], [5, 8]\n        ]\n    }\n];\n\nconst ColourMap = ({ puzzles }) => {\n\tconst evaluate = ({ regions, connections }) => \n\t    allItemsColoured(regions) && allConnectedItemsHaveDifferentColours(connections);\n\n\tconst displayMap = (page, mapObject) => <Map page={page} {...mapObject} />\n\n\treturn <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getMapObject}\n\t\tdisplayPuzzle={displayMap} />;\n};\n\nexport const ColourMap1 = () => <ColourMap puzzles={puzzles1} />\nexport const ColourMap2 = () => <ColourMap puzzles={puzzles2} />\n","import React from 'react';\n\n\nexport default class Map extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sequence: props.sequence,\n        };\n\n        this.colourNode = this.colourNode.bind(this);\n    }\n\n    colourNode(i) {\n        // Add colour to array of node colours\n        const puzzlePage = this.props.page;\n        const newSequence = this.state.sequence.slice();\n        newSequence[i].colour = puzzlePage.state.selectedColour;\n\n        // Update colour and then update parent page\n        this.setState(\n            { sequence: newSequence },\n            () => puzzlePage.update(this.state)\n        );\n    }\n\n    render() {\n        const sequence = this.state.sequence;\n\n        const size = Math.min(24, 160 / sequence.length);\n        const startX = -(sequence.length * size) / 2;\n\n        return <g className=\"sequence\">\n            { sequence.map((item, i) => {\n                let className;\n                let onClick;\n\n                if (!item.fixed) {\n                    onClick = () => this.colourNode(i);\n                    className = \"colourable \";\n                    if (item.colour) {\n                        className += `fill-${item.colour}`;\n                    } else {\n                        className += \"empty-region\";\n                    }\n                } else {\n                    className = `fill-${item.colour}`;\n                }\n\n                return <rect\n                    key={i}\n                    className={className}\n                    x={startX + i * size }\n                    y={-size / 2}\n                    width={size - 1}\n                    height={size - 1}\n                    rx=\"3\"\n                    ry=\"3\"\n                    onClick={onClick}\n                />\n            })}\n        </g>\n    }\n};\n","/*\n * Colour regions on a map such that no two touching regions have the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport Sequence from './PuzzleComponents/Sequence';\nimport { getSequenceObject } from '../utils/getPuzzleObjects';\nimport { allItemsColoured, sequencesMatch } from '../utils/evaluationUtils';\n\n\nconst puzzles1 = [\n    {\n        colourPalette: 1,\n        pattern: [1, 1, 1, 1],\n        answer: [1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 1, 1],\n        answer: [1, 1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 2, 1, 2],\n        answer: [1, 2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 3, 1, 2, 3],\n        answer: [1, 2, 3]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 2, 2, 1, 1],\n        answer: [2, 2]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 2, 1, 2, 2],\n        answer: [1, 2, 2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 2, 3, 3, 3, 1, 2, 2],\n        answer: [3, 3, 3]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 1, 2, 1, 2, 1, 1, 2],\n        answer: [1, 2, 1, 1]\n    }\n];\n\nconst RepeatingPatterns = ({ puzzles }) => {\n\tconst evaluate = ({ sequence }, { target }) => {\n        return allItemsColoured(sequence) && sequencesMatch(sequence, target, 'colour');\n    }\n\n\tconst displaySequence = (page, sequence) => <Sequence page={page} {...sequence} />\n\n\treturn <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getSequenceObject}\n\t\tdisplayPuzzle={displaySequence} />;\n};\n\nexport const RepeatingPatterns1 = (props) => <RepeatingPatterns puzzles={puzzles1} {...props} />","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport PuzzleMap from './PuzzleMap';\nimport {\n    ColourGraph1,\n    ColourGraph2,\n    ColourGraph3\n} from './Puzzles/ColourGraphs';\n\nimport {\n    ColourMap1,\n    ColourMap2\n} from './Puzzles/ColourMaps';\n\nimport { RepeatingPatterns1 } from './Puzzles/RepeatingPatterns';\n\nimport './base.css';\nimport './puzzle.css';\nimport './Icons/icons.css';\n\n\nexport default () =>\n    <Router>\n        <Switch>\n            <Route path=\"/colour-graphs-1\" component={ColourGraph1} />\n            <Route path=\"/colour-graphs-2\" component={ColourGraph2} />\n            <Route path=\"/colour-graphs-3\" component={ColourGraph3} />\n            <Route path=\"/colour-maps-1\" component={ColourMap1} />\n            <Route path=\"/colour-maps-2\" component={ColourMap2} />\n            <Route path=\"/repeating-patterns-1\" component={RepeatingPatterns1} />\n            <Route path=\"/\" component={PuzzleMap} />\n        </Switch>\n    </Router>\n"],"sourceRoot":""}