{"version":3,"sources":["PuzzleMap/puzzleData.js","Icons/ColourGraphs.js","Icons/ColourMaps.js","Icons/Transformations.js","Icons/RepeatingPatterns.js","Icons/Categorisation.js","PuzzleMap/PuzzleMap.js","Toolbars/Toolbar.js","Toolbars/Button.js","Puzzles/PuzzlePage.js","Puzzles/PuzzleComponents/Primitives.js","Puzzles/PuzzleComponents/utils.js","Puzzles/PuzzleComponents/Graph.js","Puzzles/puzzleLoaders.js","utils/common.js","utils/graphUtils.js","utils/evaluation.js","Puzzles/ColourGraphs.js","Puzzles/PuzzleComponents/Map.js","Puzzles/ColourMaps.js","Puzzles/Transformations.js","Puzzles/PuzzleComponents/Sequence.js","Puzzles/RepeatingPatterns.js","Puzzles/PuzzleComponents/Categories.js","Puzzles/Categorisation.js","App.js","serviceWorker.js","index.js"],"names":["puzzles","slug","icon","react_default","a","createElement","viewBox","className","cx","cy","r","x","y","width","height","fill","x1","y1","x2","y2","d","rx","ry","id","href","transform","PuzzleMap","map","section","i","key","_ref","react_router_dom","to","DELTA_ANGLE","Math","PI","Toolbar","puzzle","nColours","selectedColour","angle","colours","_loop","cos","sin","concat","setColour","setState","push","role","aria-checked","tabIndex","onClick","onKeyDown","evt","callback","keyCode","handleKeyDown","selectColourIndicator","Button","props","flashing","COLOURS","PuzzlePage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","index","solved","update","bind","assertThisInitialized","getPuzzle","nextPuzzle","_this$props","getPuzzleObject","colourPalette","nextState","evaluate","length","aria-label","_this$state","style","color","getNextPuzzleButton","preserveAspectRatio","result","in","dx","dy","stdDeviation","in2","mode","displayPuzzle","React","Component","Line","getColourClassName","item","fixed","colour","getClickToColour","colourItem","Graph","_ref$edges","edges","_ref$nodes","nodes","colourNode","edge","Primitives_Line","assign","node","getGraphObject","_ref$size","size","_ref$r","nodeObjects","_ref2","_ref3","slicedToArray","nodeColour","Boolean","edgeObjects","_ref4","_ref5","n1","n2","node1","node2","getGraphAndUncolouredCopy","_ref6","_ref6$nodes","_ref6$edges","_ref6$size","_ref6$r","target","blank","_ref7","_ref8","getMapObject","_ref9","_ref9$regions","regions","_ref9$connections","connections","_ref9$size","regionObjects","_ref10","_ref11","connectionObjects","_ref12","_ref13","getSequenceObject","_ref14","pattern","answer","patternObjects","sequence","getCategoryObjects","_ref15","categories","randomRotate","categoryObjects","forEach","category","copies","type","object","rotate","floor","random","arr","j","temp","shuffle","getPointsOnACircle","n","arguments","undefined","_ref$offsetAngle","offsetAngle","_ref$dx","_ref$dy","points","dAngle","getNodesOnCircle","_ref2$r","_ref2$offsetAngle","_ref2$dx","_ref2$dy","Array","isArray","getLineOfEdges","start","stop","getLoopOfEdges","linearGraph","scale","startX","loopGraph","allItemsColoured","every","allConnectedItemsHaveDifferentColours","filter","cxn","graphIsChromatic","sequencesMatch","seq1","seq2","attr","sequencesAreEquivalent","mapping1","Map","mapping2","value1","get","value2","set","graphNodesAreSameColour","puzzles1","puzzles2","puzzles3","ColourableGraph","Graph_Graph","nodeIndex","ColourGraph","PuzzlePage_PuzzlePage","ColourGraph1","ColourGraphs_ColourGraph","ColourGraph2","ColourGraph3","_ref$regions","region","ColourableMap","Map_Map","ColourMap","ColourMap1","ColourMaps_ColourMap","ColourMap2","identity1","reflection1","rotation1","colour1","Transformation","patternMatchGraphs","sequenceHasNoMatches","samePatternButDifferent","Identity1","Transformations_Transformation","TransformColour1","Reflection1","Rotation1","Sequence","_ref$sequence","min","ColourableSequence","Sequence_Sequence","RepeatingPatterns","RepeatingPatterns1","RepeatingPatterns_RepeatingPatterns","Categories","colourCategory","_getCirclePackedInCir","R","phi","cPhi","categoryPositions","categorySize","getCirclePackedInCircle","component","lineOfThree","triangle","displayCategories","Categories_Categories","Categorisation","BASE_URL","window","location","hostname","match","ReactDOM","render","react_router","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.08730182.chunk.js","sourcesContent":["import React from 'react';\n\nimport { ColourGraphIcon1, ColourGraphIcon2, ColourGraphIcon3 } from '../Icons/ColourGraphs';\nimport { ColourMapIcon1, ColourMapIcon2 } from '../Icons/ColourMaps';\nimport { IdentityIcon1, ReflectionIcon1, RotationIcon1, TransformColourIcon1 } from '../Icons/Transformations';\nimport { RepeatingPatternsIcon1 } from '../Icons/RepeatingPatterns';\nimport { Categorisation1, Categorisation2, Categorisation3 } from '../Icons/Categorisation';\n\nconst puzzles = [\n    [\n        { slug: 'colour-graphs-1', icon: <ColourGraphIcon1/> },\n        { slug: 'colour-graphs-2', icon: <ColourGraphIcon2/> },\n        { slug: 'colour-graphs-3', icon: <ColourGraphIcon3/> },\n    ], [\n        { slug: 'colour-maps-1', icon: <ColourMapIcon1/> },\n        { slug: 'colour-maps-2', icon: <ColourMapIcon2/> },\n    ], [\n        { slug: 'identity-1', icon: <IdentityIcon1/> },\n        { slug: 'reflection-1', icon: <ReflectionIcon1/> },\n        { slug: 'rotation-1', icon: <RotationIcon1/> },\n        { slug: 'transform-colour-1', icon: <TransformColourIcon1/> },\n    ], [\n        { slug: 'repeating-patterns-1', icon: <RepeatingPatternsIcon1/> },\n    ], [\n        { slug: 'categorisation-1', icon: <Categorisation1/> },\n        { slug: 'categorisation-2', icon: <Categorisation2/> },\n        { slug: 'categorisation-3', icon: <Categorisation3/> },\n    ],\n];\n\nexport default puzzles;\n","import React from 'react';\n\nexport const ColourGraphIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-edges\">\n        <rect x=\"-20\" y=\"-20\" width=\"40\" height=\"40\" fill=\"none\" />\n        <line x1=\"-20\" y1=\"-20\" x2=\"20\" y2=\"20\" />\n        <line x1=\"-20\" y1=\"20\" x2=\"20\" y2=\"-20\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-20\" cy=\"-20\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"-20\" cy=\"20\" r=\"8\" />\n        <circle className=\"colour-1\" cx=\"20\" cy=\"20\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"20\" cy=\"-20\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"0\" cy=\"0\" r=\"8\" />\n    </g>\n</svg>\n\nexport const ColourGraphIcon2 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-edges\">\n        <rect x=\"-32\" y=\"-16\" width=\"64\" height=\"32\" />\n        <line x1=\"0\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n        <line x1=\"-32\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n        <line x1=\"32\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-32\" cy=\"-16\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"0\" cy=\"-16\" r=\"8\" />\n        <circle className=\"colour-1\" cx=\"32\" cy=\"-16\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"32\" cy=\"16\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"0\" cy=\"16\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"-32\" cy=\"16\" r=\"8\" />\n    </g>\n</svg>\n\nexport const ColourGraphIcon3 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-edges\">\n        <path d=\"M32 0L16 27.7h-32L-32 0 -16 -27.71h32z\" />\n        <line x1=\"16\" y1=\"-27.71\" x2=\"16\" y2=\"27.71\" />\n        <line x1=\"-16\" y1=\"-27.71\" x2=\"-16\" y2=\"27.71\" />\n        <line className=\"edge-outline\" x1=\"-32\" y1=\"0\" x2=\"32\" y2=\"0\" />\n        <line x1=\"-32\" y1=\"0\" x2=\"32\" y2=\"0\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"32\" cy=\"0\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"16\" cy=\"27.71\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"-16\" cy=\"27.71\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"-32\" cy=\"0\" r=\"8\" />\n        <circle className=\"colour-1\" cx=\"-16\" cy=\"-27.71\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"16\" cy=\"-27.71\" r=\"8\" />\n    </g>\n</svg>\n","import React from 'react';\n\n\nexport const ColourMapIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-nodes\">\n        <rect className=\"colour-1\" x=\"-28\" y=\"-28\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"0\" y=\"-28\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"-28\" y=\"0\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"0\" y=\"0\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-3\" x=\"-12\" y=\"-12\" width=\"24\" height=\"24\" rx=\"2\" ry=\"2\" />\n    </g>\n</svg>\n\nexport const ColourMapIcon2 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-nodes\">\n        <rect className=\"colour-1\" x=\"-30\" y=\"-30\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"0\" y=\"-30\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"-30\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-3\" x=\"-10\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"10\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"-30\" y=\"10\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"0\" y=\"10\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n    </g>\n</svg>","import React from 'react';\n\nexport const IdentityIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <defs>\n        <g id=\"identity-1-puzzle\">\n            <g className=\"graph-edges\">\n                <line x1=\"-15\" y1=\"13\" x2=\"0\" y2=\"-13\" />\n                <line x1=\"-15\" y1=\"13\" x2=\"15\" y2=\"13\" />\n                <line x1=\"0\" y1=\"-13\" x2=\"15\" y2=\"13\" />\n            </g>\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-1\" cx=\"-15\" cy=\"13\" r=\"5\" />\n                <circle className=\"colour-2\" cx=\"0\" cy=\"-13\" r=\"5\" />\n                <circle className=\"colour-3\" cx=\"15\" cy=\"13\" r=\"5\" />\n            </g>\n        </g>\n    </defs>\n\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n\n    <use href=\"#identity-1-puzzle\" transform=\"translate(-24, -4)\"/>\n    <use href=\"#identity-1-puzzle\" transform=\"translate(24, -4)\"/>\n</svg>\n\nexport const ReflectionIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <defs>\n        <g id=\"reflection-1-puzzle\">\n            <g className=\"graph-edges\">\n                <line x1=\"12\" y1=\"0\" x2=\"-11\" y2=\"-15\" />\n                <line x1=\"12\" y1=\"0\" x2=\"-11\" y2=\"15\" />\n                <line x1=\"-11\" y1=\"-15\" x2=\"-11\" y2=\"15\" />\n            </g>\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-2\" cx=\"12\" cy=\"0\" r=\"5\" />\n                <circle className=\"colour-1\" cx=\"-11\" cy=\"15\" r=\"5\" />\n                <circle className=\"colour-1\" cx=\"-11\" cy=\"-15\" r=\"5\" />\n            </g>\n        </g>\n    </defs>\n\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n\n    <use href=\"#reflection-1-puzzle\" transform=\"translate(-20)\"/>\n    <use href=\"#reflection-1-puzzle\" transform=\"translate(20) scale(-1, 1)\"/>\n</svg>\n\nexport const RotationIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <defs>\n        <g id=\"rotation-1-puzzle\">\n            <g className=\"graph-edges\">\n                <line x1=\"-16\" y1=\"13\" x2=\"-2\" y2=\"-13\" />\n                <line x1=\"-16\" y1=\"13\" x2=\"12\" y2=\"13\" />\n                <line x1=\"-2\" y1=\"-13\" x2=\"12\" y2=\"13\" />\n            </g>\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-1\" cx=\"-16\" cy=\"13\" r=\"5\" />\n                <circle className=\"colour-2\" cx=\"-2\" cy=\"-13\" r=\"5\" />\n                <circle className=\"colour-1\" cx=\"12\" cy=\"13\" r=\"5\" />\n            </g>\n        </g>\n    </defs>\n\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n\n    <use href=\"#rotation-1-puzzle\" transform=\"translate(-20)\"/>\n    <use href=\"#rotation-1-puzzle\" transform=\"translate(20) rotate(180)\"/>\n</svg>\n\nexport const TransformColourIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n\n    <g transform=\"translate(-20)\">\n        <g className=\"graph-edges\">\n            <line x1=\"0\" y1=\"16\" x2=\"0\" y2=\"-16\" />\n        </g>\n        <g className=\"graph-nodes\">\n            <circle className=\"colour-1\" cx=\"0\" cy=\"-16\" r=\"5\" />\n            <circle className=\"colour-2\" cx=\"0\" cy=\"0\" r=\"5\" />\n            <circle className=\"colour-1\" cx=\"0\" cy=\"16\" r=\"5\" />\n        </g>\n    </g>\n\n    <g transform=\"translate(20)\">\n        <g className=\"graph-edges\">\n            <line x1=\"0\" y1=\"16\" x2=\"0\" y2=\"-16\" />\n        </g>\n        <g className=\"graph-nodes\">\n            <circle className=\"colour-2\" cx=\"0\" cy=\"-16\" r=\"5\" />\n            <circle className=\"colour-1\" cx=\"0\" cy=\"0\" r=\"5\" />\n            <circle className=\"colour-2\" cx=\"0\" cy=\"16\" r=\"5\" />\n        </g>\n    </g>\n</svg>\n","import React from 'react';\n\nexport const RepeatingPatternsIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-nodes\">\n        <rect className=\"colour-1\" x=\"-37.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"-22.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"-7.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"7.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"22.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n    </g>\n</svg>\n","import React from 'react';\n\nexport const Categorisation1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"categories\">\n        <circle className=\"colour-1\" cx=\"-24\" cy=\"0\" r=\"23\" />\n        <circle className=\"colour-2\" cx=\"24\" cy=\"0\" r=\"23\" />\n    </g>\n    <g className=\"graph-edges\">\n        <line x1=\"30\" y1=\"0\" x2=\"18\" y2=\"0\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-24\" cy=\"0\" r=\"4\" />\n        <circle className=\"colour-1\" cx=\"32\" cy=\"0\" r=\"4\" />\n        <circle className=\"colour-1\" cx=\"16\" cy=\"0\" r=\"4\" />\n    </g>\n</svg>\n\nexport const Categorisation2 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"categories\">\n        <circle className=\"colour-1\" cx=\"-24\" cy=\"0\" r=\"23\" />\n        <circle className=\"colour-2\" cx=\"24\" cy=\"0\" r=\"23\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-24\" cy=\"0\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"24\" cy=\"0\" r=\"8\" />\n    </g>\n</svg>\n\nexport const Categorisation3 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"categories\">\n        <circle className=\"colour-1\" cx=\"-20\" cy=\"-20\" r=\"19\" />\n        <circle className=\"colour-2\" cx=\"20\" cy=\"-20\" r=\"19\" />\n        <circle className=\"colour-2\" cx=\"-20\" cy=\"20\" r=\"19\" />\n        <circle className=\"colour-3\" cx=\"20\" cy=\"20\" r=\"19\" />\n    </g>\n    <g className=\"graph-edges\">\n        <line x1=\"-25\" y1=\"-20\" x2=\"-15\" y2=\"-20\" />\n        <line x1=\"25\" y1=\"-20\" x2=\"15\" y2=\"-20\" />\n        <line x1=\"-25\" y1=\"20\" x2=\"-15\" y2=\"20\" />\n        <line x1=\"25\" y1=\"20\" x2=\"15\" y2=\"20\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-28\" cy=\"-20\" r=\"4\" />\n        <circle className=\"colour-1\" cx=\"-12\" cy=\"-20\" r=\"4\" />\n        <circle className=\"colour-1\" cx=\"28\" cy=\"-20\" r=\"4\" />\n        <circle className=\"colour-2\" cx=\"12\" cy=\"-20\" r=\"4\" />\n        <circle className=\"colour-1\" cx=\"-28\" cy=\"20\" r=\"4\" />\n        <circle className=\"colour-2\" cx=\"-12\" cy=\"20\" r=\"4\" />\n        <circle className=\"colour-2\" cx=\"28\" cy=\"20\" r=\"4\" />\n        <circle className=\"colour-2\" cx=\"12\" cy=\"20\" r=\"4\" />\n    </g>\n</svg>\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport puzzles from './puzzleData';\nimport './puzzleMap.css';\n\n\nexport default () =>\n    <main className=\"front-page\">\n        <nav className=\"puzzle-map\">\n            {\n                puzzles.map((section, i) =>\n                    <div className=\"puzzle-section\" key={i}>{\n                        section.map(\n                            ({ slug, icon }) => <Link className=\"map-link\" key={slug} to={'/pattern-puzzles/' + slug}>\n                                { icon }\n                            </Link>\n                        )\n                    }</div>\n                )\n            }\n        </nav>\n    </main>\n","import React from 'react';\n\n\nconst TOOLBAR_R = 136;\nconst DELTA_ANGLE = Math.PI / 18;\n\nconst handleKeyDown = (evt, callback) => {\n    if (evt.key === 'Enter' || evt.keyCode === 32) {\n        callback();\n    }\n};\n\nexport default function ({ puzzle, nColours, selectedColour }) {\n    const r = 8;\n    let angle = Math.PI - DELTA_ANGLE * (nColours - 1) / 2;\n\n    const colours = [];\n    for (let i = 1; i <= nColours; i++) {\n        const cx = (TOOLBAR_R + r) * Math.cos(angle);\n        const cy = (TOOLBAR_R + r) * Math.sin(angle);\n        \n        let className = `colour-palette colour-${i}`;\n        if (selectedColour === i) {\n            className += ' selected';\n        } else if (i === 1 && !selectedColour) {\n            className += ' flashing';\n        }\n\n        const setColour = () => puzzle.setState({ selectedColour: i });\n\n        colours.push(\n            <circle\n                className={className}\n                role=\"radio\"\n                aria-checked={selectedColour === i}\n                tabIndex=\"0\"\n                key={i}\n                cx={cx}\n                cy={cy}\n                r={r}\n                onClick={setColour}\n                onKeyDown={(evt) => handleKeyDown(evt, setColour) }\n            />\n        );\n\n        angle += DELTA_ANGLE;\n    }\n\n    let selectColourIndicator = \"selected-colour-indicator\";\n    if (selectedColour) {\n        selectColourIndicator += ` colour-${selectedColour}`;\n    }\n\n    return <g className=\"toolbar\">\n        <circle className={selectColourIndicator} r=\"132\" />\n        <g className=\"colour-palette\" role=\"radiogroup\">\n            { colours }\n        </g>\n    </g>;\n}\n","import React from 'react';\n\n\nexport default (props) => {\n    let className = props.className || \"\";\n    if (props.flashing) { className += \" flashing\"; }\n\n    return <svg viewBox=\"-12 -12 24 24\">\n        <circle className={className} r=\"9\" onClick={props.onClick} role=\"button\" />\n    </svg>\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Toolbar from '../Toolbars/Toolbar';\nimport Button from '../Toolbars/Button';\n\nimport './puzzle.css';\n\n\nconst COLOURS = [\n    'rgb(30, 20, 20)',\n    'rgb(20, 146, 196)',\n    'rgb(196, 20, 96)',\n    'rgb(20, 198, 96)',\n    'rgb(220, 220, 20)',\n];\n\nexport default class PuzzlePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: 0,\n\t\t\tsolved: false,\n            selectedColour: null,\n        }\n\n        this.update = this.update.bind(this);\n        this.getPuzzle = this.getPuzzle.bind(this);\n        this.nextPuzzle = this.nextPuzzle.bind(this);\n    }\n\n    componentDidMount() {\n        // Load the first puzzle\n        this.getPuzzle(0);\n    }\n\n    getPuzzle(index) {\n        const { getPuzzleObject, puzzles } = this.props;\n        this.setState({\n            puzzle: getPuzzleObject(puzzles[index]),\n            colourPalette: puzzles[index].colourPalette\n        });\n    }\n\n    nextPuzzle() {\n        const nextState = this.state.index + 1;\n        this.setState({\n            index: nextState,\n            solved: false,\n            selectedColour: null\n        });\n        this.getPuzzle(nextState);\n    }\n\n    // Child element has updated so evaluate to see if puzzle has been solved\n    update(puzzle) {\n        const solved = this.props.evaluate(puzzle);\n        this.setState({ puzzle, solved });\n    }\n\n    getNextPuzzleButton() {\n        // Only show button if the puzzle has been solved\n        if (!this.state.solved) { return null; }\n\n        if (this.state.index < this.props.puzzles.length - 1) {\n            // Button to go to the next puzzle\n            return <div className=\"menu-button next-puzzle-button\" aria-label=\"Next puzzle\">\n                <Button onClick={this.nextPuzzle} flashing/>\n            </div>\n        } else {\n            // Button to go back to the home page\n            return <Link to=\"/pattern-puzzles/\" className=\"menu-button next-puzzle-button\" aria-label=\"Puzzle completed\">\n                <Button flashing/>\n            </Link>\n        }\n    }\n\n    render() {\n        const { index, puzzle, selectedColour, colourPalette } = this.state;\n        if (!puzzle) { return null; }\n\n        // Determine what the selected colour is if we have selected one\n        const style = selectedColour ? { color: COLOURS[selectedColour] } : {};\n        const className = selectedColour ? \"colour-selected\" : \"\";\n\n        return <main>\n            <nav>\n                <Link to=\"/pattern-puzzles/\" className=\"menu-button back-button\" aria-label=\"Back to menu\">\n                    <Button />\n                </Link>\n\n                { this.getNextPuzzleButton() }\n            </nav>\n\n            <svg id=\"puzzle-chamber\" viewBox=\"-128 -128 256 256\" preserveAspectRatio=\"xMidYMid meet\">\n                <defs>\n                    <filter id=\"shadow-filter\">\n                        <feOffset result=\"offOut\" in=\"SourceAlpha\" dx=\"2\" dy=\"2\"/>\n                        <feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\"5\" />\n                        <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\n                    </filter>\n                    <filter id=\"glow-filter\" x=\"-200%\" y=\"-200%\" width=\"400%\" height=\"400%\">\n                        <feGaussianBlur stdDeviation=\"1.5\" result=\"colouredBlur\" />\n                        <feMerge>\n                            <feMergeNode in=\"coloredBlur\"/>\n                            <feMergeNode in=\"SourceGraphic\"/>\n                        </feMerge>\n                    </filter>\n                </defs>\n\n                <rect className=\"background\" x=\"-200\" y=\"-200\" width=\"400\" height=\"400\" />\n\n                <g id=\"puzzle\" key={index} className={className} style={style}>\n                    { this.props.displayPuzzle(puzzle, selectedColour, this.update) }\n                </g>\n\n                <circle id=\"chamber-window\" r=\"212\" />\n                <Toolbar \n                    puzzle={this}\n                    nColours={colourPalette}\n                    selectedColour={selectedColour}\n                />\n            </svg>\n        </main>\n    }\n};\n","import React from 'react';\n\n\nexport const Line = ({ x1, y1, x2, y2 }) =>\n    <line x1={x1} y1={y1} x2={x2} y2={y2} />\n","export function getColourClassName(item) {\n    let className;\n\n    if (!item.fixed) {\n        className = \"colourable \";\n        if (item.colour) {\n            className += `fill-${item.colour}`;\n        } else {\n            className += \"empty-region\";\n        }\n    } else {\n        className = `fill-${item.colour}`;\n    }\n\n    return className;\n}\n\nexport function getClickToColour(colourItem, item, i) {\n    if (colourItem && !item.fixed) {\n        return () => colourItem(i);\n    }\n}\n","import React from 'react';\nimport { Line } from './Primitives';\nimport { getColourClassName, getClickToColour } from './utils';\n\n\nexport const Graph = ({ edges=[], nodes=[], colourNode }) =>\n    <g className=\"graph\">\n        <g className=\"graph-edges\">\n            { edges.map((edge, i) =>\n                <g key={i}>\n                    <Line className=\"edge-outline\" {...edge} />\n                    <Line {...edge} />\n                </g>\n            )}\n        </g>\n\n        <g className=\"graph-nodes\">\n            { nodes.map((node, i) => \n                <circle\n                    key={i}\n                    r={node.r}\n                    cx={node.x}\n                    cy={node.y}\n                    className={getColourClassName(node)}\n                    onClick={getClickToColour(colourNode, node, i)}\n                />\n            )}\n        </g>\n    </g>\n","/***\n * These functions take the raw puzzle data and return an object that can used to\n * display the puzzle and determine when the correct answer is found\n***/\n\nimport { shuffle } from '../utils/common';\n\n// Given arrays of node coordinates and edge coordinates, return an object of nodes and edges\nexport function getGraphObject({ nodes=[], edges=[], size=32, r=8, colour }) {\n    const nodeObjects = nodes.map(([x, y, nodeColour]) => ({\n        r,\n        x: x * size,\n        y: y * size,\n        colour: nodeColour || colour,\n        fixed: Boolean(colour)\n    }));\n\n    const edgeObjects = edges.map(([n1, n2]) => {\n        const node1 = nodeObjects[n1];\n        const node2 = nodeObjects[n2];\n        return {\n            node1,\n            node2,\n            x1: node1.x,\n            y1: node1.y,\n            x2: node2.x,\n            y2: node2.y\n        };\n    });\n\n    return {\n        nodes: nodeObjects,\n        edges: edgeObjects\n    };\n}\n\n// Given arrays of node coordinates and edge coordinates, return two objects of nodes and edges,\n// one includes the node colours and one is empty\nexport function getGraphAndUncolouredCopy({ nodes=[], edges=[], size=32, r=8 }) {\n    const target = getGraphObject({ nodes, edges, size, r });\n\n    // Remove the colours from the nodes\n    const blankNodes = nodes.map(([x, y]) => [x, y]);\n    const blankGraph = getGraphObject({ nodes: blankNodes, edges, size, r });\n\n    return { target, blank: blankGraph };\n}\n\nexport function getMapObject({ regions=[], connections=[], size=1 }) {\n    const regionObjects = regions.map(([x, y, width, height]) => ({\n        x: (x - width / 2) * size,\n        y: (y - height / 2) * size,\n        width: width * size,\n        height: height * size,\n    }));\n\n    const connectionObjects = connections.map(([n1, n2]) => ({\n        node1: regionObjects[n1],\n        node2: regionObjects[n2],\n    }));\n\n    // Create a graph of the map in order to evaluate the solution\n    return {\n        regions: regionObjects,\n        connections: connectionObjects\n    };\n}\n\nexport function getSequenceObject({ pattern, answer }) {\n    const patternObjects = pattern.map(item => ({\n        colour: item,\n        fixed: true\n    }));\n\n    const sequence = patternObjects.concat(\n        answer.map(item => ({ colour: 0 })\n    ));\n    \n    // Target sequence is the existing sequence plus the answer fragment\n    const target = patternObjects.concat(\n        answer.map(item => ({ colour: item })\n    ));\n\n    return { sequence, target };\n}\n\n// Return an array of category object which have a colour, and an object to display\nexport function getCategoryObjects({ categories, randomRotate }) {\n    const categoryObjects = [];\n    \n    categories.forEach(category => {\n        const copies = category.copies || 1;\n\n        for (let i = 0; i < copies; i++) {\n            categoryObjects.push({\n                category: category.type,\n                object: category.item,\n                rotate: randomRotate ? Math.floor(Math.random() * 12) * 30 : 0\n            });\n        }\n    });\n\n    return shuffle(categoryObjects);\n}\n","export function shuffle(arr) {\n    for (let i = arr.length; i--; ) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n    return arr;\n}\n","export function getPointsOnACircle(n, {r=1, offsetAngle=0, dx=0, dy=0}={}) {\n    const points = [];\n    const dAngle = 2 * Math.PI / n;\n    let angle = (offsetAngle * Math.PI / 180 || 0) - 0.5 * dAngle;\n\n    for (let i = 0; i < n; i++) {\n        points.push([\n            dx + r * Math.sin(angle),\n            dy + r * Math.cos(angle),\n        ]);\n        angle += dAngle;\n    }\n\n    return points;\n}\n\nexport function getNodesOnCircle(colours, {r=1, offsetAngle=0, dx=0, dy=0}={}) {\n    // If colours is a number rather than an array, create an empty array of that size\n    // i.e. none of the nodes will have a colour\n    if (!Array.isArray(colours)) {\n        colours = new Array(colours);\n    }\n\n    const n = colours.length;\n    const points = getPointsOnACircle(n, { r, offsetAngle, dx, dy });\n\n    // Combine coordinates with colours\n    const nodes = points.map(([x, y], i) => [x, y, colours[i]]);\n\n    return nodes;\n}\n\nexport function getLineOfEdges(start, stop) {\n    if (stop === undefined) {\n        stop = start - 1;\n        start = 0;\n    }\n\n    var edges = [];\n    for (var i = start; i < stop; i++) {\n        edges.push([i, i + 1]);\n    }\n\n    return edges;\n}\n\nexport function getLoopOfEdges(start, stop) {\n    if (stop === undefined) {\n        stop = start - 1;\n        start = 0;\n    }\n\n    const edges = getLineOfEdges(start, stop);\n    edges.push([start, stop]);\n    return edges;\n}\n\nexport function linearGraph(colours, scale=1) {\n    if (!Array.isArray(colours)) {\n        colours = new Array(colours);\n    }\n\n    const n = colours.length;\n    const startX = - (n - 1) * scale / 2;\n    const nodes = colours.map((colour, i) => [startX + i * scale, 0, colour])\n    const edges = getLineOfEdges(n);\n\n    return { nodes, edges };\n}\n\nexport function loopGraph(colours, scale=1) {\n    if (!Array.isArray(colours)) {\n        colours = new Array(colours);\n    }\n\n    const nodes = getNodesOnCircle(colours, { r: scale });\n    const edges = getLoopOfEdges(colours.length);\n\n    return { nodes, edges };\n}\n","export function allItemsColoured(items=[]) {\n    return items.every(item => item.colour > 0);\n}\n\nexport function allConnectedItemsHaveDifferentColours(cxns=[]) {\n    const failingCxns = cxns.filter(cxn => cxn.node1.colour === cxn.node2.colour);\n    return failingCxns.length === 0;\n}\n\nexport const graphIsChromatic = ({ nodes, edges }) => \n    allItemsColoured(nodes) &&\n    allConnectedItemsHaveDifferentColours(edges);\n\nexport const sequencesMatch = (seq1, seq2, attr) => {\n    if (seq1.length !== seq2.length) { return false; }\n    for (let i = 0; i < seq1.length; i++) {\n        const value1 = attr ? seq1[i][attr] : seq1[i];\n        const value2 = attr ? seq2[i][attr] : seq2[i];\n        if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n};\n\nexport const sequenceHasNoMatches = (seq1, seq2) => {\n    if (seq1.length !== seq2.length) { return false; }\n    for (let i = 0; i < seq1.length; i++) {\n        if (seq1[i] === seq2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Test whether there is a consistent mapping between the values in one array to the value the other\nexport const sequencesAreEquivalent = (seq1, seq2) => {\n    const mapping1 = new Map();\n    const mapping2 = new Map();\n\n    for (let i = 0; i < seq1.length; i++) {\n        const value1 = mapping1.get(seq1[i]);\n        const value2 = mapping2.get(seq2[i]);\n\n        if (value1 === undefined) {\n            mapping1.set(seq1[i], seq2[i]);\n        } else if (value1 !== seq2[i]) {\n            return false;\n        }\n\n        if (value2 === undefined) {\n            mapping2.set(seq2[i], seq1[i]);\n        } else if (value2 !== seq1[i]) {\n            return false;\n        }\n        \n    }\n\n    return true;\n};\n\n// Test whether the nodes of two graphs are the same colour\nexport const graphNodesAreSameColour = ({ blank, target }) => {\n\treturn allItemsColoured(blank.nodes) &&\n\t\tsequencesMatch(blank.nodes, target.nodes, 'colour');\n};\n\n// Test whether the nodes of two graphs have the same pattern,\n// i.e. there is a consistent mapping from the colours in one graph to the colour in the target\nexport const graphNodesHaveSamePattern = ({ blank, target }) => {\n\treturn allItemsColoured(blank.nodes) &&\n        sequencesAreEquivalent(blank.nodes, target.nodes);\n};\n\nexport const samePatternButDifferent = (seq1, seq2) => {\n    return seq1.every(item => item > 0) &&\n        sequenceHasNoMatches(seq1, seq2) &&\n        sequencesAreEquivalent(seq1, seq2);\n};\n\n","/*\n * Colour all nodes on a graph such that no edges joins two nodes of the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Graph } from './PuzzleComponents/Graph';\nimport { getGraphObject } from './puzzleLoaders';\nimport { getNodesOnCircle, getLoopOfEdges } from '../utils/graphUtils';\nimport { graphIsChromatic } from '../utils/evaluation';\n\n\nconst puzzles1 = [\n\t{\n\t\tcolourPalette: 1,\n\t\tnodes: [[0, 0]]\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: [[-1, 0], [1, 0]],\n\t\tedges: [[0, 1]],\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: [[-2, 0], [0, 0], [2, 0]],\n\t\tedges: [[0, 1], [1, 2]],\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: getNodesOnCircle(3),\n\t\tedges: getLoopOfEdges(3),\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4),\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4).concat([[1, 3]]),\n\t}, {\n\t\tcolourPalette: 4,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4).concat([[1, 3], [0, 2]]),\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: [[0, 0]].concat(getNodesOnCircle(4)),\n\t\tedges: getLoopOfEdges(1, 4).concat([[0, 1], [0, 2], [0, 3], [0, 4]]),\n\t}\n];\n\nconst puzzles2 = [\n    {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6),\n    }, {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[1, 4]]),\n    }, {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 3]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [1, 4], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [1, 4], [1, 3]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: getNodesOnCircle(3).concat(getNodesOnCircle(3, { r: 2, offsetAngle: 60 })),\n        edges: getLoopOfEdges(3).concat([[0, 3], [1, 3], [1, 4], [2, 4], [0, 5], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        scale: 16,\n        nodes: getNodesOnCircle(3).concat(getNodesOnCircle(3, { r: 4, offsetAngle: 60 })),\n        edges: getLoopOfEdges(3)\n            .concat(getLoopOfEdges(3, 5))\n            .concat([[0, 3], [1, 3], [1, 4], [2, 4], [0, 5], [2, 5]]),\n    }\n];\n\n// TODO: Give more colourPalette than required\nconst puzzles3 = [\n    {\n        colourPalette: 2,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6),\n    }, {\n        colourPalette: 2,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [2, 4], [0, 4]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[1, 3], [0, 4], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[2, 4], [1, 3], [0, 4], [1, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 3], [1, 4], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [1, 3], [2, 4], [3, 5], [4, 0], [5, 1]]),\n    }\n];\n\nconst ColourableGraph = (puzzle, selectedColour, update) => {\n    const colourNode = nodeIndex => {\n        puzzle.nodes[nodeIndex].colour = selectedColour;\n        update(puzzle);\n    };\n\n    return <Graph {...puzzle} colourNode={colourNode}/>\n};\n\nconst ColourGraph = ({ puzzles }) => \n    <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={graphIsChromatic}\n\t\tgetPuzzleObject={getGraphObject}\n\t\tdisplayPuzzle={ColourableGraph}\n    />\n\nexport const ColourGraph1 = () => <ColourGraph puzzles={puzzles1} />\n\nexport const ColourGraph2 = () => <ColourGraph puzzles={puzzles2} />\n\nexport const ColourGraph3 = () => <ColourGraph puzzles={puzzles3} />\n","import React from 'react';\nimport { getColourClassName, getClickToColour } from './utils';\n\n\nexport const Map = ({ regions=[], colourItem }) =>\n    <g className=\"graph\">\n        <g className=\"graph-nodes\">\n            { regions.map((region, i) =>\n                <rect\n                    key={i}\n                    x={region.x}\n                    y={region.y}\n                    width={region.width}\n                    height={region.height}\n                    rx=\"3\"\n                    ry=\"3\"\n                    className={getColourClassName(region)}\n                    onClick={getClickToColour(colourItem, region, i)}\n                />\n            )}\n        </g>\n    </g>\n","/*\n * Colour regions on a map such that no two touching regions have the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Map } from './PuzzleComponents/Map';\nimport { getMapObject } from './puzzleLoaders';\nimport { allItemsColoured, allConnectedItemsHaveDifferentColours } from '../utils/evaluation';\n\n\nconst puzzles1 = [\n    {\n        colourPalette: 1,\n        regions: [[0, 0, 32, 32]]\n    }, {\n        colourPalette: 2,\n        regions: [[-16, 0, 32, 32], [16, 0, 32, 32]],\n        connections: [[0, 1]]\n    }, {\n        colourPalette: 2,\n        regions: [[-32, 0, 32, 32], [0, 0, 32, 32], [32, 0, 32, 32]],\n        connections: [[0, 1], [1, 2]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [0, -16, 64, 32]],\n        connections: [[0, 1], [1, 2], [0, 2]]\n    }, {\n        colourPalette: 2,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [-16, -16, 32, 32], [16, -16, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [-16, -16, 32, 32], [16, -16, 32, 32], [0, 0, 28, 28]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 3,\n        regions: [[0, 0, 72, 72], [-12, 12, 24, 24], [12, 12, 24, 24], [-12, -12, 24, 24], [12, -12, 24, 24], [0, 0, 24, 24]],\n        connections: [[1, 2], [3, 4], [1, 3], [2, 4], [0, 1], [0, 2], [0, 3], [0, 4], [5, 1], [5, 2], [5, 3], [5, 4]]\n    }, {\n        colourPalette: 4,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [0, -16, 64, 32], [0, 0, 28, 28]],\n        connections: [[0, 1], [0, 2], [0, 3], [1, 2], [1, 3], [2, 3]]\n    }\n];\n\nconst puzzles2 = [\n    {\n        colourPalette: 2,\n        regions: [[0, 0, 96, 96], [0, 0, 32, 32]],\n        connections: [[0, 1]]\n    }, {\n        colourPalette: 3,\n        regions: [[-24, 0, 48, 96], [24, 0, 48, 96], [0, 0, 32, 32]],\n        connections: [[0, 1], [1, 2], [0, 2]]\n    }, {\n        colourPalette: 4,\n        regions: [[0, -32, 96, 32], [-24, 16, 48, 64], [24, 16, 48, 64], [0, 0, 32, 32]],\n        connections: [[0, 1], [0, 2], [0, 3], [1, 2], [1, 3], [2, 3]]\n    }, {\n        colourPalette: 3,\n        regions: [[-24, -24, 48, 48], [24, -24, 48, 48], [-24, 24, 48, 48], [24, 24, 48, 48], [0, 0, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, -32, 64, 32], [32, -16, 32, 64], [-32, 16, 32, 64], [16, 32, 64, 32], [0, 0, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 2,\n        regions: [\n            [-32, -32, 32, 32], [0, -32, 32, 32], [32, -32, 32, 32],\n            [-32, 0, 32, 32], [0, 0, 32, 32], [32, 0, 32, 32],\n            [-32, 32, 32, 32], [0, 32, 32, 32], [32, 32, 32, 32]\n        ],\n        connections: [\n            [0, 1], [1, 2], [3, 4], [4, 5], [6, 7], [7, 8],\n            [0, 3], [1, 4], [2, 5], [3, 6], [4, 7], [5, 8]\n        ]\n    }\n];\n\nconst ColourableMap = (puzzle, selectedColour, update) => {\n    const colourItem = index => {\n        puzzle.regions[index].colour = selectedColour;\n        update(puzzle);\n    }\n\n    return <Map {...puzzle} colourItem={colourItem}/>\n};\n\nconst evaluate = ({ regions, connections }) => \n    allItemsColoured(regions) &&\n    allConnectedItemsHaveDifferentColours(connections);\n\nconst ColourMap = ({ puzzles }) =>\n\t<PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getMapObject}\n\t\tdisplayPuzzle={ColourableMap} />\n\nexport const ColourMap1 = () => <ColourMap puzzles={puzzles1} />\nexport const ColourMap2 = () => <ColourMap puzzles={puzzles2} />\n","/*\n * Colour all nodes on a graph such that no edges joins two nodes of the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Graph } from './PuzzleComponents/Graph';\nimport { getGraphAndUncolouredCopy } from './puzzleLoaders';\nimport { getNodesOnCircle, getLoopOfEdges, getLineOfEdges } from '../utils/graphUtils';\nimport { graphNodesAreSameColour, samePatternButDifferent } from '../utils/evaluation';\n\n\nconst identity1 = [\n\t{\n\t\tcolourPalette: 1,\n        nodes: [[0, 0, 1]]\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2]),\n        edges: getLineOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: [[-1, 0, 1], [0, 0, 2], [1, 0, 1]],\n        edges: [[0, 1], [1, 2]]\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 4,\n        nodes: getNodesOnCircle([1, 2, 3, 4]),\n        edges: getLoopOfEdges(4)\n\t}, {\n        size: 24,\n        colourPalette: 3,\n        nodes: [[-1, -1, 1], [1, -1, 1], [-0.5, 0, 2], [0.5, 0, 3], [-1, 1, 3], [1, 1, 2]],\n        edges: [[0, 2], [2, 3], [3, 1], [2, 4], [3, 5]]\n    }, {\n        size: 24,\n        colourPalette: 4,\n        nodes: [[-1.5, -1, 1], [-0.5, -1, 2], [0.5, -1, 1], [-0.5, 0, 1], [0.5, 0, 3], [-0.5, 1, 3], [0.5, 1, 4], [1.5, 1, 3]],\n        edges: [[0, 1], [1, 2], [1, 3], [3, 4], [4, 6], [5, 6], [6, 7]]\n    }\n];\n\nconst reflection1 = [\n\t{\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 2], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 1]),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3]),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 2, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 4,\n        nodes: getNodesOnCircle([1, 2, 3, 4]),\n        edges: getLoopOfEdges(4)\n\t}\n];\n\nconst rotation1 = [\n\t{\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 2], { dy: 0.25 }),\n\t\tedges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2], { offsetAngle: 90 }),\n\t\tedges: getLoopOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2]),\n\t\tedges: getLoopOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 2, 2]),\n\t\tedges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 1, 2]),\n\t\tedges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 2], { dy: 0.25 }),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3], { dy: 0.25 }),\n\t\tedges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 4,\n        nodes: getNodesOnCircle([1, 2, 3, 4]),\n        edges: getLoopOfEdges(4)\n\t}\n];\n\nconst colour1 = [\n\t{\n\t\tcolourPalette: 1,\n        nodes: [[0, 0, 2]]\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2]),\n        edges: getLineOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: [[-1, 0, 1], [0, 0, 2], [1, 0, 1]],\n        edges: getLineOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3]),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3, 2]).concat([[0, 0, 3]]),\n        edges: getLoopOfEdges(4).concat([[0, 4], [1, 4] ,[2, 4], [3, 4]])\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3, 1, 2, 3]),\n        edges: getLoopOfEdges(6)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([2, 3, 1, 3, 2, 1]),\n        edges: getLoopOfEdges(6)\n\t}\n];\n\nconst ColourableGraph = (puzzle, selectedColour, update) => {\n    const colourNode = nodeIndex => {\n        puzzle.blank.nodes[nodeIndex].colour = selectedColour;\n        update(puzzle);\n    }\n\n    return <Graph {...puzzle.blank} colourNode={colourNode}/>\n};\n\nconst Transformation = ({ puzzles, transform, evaluate }) => {\n\tconst displayGraphs = (puzzle, selectedColour, update) => <g>\n        <g transform=\"translate(-60)\">\n            <Graph {...puzzle.target} />\n        </g>\n        <g transform={ \"translate(60) \" + transform }>\n            { ColourableGraph(puzzle, selectedColour, update) }\n        </g>\n\n        <line className=\"reflection-line\" y1=\"-200\" y2=\"200\" />\n    </g>\n\n\treturn <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getGraphAndUncolouredCopy}\n\t\tdisplayPuzzle={displayGraphs} />\n};\n\nconst patternMatchGraphs = ({ blank, target }) => {\n\tconst seq1 = blank.nodes.map(node => node.colour);\n\tconst seq2 = target.nodes.map(node => node.colour);\n\treturn samePatternButDifferent(seq1, seq2);\n}\n\nexport const Identity1 = () =>\n\t<Transformation puzzles={identity1} transform=\"\" evaluate={graphNodesAreSameColour} />\n\nexport const TransformColour1 = () =>\n\t<Transformation puzzles={colour1} transform=\"\" evaluate={patternMatchGraphs} />\n\nexport const Reflection1 = () =>\n\t<Transformation puzzles={reflection1} transform=\"scale(-1 1)\" evaluate={graphNodesAreSameColour}/>\n\nexport const Rotation1 = () =>\n\t<Transformation puzzles={rotation1} transform=\"rotate(180)\" evaluate={graphNodesAreSameColour} />\n","import React from 'react';\nimport { getColourClassName, getClickToColour } from './utils';\n\n\nexport const Sequence = ({ sequence=[], colourItem }) => {\n    const size = Math.min(24, 160 / sequence.length);\n    const startX = -(sequence.length * size) / 2;\n\n    return <g className=\"sequence\">\n        { sequence.map((item, i) => {\n            return <rect\n                key={i}\n                x={startX + i * size }\n                y={-size / 2}\n                width={size - 1}\n                height={size - 1}\n                rx=\"3\"\n                ry=\"3\"\n                className={getColourClassName(item)}\n                onClick={getClickToColour(colourItem, item, i)}\n            />\n        })}\n    </g>\n};\n","/*\n * Colour regions on a map such that no two touching regions have the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Sequence } from './PuzzleComponents/Sequence';\nimport { getSequenceObject } from './puzzleLoaders';\nimport { allItemsColoured, sequencesMatch } from '../utils/evaluation';\n\n\nconst puzzles1 = [\n    {\n        colourPalette: 1,\n        pattern: [1, 1, 1, 1],\n        answer: [1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 1, 1],\n        answer: [1, 1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 2, 1, 2],\n        answer: [1, 2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 3, 1, 2, 3],\n        answer: [1, 2, 3]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 2, 2, 1, 1],\n        answer: [2, 2]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 2, 1, 2, 2],\n        answer: [1, 2, 2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 2, 3, 3, 3, 1, 2, 2],\n        answer: [3, 3, 3]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 1, 2, 1, 2, 1, 1, 2],\n        answer: [1, 2, 1, 1]\n    }\n];\n\nconst evaluate = ({ sequence, target }) =>\n    allItemsColoured(sequence) &&\n    sequencesMatch(sequence, target, 'colour');\n\nconst ColourableSequence = (puzzle, selectedColour, update) => {\n    const colourItem = index => {\n        puzzle.sequence[index].colour = selectedColour;\n        update(puzzle);\n    }\n\n    return <Sequence {...puzzle} colourItem={colourItem}/>\n};\n\nconst RepeatingPatterns = ({ puzzles }) =>\n    <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getSequenceObject}\n\t\tdisplayPuzzle={ColourableSequence} />\n\nexport const RepeatingPatterns1 = (props) => <RepeatingPatterns puzzles={puzzles1} {...props} />","import React from 'react';\nimport { getPointsOnACircle } from '../../utils/graphUtils';\nimport { getColourClassName, getClickToColour } from './utils';\n\n\nconst getCirclePackedInCircle = (R, n) => {\n    const phi = Math.PI * (0.5 - 1 / n);\n    const cPhi = Math.cos(phi);\n    const r = R / (1 + cPhi);\n    const points = getPointsOnACircle(n, { r });\n\n    return {\n        categoryPositions: points,\n        categorySize: r * cPhi\n    };\n};\n\nexport const Categories = ({ size, categories, colourCategory }) => {\n    const { categoryPositions, categorySize } = getCirclePackedInCircle(size, categories.length);\n\n    return <g>\n        { categories.map((category, i) => {\n            let transform = `translate(${ categoryPositions[i][0] } ${ categoryPositions[i][1] })`;\n            if (category.rotate) {\n                transform += ` rotate(${ category.rotate })`;\n            }\n\n            return <g key={i} transform={transform}>\n                <circle\n                    className={'category ' + getColourClassName(category)}\n                    onClick={getClickToColour(colourCategory, category, i)}\n                    r={categorySize * 0.95}\n                    />\n                <g className=\"no-pointer\">\n                    { category.component }\n                </g>\n            </g>\n        })}\n    </g>\n}\n","import React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Graph } from './PuzzleComponents/Graph';\nimport { Categories } from './PuzzleComponents/Categories';\nimport { getCategoryObjects, getGraphObject } from './puzzleLoaders';\nimport {\n    linearGraph,\n    loopGraph,\n    getPointsOnACircle,\n    getLineOfEdges,\n    getLoopOfEdges\n} from '../utils/graphUtils';\nimport { allItemsColoured, sequencesAreEquivalent } from '../utils/evaluation';\n\n\n// Graphs\nconst lineOfThree = linearGraph([1, 1, 1]);\nconst triangle = loopGraph([1, 1, 1], 0.8);\nconst lShape = {\n    nodes: [[0.5, 0.5], [-0.5, 0.5], [0.5, -0.5]],\n    edges: [[0, 1], [0, 2]],\n    colour: 1\n};\n\n// Graphs are all the same colour and need to be match by shape\nconst puzzle1 = [\n    {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: { nodes: [[0, 0, 1]] }},\n            { type: 2, item: linearGraph([1, 1]) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, copies: 3, item: lineOfThree },\n            { type: 2, copies: 2, item: triangle }\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            { type: 1, copies: 2, item: lineOfThree },\n            { type: 2, copies: 2, item: triangle },\n            { type: 3, copies: 2, item: lShape }\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            { type: 1, copies: 2, item: loopGraph([1, 1, 1, 1], 0.8) },\n            {\n                type: 2,\n                copies: 3,\n                item: {\n                    nodes: getPointsOnACircle(4, { r: 0.8 }),\n                    edges: getLineOfEdges(4),\n                    colour: 1\n                }\n            }, {\n                type: 3,\n                item: {\n                    nodes: getPointsOnACircle(4, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [0, 3]],\n                    colour: 1\n                }\n            },\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            {\n                type: 1,\n                copies: 2,\n                item: {\n                    nodes: getPointsOnACircle(4, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [0, 3]],\n                    colour: 1\n                }\n            }, {\n                type: 2,\n                copies: 2,\n                item: {\n                    nodes: getPointsOnACircle(4, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [2, 3]],\n                    colour: 1\n                }\n            }, {\n                type: 3,\n                copies: 2,\n                item: {\n                    nodes: getPointsOnACircle(4, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [0, 3], [2, 3]],\n                    colour: 1\n                }\n            },\n        ]\n    }, {\n        colourPalette: 4,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 1, 1, 1, 1], 0.8) },\n            {\n                type: 2,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(5, { r: 0.8 }),\n                    edges: getLineOfEdges(5),\n                    colour: 1\n                }\n            }, {\n                type: 3 ,\n                copies: 2,\n                item: {\n                    nodes: getPointsOnACircle(5, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [0, 3], [0, 4]],\n                    colour: 1\n                }\n            }, {\n                type: 4,\n                item: {\n                    nodes: getPointsOnACircle(5, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [0, 3], [3, 4]],\n                    colour: 1\n                }\n            }\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            {\n                type: 1,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(6, { r: 0.9 }),\n                    edges: ([[0, 1], [1, 2], [2, 5], [4, 5], [3, 4]]),\n                    colour: 1\n                }\n            }, {\n                type: 2,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(6, { r: 0.9 }),\n                    edges: ([[0, 1], [1, 2], [2, 4], [4, 5], [3, 4]]),\n                    colour: 1\n                }\n            }, {\n                type: 3,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(6, { r: 0.9 }),\n                    edges: ([[0, 1], [1, 2], [1, 4], [4, 5], [3, 4]]),\n                    colour: 1\n                }\n            }\n        ]\n    }, {\n        colourPalette: 4,\n        randomRotate: true,\n        categories: [\n            {\n                type: 1,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(6),\n                    edges: getLoopOfEdges(6).concat([[0, 3], [0, 4], [1, 5]]),\n                    colour: 1\n                }\n            }, {\n                type: 2,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(6),\n                    edges: getLoopOfEdges(6).concat([[0, 3], [0, 4], [1, 4]]),\n                    colour: 1\n                }\n            }, {\n                type: 3,\n                copies: 1, \n                item: {\n                    nodes: getPointsOnACircle(6),\n                    edges: getLoopOfEdges(6).concat([[0, 3], [0, 4], [2, 4]]),\n                    colour: 1\n                }\n            }, {\n                type: 4,\n                copies: 1, \n                item: {\n                    nodes: getPointsOnACircle(6),\n                    edges: getLoopOfEdges(6).concat([[0, 2], [0, 4], [1, 5]]),\n                    colour: 1\n                }\n            }\n        ]\n    }\n]\n\n// Graphs are all the same shape and orientation and need to be matched by colour\nconst puzzle2 = [\n\t{\n        colourPalette: 2,\n        categories: [\n            { type: 1, item: { nodes: [[0, 0, 1]] }},\n            { type: 2, item: { nodes: [[0, 0, 2]] }},\n        ]\n    }, {\n\t\tcolourPalette: 2,\n        categories: [\n            { type: 1, item: linearGraph([1, 1]) },\n            { type: 1, item: linearGraph([1, 1]) },\n            { type: 2, item: linearGraph([2, 2]) },\n            { type: 2, item: linearGraph([2, 2]) },\n        ]\n    }, {\n\t\tcolourPalette: 3,\n        categories: [\n            { type: 1, item: linearGraph([1, 1]) },\n            { type: 2, item: linearGraph([1, 2]) },\n            { type: 2, item: linearGraph([1, 2]) },\n            { type: 3, item: linearGraph([2, 2]) },\n        ]\n    }, {\n        colourPalette: 2,\n        categories: [\n            { type: 1, item: linearGraph([1, 2, 1]) },\n            { type: 1, item: linearGraph([1, 2, 1]) },\n            { type: 2, item: linearGraph([2, 1, 2]) },\n            { type: 2, item: linearGraph([2, 1, 2]) },\n        ]\n    }, {\n        colourPalette: 3,\n        categories: [\n            { type: 1, item: linearGraph([1, 1, 2]) },\n            { type: 1, item: linearGraph([1, 1, 2]) },\n            { type: 2, item: linearGraph([1, 2, 1]) },\n            { type: 3, item: linearGraph([2, 1, 1]) },\n            { type: 3, item: linearGraph([2, 1, 1]) },\n        ]\n    }, {\n        colourPalette: 3,\n        categories: [\n            { type: 1, item: loopGraph([1, 1, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1], 0.75) },\n            { type: 3, item: loopGraph([2, 1, 1], 0.75) },\n            { type: 3, item: loopGraph([2, 1, 1], 0.75) },\n        ]\n    }, {\n        colourPalette: 3,\n        categories: [\n            { type: 1, item: loopGraph([1, 1, 2, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 1, 2, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1, 2], 0.75) },\n            { type: 3, item: loopGraph([2, 1, 2, 1], 0.75) },\n            { type: 3, item: loopGraph([2, 1, 2, 1], 0.75) },\n        ]\n    }, {\n        colourPalette: 4,\n        categories: [\n            { type: 1, item: loopGraph([1, 2, 3, 1, 2, 3], 0.75) },\n            { type: 2, item: loopGraph([3, 2, 1, 3, 2, 1], 0.75) },\n            { type: 2, item: loopGraph([3, 2, 1, 3, 2, 1], 0.75) },\n            { type: 3, item: loopGraph([1, 2, 3, 2, 3, 1], 0.75) },\n            { type: 3, item: loopGraph([1, 2, 3, 2, 3, 1], 0.75) },\n            { type: 4, item: loopGraph([3, 2, 1, 2, 3, 1], 0.75) },\n        ]\n    }\n];\n\n// Graphs are all the same shape but rotated and need to be matched by colour\nconst puzzle3 = [\n    {\n        colourPalette: 3,\n        categories: [\n            { type: 1, item: linearGraph([1, 1]) },\n            { type: 2, item: linearGraph([1, 2]) },\n            { type: 2, item: linearGraph([2, 1]) },\n            { type: 3, item: linearGraph([2, 2]) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: linearGraph([1, 2, 1]) },\n            { type: 1, item: linearGraph([1, 2, 1]) },\n            { type: 1, item: linearGraph([1, 2, 1]) },\n            { type: 2, item: linearGraph([2, 1, 2]) },\n            { type: 2, item: linearGraph([2, 1, 2]) },\n            { type: 2, item: linearGraph([2, 1, 2]) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 2, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 2, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 2, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 1, 2], 0.75) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 1, 2, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 1, 2, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 1, 2, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1, 2], 0.75) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 2, 3], 0.75) },\n            { type: 1, item: loopGraph([1, 2, 3], 0.75) },\n            { type: 2, item: loopGraph([1, 3, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 3, 2], 0.75) },\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 1, 2, 3], 0.75) },\n            { type: 1, item: loopGraph([1, 1, 2, 3], 0.75) },\n            { type: 2, item: loopGraph([1, 1, 3, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 1, 3, 2], 0.75) },\n            { type: 3, item: loopGraph([1, 2, 1, 3], 0.75) },\n            { type: 3, item: loopGraph([1, 2, 1, 3], 0.75) },\n        ]\n    }, {\n        colourPalette: 4,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 2, 3, 4], 0.75) },\n            { type: 1, item: loopGraph([1, 2, 3, 4], 0.75) },\n            { type: 2, item: loopGraph([1, 4, 3, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 4, 3, 2], 0.75) },\n            { type: 3, item: loopGraph([1, 3, 2, 4], 0.75) },\n            { type: 4, item: loopGraph([1, 2, 4, 3], 0.75) },\n        ]\n    }, {\n        colourPalette: 4,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 2, 3, 1, 2, 3], 0.75) },\n            { type: 2, item: loopGraph([1, 3, 2, 1, 3, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 3, 2, 1, 3, 2], 0.75) },\n            { type: 3, item: loopGraph([1, 2, 3, 2, 3, 1], 0.75) },\n            { type: 4, item: loopGraph([1, 2, 1, 3, 2, 3], 0.75) },\n            { type: 4, item: loopGraph([1, 2, 1, 3, 2, 3], 0.75) },\n        ]\n    }\n];\n\nconst puzzles = [puzzle1, puzzle2, puzzle3];\n\nconst displayCategories = (categories, selectedColour, update) => {\n    categories.forEach(item => {\n        item.component = <Graph {...getGraphObject(item.object)} />\n    });\n\n    const colourCategory = index => {\n        categories[index].colour = selectedColour;\n        update(categories);\n    };\n\n    return <Categories size=\"128\" categories={categories} colourCategory={colourCategory} />\n};\n\nconst evaluate = puzzle =>\n    allItemsColoured(puzzle) &&\n    sequencesAreEquivalent(puzzle.map(item => item.category), puzzle.map(item => item.colour));\n\nexport const Categorisation = (n) =>\n    <PuzzlePage\n        puzzles={puzzles[n]}\n        evaluate={evaluate}\n        getPuzzleObject={getCategoryObjects}\n        displayPuzzle={displayCategories} />\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport PuzzleMap from './PuzzleMap/PuzzleMap';\nimport { ColourGraph1, ColourGraph2, ColourGraph3 } from './Puzzles/ColourGraphs';\nimport { ColourMap1, ColourMap2 } from './Puzzles/ColourMaps';\nimport { Identity1, TransformColour1, Reflection1, Rotation1 } from './Puzzles/Transformations';\nimport { RepeatingPatterns1 } from './Puzzles/RepeatingPatterns';\nimport { Categorisation } from './Puzzles/Categorisation';\n\nimport './base.css';\nimport './Icons/icons.css';\n\n\nconst BASE_URL = '/pattern-puzzles';\n\nexport default () =>\n    <Router>\n        <Switch>\n            <Route path={`${BASE_URL}/colour-graphs-1`} component={ColourGraph1} />\n            <Route path={`${BASE_URL}/colour-graphs-2`} component={ColourGraph2} />\n            <Route path={`${BASE_URL}/colour-graphs-3`} component={ColourGraph3} />\n            <Route path={`${BASE_URL}/colour-maps-1`} component={ColourMap1} />\n            <Route path={`${BASE_URL}/colour-maps-2`} component={ColourMap2} />\n            <Route path={`${BASE_URL}/repeating-patterns-1`} component={RepeatingPatterns1} />\n            <Route path={`${BASE_URL}/identity-1`} component={Identity1} />\n            <Route path={`${BASE_URL}/reflection-1`} component={Reflection1} />\n            <Route path={`${BASE_URL}/rotation-1`} component={Rotation1} />\n            <Route path={`${BASE_URL}/transform-colour-1`} component={TransformColour1} />\n            <Route path={`${BASE_URL}/categorisation-1`} component={() => Categorisation(0)} />\n            <Route path={`${BASE_URL}/categorisation-2`} component={() => Categorisation(1)} />\n            <Route path={`${BASE_URL}/categorisation-3`} component={() => Categorisation(2)} />\n            <Route path={`${BASE_URL}/`} component={PuzzleMap} />\n        </Switch>\n    </Router>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}