{"version":3,"sources":["PuzzleMap/Icons/ColourGraphs.js","utils/common.js","Toolbars/Toolbar.js","Toolbars/Button.js","Puzzles/PuzzlePage.js","Puzzles/PuzzleComponents/Primitives.js","Puzzles/PuzzleComponents/utils.js","Puzzles/PuzzleComponents/Graph.js","Puzzles/puzzleLoaders.js","utils/graphUtils.js","utils/evaluation.js","Puzzles/ColourGraphs.js","PuzzleMap/Icons/GraphTheory.js","Puzzles/GraphTheory.js","PuzzleMap/Icons/ColourMaps.js","Puzzles/PuzzleComponents/Map.js","Puzzles/ColourMaps.js","PuzzleMap/Icons/Transformations.js","Puzzles/Transformations.js","PuzzleMap/Icons/Sequences.js","Puzzles/PuzzleComponents/Sequence.js","Puzzles/Sequences.js","PuzzleMap/Icons/Categorisation.js","Puzzles/PuzzleComponents/Categories.js","Puzzles/Categorisation.js","puzzleData.js","PuzzleMap/Icons/Icon.js","PuzzleMap/PuzzleMap.js","serviceWorker.js","index.js","App.js"],"names":["ColourGraphs","react_default","a","createElement","className","x","y","width","height","fill","x1","y1","x2","y2","cx","cy","r","d","handleKeyDown","evt","callback","key","keyCode","DELTA_ANGLE","Math","PI","Toolbar","_ref","puzzle","nColours","clearButton","selectedColour","nButtons","angle","colours","_loop","i","cos","sin","concat","setColour","setState","push","role","aria-checked","tabIndex","onClick","onKeyDown","selectColourIndicator","Button","props","flashing","buttonProps","link","viewBox","Object","assign","COLOURS","PuzzlePage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","queryString","parse","location","search","index","parseInt","q","state","solved","update","bind","assertThisInitialized","getPuzzle","nextPuzzle","backToMenu","_this$props","getPuzzleObject","puzzles","colourPalette","nextState","history","evaluate","length","aria-label","_this$state","style","color","getNextPuzzleButton","id","preserveAspectRatio","result","in","dx","dy","stdDeviation","in2","mode","operator","radius","displayPuzzle","React","Component","withRouter","Line","isColourable","item","colourItem","arguments","undefined","colour","fixed","colourThisItem","Graph","_ref$edges","edges","_ref$nodes","nodes","colourNode","map","edge","Primitives_Line","node","updateNodeColour","ColourableGraph","Graph_Graph","nodeIndex","targetNode","ColourablePath","graph","path","pop","slice","forEach","node1","node2","getGraphObject","_ref$size","size","_ref$r","nodeObjects","_ref2","_ref3","slicedToArray","nodeColour","Boolean","Set","edgeObjects","_ref4","_ref5","n1","n2","add","getGraphWithPath","getGraphAndUncolouredCopy","_ref6","_ref6$nodes","_ref6$edges","_ref6$size","_ref6$r","target","blank","_ref7","_ref8","getMapObject","_ref9","_ref9$regions","regions","_ref9$connections","connections","_ref9$size","regionObjects","_ref10","_ref11","connectionObjects","_ref12","_ref13","getSequenceObject","_ref14","pattern","answer","sequence","n","getGraphSequence","_ref15","graphs","answerGraph","blankGraph","getCategoryObjects","_ref16","categories","randomRotate","categoryObjects","category","copies","type","object","rotate","floor","random","arr","j","temp","shuffle","getArray","Array","isArray","from","getPointsOnACircle","_ref$offsetAngle","offsetAngle","_ref$dx","_ref$dy","points","dAngle","getNodesOnCircle","_ref2$r","_ref2$offsetAngle","_ref2$dx","_ref2$dy","getLineOfEdges","start","stop","getLoopOfEdges","max","linearGraph","scale","startX","loopGraph","getRegularPolygonGraph","_","triangleGraph","squareGraph","allItemsHaveValue","items","attr","every","allItemsColoured","allConnectedItemsHaveDifferentColours","filter","cxn","graphIsChromatic","sequencesMatch","seq1","seq2","sequencesAreEquivalent","mapping1","Map","mapping2","value1","get","value2","set","graphNodesAreSameColour","samePatternButDifferent","min","sequenceHasNoMatches","Icons_GraphTheory","R3","sqrt","ColourMaps","rx","ry","_ref$regions","ColourableMap","Map_Map","Transformations","Fragment","href","transform","identity1","reflection1","rotation1","colour1","Transformation","Puzzles_PuzzlePage","Transformations_Transformation","Icons_Sequences","Sequence","_ref$sequence","GraphSequence","t1","t2","t112","t221","t121","t211","t123","t231","t312","s1122","s2211","s2112","s1221","s1212","s2121","correctSequence","correctGraphSequence","ColourableSequence","Sequence_Sequence","Icons_Categorisation","Categories","colourCategory","_getCirclePackedInCir","R","phi","cPhi","categorySize","categoryPositions","getCirclePackedInCircle","component","puzzle1","puzzle2","puzzle3","triangleWithCenter","lowTriangle","displayCategories","Categories_Categories","Categorisation","puzzleData","categorisation-0","slug","icon","CategorisationIcons","categorisation-1","categorisation-2","categorisation-3","graph-theory-0","GraphTheoryIcons","addData","name","icons","components","getData","ColourGraphIcons","ColourMapIcons","TransformationIcons","SequencesIcons","puzzleLayout","Icon","children","PuzzleMap","section","react_router_dom","to","window","hostname","match","ReactDOM","render","react_router","values","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8a14032.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst ColourGraphIcon1 = () => <g>\n    <g className=\"graph-edges\">\n        <rect x=\"-20\" y=\"-20\" width=\"40\" height=\"40\" fill=\"none\" />\n        <line x1=\"-20\" y1=\"-20\" x2=\"20\" y2=\"20\" />\n        <line x1=\"-20\" y1=\"20\" x2=\"20\" y2=\"-20\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-20\" cy=\"-20\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"-20\" cy=\"20\" r=\"8\" />\n        <circle className=\"colour-1\" cx=\"20\" cy=\"20\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"20\" cy=\"-20\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"0\" cy=\"0\" r=\"8\" />\n    </g>\n</g>\n\nconst ColourGraphIcon2 = () => <g>\n    <g className=\"graph-edges\">\n        <rect x=\"-32\" y=\"-16\" width=\"64\" height=\"32\" />\n        <line x1=\"0\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n        <line x1=\"-32\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n        <line x1=\"32\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-32\" cy=\"-16\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"0\" cy=\"-16\" r=\"8\" />\n        <circle className=\"colour-1\" cx=\"32\" cy=\"-16\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"32\" cy=\"16\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"0\" cy=\"16\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"-32\" cy=\"16\" r=\"8\" />\n    </g>\n</g>\n\nconst ColourGraphIcon3 = () => <g>\n    <g className=\"graph-edges\">\n        <path d=\"M32 0L16 27.7h-32L-32 0 -16 -27.71h32z\" />\n        <line x1=\"16\" y1=\"-27.71\" x2=\"16\" y2=\"27.71\" />\n        <line x1=\"-16\" y1=\"-27.71\" x2=\"-16\" y2=\"27.71\" />\n        <line className=\"edge-outline\" x1=\"-32\" y1=\"0\" x2=\"32\" y2=\"0\" />\n        <line x1=\"-32\" y1=\"0\" x2=\"32\" y2=\"0\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"32\" cy=\"0\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"16\" cy=\"27.71\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"-16\" cy=\"27.71\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"-32\" cy=\"0\" r=\"8\" />\n        <circle className=\"colour-1\" cx=\"-16\" cy=\"-27.71\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"16\" cy=\"-27.71\" r=\"8\" />\n    </g>\n</g>\n\nexport default [ColourGraphIcon1, ColourGraphIcon2, ColourGraphIcon3];\n","export function shuffle(arr) {\n    for (let i = arr.length; i--; ) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n    return arr;\n}\n\n// Click enter or space triggers a given callback\nexport const handleKeyDown = (evt, callback) => {\n    if (evt.key === 'Enter' || evt.keyCode === 32) {\n        callback();\n    }\n};\n","import React from 'react';\nimport { handleKeyDown } from '../utils/common';\n\n\nconst TOOLBAR_R = 136;\nconst DELTA_ANGLE = Math.PI / 18;\n\nexport default function ({\n    puzzle,\n    nColours,\n    clearButton,\n    selectedColour\n}) {\n    const r = 8;\n    const nButtons = nColours + (clearButton ? 1 : 0);\n    let angle = Math.PI - DELTA_ANGLE * (nButtons - 1) / 2;\n\n    const colours = [];\n    for (let i = 1; i <= nColours; i++) {\n        const cx = (TOOLBAR_R + r) * Math.cos(angle);\n        const cy = (TOOLBAR_R + r) * Math.sin(angle);\n        \n        let className = `colour-palette colour-${i}`;\n        if (selectedColour === i) {\n            className += ' selected';\n        } else if (i === 1 && !selectedColour) {\n            className += ' flashing';\n        }\n\n        const setColour = () => puzzle.setState({ selectedColour: i });\n\n        colours.push(\n            <circle\n                className={className}\n                role=\"radio\"\n                aria-checked={selectedColour === i}\n                tabIndex=\"0\"\n                key={i}\n                cx={cx}\n                cy={cy}\n                r={r}\n                onClick={setColour}\n                onKeyDown={(evt) => handleKeyDown(evt, setColour) }\n            />\n        );\n\n        angle += DELTA_ANGLE;\n    }\n\n    let selectColourIndicator = \"selected-colour-indicator\";\n    if (selectedColour) {\n        selectColourIndicator += ` colour-${selectedColour}`;\n    }\n\n    return <g className=\"toolbar\">\n        <circle className={selectColourIndicator} r=\"132\" />\n        <g className=\"colour-palette\" role=\"radiogroup\">\n            { colours }\n        </g>\n    </g>;\n}\n","import React from 'react';\nimport { handleKeyDown } from '../utils/common';\n\n\nexport default (props) => {\n    let className = props.className || \"\";\n    if (props.flashing) { className += \" flashing\"; }\n\n    let buttonProps = {};\n    if (!props.link) {\n        buttonProps.tabIndex = 0;\n    }\n    \n    if (props.onClick) {\n        buttonProps.onClick = props.onClick;\n        buttonProps.onKeyDown = (evt) => handleKeyDown(evt, props.onClick);\n        buttonProps.role = \"button\";\n    }\n\n    return <svg viewBox=\"-15 -15 31 31\">\n        <circle\n            r=\"9\"\n            className={className}\n            {...buttonProps} />\n    </svg>\n};\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { parse } from 'query-string';\n\nimport Toolbar from '../Toolbars/Toolbar';\nimport Button from '../Toolbars/Button';\n\nimport './puzzle.css';\nimport './puzzleChamber.css';\n\n\nconst COLOURS = [\n    'rgb(170, 170, 170)',\n    'rgb(20, 146, 196)',\n    'rgb(196, 20, 96)',\n    'rgb(20, 198, 96)',\n    'rgb(220, 220, 20)',\n];\n\nclass PuzzlePage extends React.Component {\n    constructor(props) {\n        super(props);\n   \n        const queryString = parse(props.location.search);\n        const index = parseInt(queryString.q) || 0;\n\n        this.state = {\n            index,\n\t\t\tsolved: false,\n            selectedColour: null,\n        }\n\n        this.update = this.update.bind(this);\n        this.getPuzzle = this.getPuzzle.bind(this);\n        this.nextPuzzle = this.nextPuzzle.bind(this);\n        this.backToMenu = this.backToMenu.bind(this);\n    }\n\n    componentDidMount() {\n        // Load the first puzzle\n        this.getPuzzle(this.state.index);\n    }\n\n    getPuzzle(index) {\n        const { getPuzzleObject, puzzles } = this.props;\n        const puzzle = puzzles[index];\n\n        if (puzzle) {\n            this.setState({\n                puzzle: getPuzzleObject(puzzle),\n                clearButton: puzzle.clearButton,\n                colourPalette: puzzle.colourPalette,\n            });\n        }\n    }\n\n    nextPuzzle() {\n        const nextState = this.state.index + 1;\n        this.setState({\n            index: nextState,\n            solved: false,\n            selectedColour: null\n        });\n        this.getPuzzle(nextState);\n    }\n\n    backToMenu() {\n        this.props.history.push(`/pattern-puzzles`)\n    }\n\n    // Child element has updated so evaluate to see if puzzle has been solved\n    update(puzzle) {\n        const solved = this.props.evaluate(puzzle);\n        this.setState({ puzzle, solved });\n    }\n\n    getNextPuzzleButton() {\n        // Only show button if the puzzle has been solved\n        if (!this.state.solved) { return null; }\n\n        if (this.state.index < this.props.puzzles.length - 1) {\n            // Button to go to the next puzzle\n            return <div className=\"menu-button next-puzzle-button\" aria-label=\"Next puzzle\">\n                <Button onClick={this.nextPuzzle}/>\n            </div>\n        } else {\n            // Button to go back to the home page\n            return <div className=\"menu-button next-puzzle-button\" aria-label=\"Puzzle completed\" role=\"link\">\n                <Button onClick={this.backToMenu}/>\n            </div>\n        }\n    }\n\n    render() {\n        const { index, puzzle, selectedColour } = this.state;\n        if (!puzzle) { return null; }\n\n        const colourPalette = this.state.colourPalette || this.props.colourPalette;\n        const clearButton = this.state.clearButton || this.props.clearButton;\n\n        // Determine what the selected colour is if we have selected one\n        const style = {\n            color: COLOURS[selectedColour || 0]\n        };\n        const className = selectedColour ? \"colour-selected\" : \"\";\n\n        return <main>\n            <nav>\n                <div className=\"menu-button back-button\" aria-label=\"Back to menu\" role=\"link\">\n                    <Button onClick={this.backToMenu}/>\n                </div>\n\n                { this.getNextPuzzleButton() }\n            </nav>\n\n            <svg id=\"puzzle-chamber\" viewBox=\"-128 -128 256 256\" preserveAspectRatio=\"xMidYMid meet\">\n                <defs>\n                    <filter id=\"shadow-filter\">\n                        <feOffset result=\"offOut\" in=\"SourceAlpha\" dx=\"2\" dy=\"2\"/>\n                        <feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\"5\" />\n                        <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\n                    </filter>\n                    <filter id=\"glow-filter\" x=\"-250%\" y=\"-250%\" width=\"500%\" height=\"500%\">\n                        <feMorphology in=\"mask\" result=\"dilated\" operator=\"dilate\" radius=\"1\" />\n                        <feGaussianBlur stdDeviation=\"3\" result=\"colouredBlur\" />\n                        <feMerge>\n                            <feMergeNode in=\"coloredBlur\"/>\n                            <feMergeNode in=\"SourceGraphic\"/>\n                        </feMerge>\n                    </filter>\n                </defs>\n\n                <rect className=\"background\" x=\"-200\" y=\"-200\" width=\"400\" height=\"400\" />\n\n                <g id=\"puzzle\" key={index} className={className} style={style}>\n                    { this.props.displayPuzzle(puzzle, selectedColour, this.update) }\n                </g>\n\n                <circle id=\"chamber-window\" r=\"212\" />\n                <Toolbar \n                    puzzle={this}\n                    nColours={colourPalette}\n                    clearButton\n                    selectedColour={selectedColour}\n                />\n            </svg>\n        </main>\n    }\n};\n\nexport default withRouter(PuzzlePage);\n","import React from 'react';\n\n\nexport const Line = ({ className, x1, y1, x2, y2 }) =>\n    <line className={className} x1={x1} y1={y1} x2={x2} y2={y2} />\n","import { handleKeyDown } from '../../utils/common';\n\n\n// Given a node, return props to make it colourable\nexport function isColourable(item, i, colourItem, className=\"\") {\n    if (item.colour) {\n        className += ` fill-${item.colour}`;\n    } else {\n        className += \" no-fill\";\n    }\n\n    if (item.fixed || !colourItem) {\n        return { className };\n    }\n\n    className += \" colourable\";\n\n    const colourThisItem = () => colourItem(i);\n\n    return {\n        className,\n        tabIndex: 0,\n        onClick: colourThisItem,\n        onKeyDown: (evt) => handleKeyDown(evt, colourThisItem)\n    };\n}\n","import React from 'react';\nimport { Line } from './Primitives';\nimport { isColourable } from './utils';\n\n\nexport const Graph = ({ edges=[], nodes=[], colourNode }) =>\n    <g className=\"graph\">\n        <g className=\"graph-edges\">\n            { edges.map((edge, i) =>\n                <g key={i}>\n                    <Line className=\"edge-outline\" {...edge} />\n                    <Line {...edge} />\n                </g>\n            )}\n        </g>\n\n        <g className=\"graph-nodes\">\n            { nodes.map((node, i) => \n                <circle\n                    key={i}\n                    r={node.r}\n                    cx={node.x}\n                    cy={node.y}\n                    {...isColourable(node, i, colourNode)}\n                />\n            )}\n        </g>\n    </g>\n\n// Colour node with the given colour, unless it already is that colour, in which remove\nconst updateNodeColour = (node, colour) => {\n    if (node.colour !== colour) {\n        node.colour = colour;\n    } else if (!node.fixed) {\n        node.colour = 0;\n    }\n}\n\n// <puzzle> is an object representing the puzzle and what the update function uses to determine\n//  whether the puzzle has been solved\n// <selectedColour> is colour currently select by the user, so what a node will be coloured when clicked\n// <update> is the puzzle's update function which allows the puzzle's state to be updated and then evaluated\nexport const ColourableGraph = (puzzle, colour, update) => {\n    // Function that takes a node index, to colour the node in a graph, and update it\n    const colourNode = nodeIndex => {\n        const targetNode = puzzle.nodes[nodeIndex];\n        updateNodeColour(targetNode, colour);\n        update(puzzle);\n    };\n\n    return <Graph {...puzzle} colourNode={colourNode} />\n};\n\n// Same as a colourable graph, except you can only colour points next to the one you last coloured\n// TODO: need to remember path, in case have to undo it\nexport const ColourablePath = (graph, colour, update) => {\n    // Function that takes a node index, to colour the node in a graph, and update it\n    const colourNode = nodeIndex => {\n        if (!colour) { return; }\n\n        let targetNode = graph.nodes[nodeIndex];\n        updateNodeColour(targetNode, colour);\n\n        if (targetNode.colour) {\n            graph.path.push(targetNode);\n        } else {\n            // Remove the node we clicked on\n            graph.path.pop();\n            // The active node is now the previous node in the path\n            targetNode = graph.path.slice(-1)[0];\n            if (targetNode) {\n                targetNode.fixed = false\n            }\n        }\n\n        // Update nodes\n        if (targetNode) {\n            // All nodes are fixed other than those connected to the targetNodes\n            for (let i = 0; i < graph.nodes.length; i++) {\n                const node = graph.nodes[i];\n                if (node === targetNode) { continue; }\n\n                node.fixed = true;\n                if (!node.colour) {\n                    // Non-coloured node connected to the target node are colourable\n                    node.edges.forEach(edge => {\n                        if (edge.node1 === targetNode || edge.node2 === targetNode) {\n                            node.fixed = false;\n                        }\n                    })\n                }\n            }\n        } else {\n            // No nodes left in the path, so all nodes are active\n            graph.nodes.forEach(node => node.fixed = false);\n        }\n\n        update(graph);\n    };\n\n    return <Graph {...graph} colourNode={colourNode} />\n};","/***\n * These functions take the raw puzzle data and return an object that can used to\n * display the puzzle and determine when the correct answer is found\n***/\n\nimport { shuffle } from '../utils/common';\n\n// Given arrays of node coordinates and edge coordinates, return an object of nodes and edges\nexport function getGraphObject({ nodes=[], edges=[], size=32, r=10, colour }) {\n    const nodeObjects = nodes.map(([x, y, nodeColour]) => ({\n        r,\n        x: x * size,\n        y: y * size,\n        colour: nodeColour || colour,\n        fixed: Boolean(nodeColour || colour),\n        edges: new Set()\n    }));\n\n    const edgeObjects = edges.map(([n1, n2]) => {\n        const node1 = nodeObjects[n1];\n        const node2 = nodeObjects[n2];\n        const edge = {\n            node1,\n            node2,\n            x1: node1.x,\n            y1: node1.y,\n            x2: node2.x,\n            y2: node2.y\n        };\n\n        node1.edges.add(edge);\n        node2.edges.add(edge);\n\n        return edge;\n    });\n\n    return {\n        nodes: nodeObjects,\n        edges: edgeObjects\n    };\n}\n\n// A graph object with a path array to store an array of nodes forming a path\nexport function getGraphWithPath(props) {\n    const graph = getGraphObject(props);\n    graph.path = [];\n    return graph;\n}\n\n// Given arrays of node coordinates and edge coordinates, return two objects of nodes and edges,\n// one includes the node colours and one is empty\nexport function getGraphAndUncolouredCopy({ nodes=[], edges=[], size=32, r=8 }) {\n    const target = getGraphObject({ nodes, edges, size, r });\n\n    // Remove the colours from the nodes\n    const blankNodes = nodes.map(([x, y]) => [x, y]);\n    const blankGraph = getGraphObject({ nodes: blankNodes, edges, size, r });\n\n    return { target, blank: blankGraph };\n}\n\nexport function getMapObject({ regions=[], connections=[], size=1 }) {\n    const regionObjects = regions.map(([x, y, width, height]) => ({\n        x: (x - width / 2) * size,\n        y: (y - height / 2) * size,\n        width: width * size,\n        height: height * size,\n    }));\n\n    const connectionObjects = connections.map(([n1, n2]) => ({\n        node1: regionObjects[n1],\n        node2: regionObjects[n2],\n    }));\n\n    // Create a graph of the map in order to evaluate the solution\n    return {\n        regions: regionObjects,\n        connections: connectionObjects\n    };\n}\n\nexport function getSequenceObject({ pattern, answer }) {\n    //  Get a sequence of node objects\n    const sequence = pattern.map(colour => ({\n        colour,\n        fixed: colour > 0\n    }));\n\n    // Target sequence is the starting sequence with any 0s replaced by the answer items\n    let n = 0;\n    const target = pattern.map(colour => {\n        if (colour > 0) {\n            return { colour };\n        } else {\n            return { colour: answer[n++] };\n        }\n    });\n\n    return { sequence, target };\n}\n\nexport function getGraphSequence({ graphs, answer }) {\n    const sequence = [];\n    const target = [];\n\n    let n = 0;\n    graphs.forEach(graph => {\n        if (graph) {\n            sequence.push(getGraphObject(graph));\n            target.push(getGraphObject(graph));\n        } else {\n            // Target sequence is the starting sequence with any nulls replaced by the answer graphs\n            const answerGraph = getGraphObject(answer[n]);\n            target.push(answerGraph);\n            \n            // Displayed sequence show answer as a blank graph\n            const blankGraph = getGraphObject(answer[n]);\n            blankGraph.nodes.forEach(node => {\n                node.fixed = false;\n                node.colour = 0;\n            });\n\n            sequence.push(blankGraph);\n            target.push(answerGraph);\n            n++;\n        }\n    });\n\n    return { sequence, target };\n}\n\n// Return an array of category object which have a colour, and an object to display\nexport function getCategoryObjects({ categories, randomRotate }) {\n    const categoryObjects = [];\n    \n    categories.forEach(category => {\n        const copies = category.copies || 1;\n\n        for (let i = 0; i < copies; i++) {\n            categoryObjects.push({\n                category: category.type,\n                object: category.item,\n                rotate: randomRotate ? Math.floor(Math.random() * 12) * 30 : 0\n            });\n        }\n    });\n\n    return shuffle(categoryObjects);\n}\n","// If arr is not an array return an empty array with the length\nfunction getArray(arr) {\n    if (Array.isArray(arr)) {\n        return arr;\n    }\n    return Array.from({ length: arr });\n}\n\nexport function getPointsOnACircle(n, {r=1, offsetAngle=0, dx=0, dy=0}={}) {\n    const points = [];\n    const dAngle = 2 * Math.PI / n;\n    let angle = (offsetAngle * Math.PI / 180 || 0) - 0.5 * dAngle;\n\n    for (let i = 0; i < n; i++) {\n        points.push([\n            dx + r * Math.sin(angle),\n            dy + r * Math.cos(angle),\n        ]);\n        angle += dAngle;\n    }\n\n    return points;\n}\n\nexport function getNodesOnCircle(colours, {r=1, offsetAngle=0, dx=0, dy=0}={}) {\n    colours = getArray(colours);\n    const n = colours.length;\n    const points = getPointsOnACircle(n, { r, offsetAngle, dx, dy });\n\n    // Combine coordinates with colours\n    const nodes = points.map(([x, y], i) => [x, y, colours[i]]);\n\n    return nodes;\n}\n\nexport function getLineOfEdges(start, stop) {\n    if (stop === undefined) {\n        stop = start - 1;\n        start = 0;\n    }\n\n    var edges = [];\n    for (var i = start; i < stop; i++) {\n        edges.push([i, i + 1]);\n    }\n\n    return edges;\n}\n\nexport function getLoopOfEdges(start, stop) {\n    if (stop === undefined) {\n        stop = Math.max(0, start - 1);\n        start = 0;\n    }\n\n    const edges = getLineOfEdges(start, stop);\n    if (start !== stop) {\n        edges.push([stop, start]);\n    }\n\n    return edges;\n}\n\nexport function linearGraph(colours, scale=1) {\n    colours = getArray(colours);\n    const n = colours.length;\n    const startX = - (n - 1) * scale / 2;\n    const nodes = colours.map((colour, i) => [startX + i * scale, 0, colour])\n    const edges = getLineOfEdges(n);\n\n    return { nodes, edges };\n}\n\nexport function loopGraph(colours, scale=1) {\n    colours = getArray(colours);\n    const nodes = getNodesOnCircle(colours, { r: scale });\n    const edges = getLoopOfEdges(colours.length);\n\n    return { nodes, edges };\n}\n\nfunction getRegularPolygonGraph(size, colours, scale=1) {\n    // Can pass in a single colour to set all nodes to that colour\n    if (!Array.isArray(colours)) {\n        colours = Array.from({ length: size }).map(_ => colours);\n    }\n\n    return {\n        nodes: getNodesOnCircle(colours, { r: scale }),\n        edges: getLoopOfEdges(size)\n    };\n}\n\nexport function triangleGraph(colours, scale=1) {\n    return getRegularPolygonGraph(3, colours, scale);\n}\n\nexport function squareGraph(colours, scale=1) {\n    return getRegularPolygonGraph(4, colours, scale);\n}\n","// Test whether all items are bigger than 0 or have an attrubute with value bigger than 0\nexport const allItemsHaveValue = (items=[], attr) =>\n    attr ?\n        items.every(item => item[attr] > 0) :\n        items.every(item => item > 0);\n\nexport const allItemsColoured = (items=[]) => allItemsHaveValue(items, 'colour');\n\nexport const extractAttribute = (items=[], attr) => items.map(item => item[attr]);\n\nexport function allConnectedItemsHaveDifferentColours(cxns=[]) {\n    const failingCxns = cxns.filter(cxn => cxn.node1.colour === cxn.node2.colour);\n    return failingCxns.length === 0;\n}\n\nexport const graphIsChromatic = ({ nodes, edges }) => \n    allItemsHaveValue(nodes, 'colour') &&\n    allConnectedItemsHaveDifferentColours(edges);\n\nexport const sequencesMatch = (seq1, seq2, attr) => {\n    if (seq1.length !== seq2.length) { return false; }\n    for (let i = 0; i < seq1.length; i++) {\n        const value1 = attr ? seq1[i][attr] : seq1[i];\n        const value2 = attr ? seq2[i][attr] : seq2[i];\n        if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n};\n\nexport const sequenceHasNoMatches = (seq1, seq2) => {\n    const n = Math.min(seq1.length, seq2.length);\n\n    for (let i = 0; i < n; i++) {\n        if (seq1[i] === seq2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Test whether there is a consistent mapping between the values in one array to the value the other\nexport const sequencesAreEquivalent = (seq1, seq2) => {\n    if (seq1.length !== seq2.length) { \n        return false;\n    }\n\n    const mapping1 = new Map();\n    const mapping2 = new Map();\n\n    for (let i = 0; i < seq1.length; i++) {\n        const value1 = mapping1.get(seq1[i]);\n        const value2 = mapping2.get(seq2[i]);\n\n        if (value1 === undefined) {\n            mapping1.set(seq1[i], seq2[i]);\n        } else if (value1 !== seq2[i]) {\n            return false;\n        }\n\n        if (value2 === undefined) {\n            mapping2.set(seq2[i], seq1[i]);\n        } else if (value2 !== seq1[i]) {\n            return false;\n        }\n        \n    }\n\n    return true;\n};\n\n// Test whether the nodes of two graphs are the same colour\nexport const graphNodesAreSameColour = ({ blank, target }) => \n    allItemsColoured(blank.nodes) &&\n    sequencesMatch(blank.nodes, target.nodes, 'colour');\n\n// Test whether the nodes of two graphs have the same pattern,\n// i.e. there is a consistent mapping from the colours in one graph to the colour in the target\nexport const graphNodesHaveSamePattern = ({ blank, target }) =>\n    allItemsColoured(blank.nodes) &&\n    sequencesAreEquivalent(blank.nodes, target.nodes);\n\nexport const samePatternButDifferent = (seq1, seq2) =>\n    allItemsHaveValue(seq1) &&\n    allItemsHaveValue(seq2) &&\n    sequenceHasNoMatches(seq1, seq2) &&\n    sequencesAreEquivalent(seq1, seq2);\n","/*\n * Colour all nodes on a graph such that no edges joins two nodes of the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { ColourableGraph } from './PuzzleComponents/Graph';\nimport { getGraphObject } from './puzzleLoaders';\nimport { getNodesOnCircle, getLoopOfEdges } from '../utils/graphUtils';\nimport { graphIsChromatic } from '../utils/evaluation';\n\n\nconst puzzles1 = [\n\t{\n\t\tcolourPalette: 1,\n\t\tnodes: [[0, 0]]\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: [[-1, 0], [1, 0]],\n\t\tedges: [[0, 1]],\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: [[-2, 0], [0, 0], [2, 0]],\n\t\tedges: [[0, 1], [1, 2]],\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: getNodesOnCircle(3),\n\t\tedges: getLoopOfEdges(3),\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4),\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4).concat([[1, 3]]),\n\t}, {\n\t\tcolourPalette: 4,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4).concat([[1, 3], [0, 2]]),\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: [[0, 0]].concat(getNodesOnCircle(4)),\n\t\tedges: getLoopOfEdges(1, 4).concat([[0, 1], [0, 2], [0, 3], [0, 4]]),\n\t}\n];\n\nconst puzzles2 = [\n    {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6),\n    }, {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[1, 4]]),\n    }, {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 3]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [1, 4], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [1, 4], [1, 3]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: getNodesOnCircle(3).concat(getNodesOnCircle(3, { r: 2, offsetAngle: 60 })),\n        edges: getLoopOfEdges(3).concat([[0, 3], [1, 3], [1, 4], [2, 4], [0, 5], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        scale: 16,\n        nodes: getNodesOnCircle(3).concat(getNodesOnCircle(3, { r: 4, offsetAngle: 60 })),\n        edges: getLoopOfEdges(3)\n            .concat(getLoopOfEdges(3, 5))\n            .concat([[0, 3], [1, 3], [1, 4], [2, 4], [0, 5], [2, 5]]),\n    }\n];\n\n// TODO: Give more colourPalette than required\nconst puzzles3 = [\n    {\n        colourPalette: 2,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6),\n    }, {\n        colourPalette: 2,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [2, 4], [0, 4]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[1, 3], [0, 4], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[2, 4], [1, 3], [0, 4], [1, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 3], [1, 4], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [1, 3], [2, 4], [3, 5], [4, 0], [5, 1]]),\n    }\n];\n\nconst puzzles = [puzzles1, puzzles2, puzzles3];\n\nexport const ColourGraph = (n) =>\n    <PuzzlePage\n        puzzles={puzzles[n]}\n        evaluate={graphIsChromatic}\n\t\tgetPuzzleObject={getGraphObject}\n\t\tdisplayPuzzle={ColourableGraph}\n    />\n","import React from 'react';\n\n\nconst GraphTheory1 = () => <g>\n    <g className=\"graph-edges\">\n        <line x1=\"-12\" y1=\"8\" x2=\"0\" y2=\"-12\" />\n        <line x1=\"-12\" y1=\"8\" x2=\"12\" y2=\"8\" />\n        <line x1=\"0\" y1=\"-12\" x2=\"12\" y2=\"8\" />\n\n        <line x1=\"-30\" y1=\"20\" x2=\"0\" y2=\"-32\" />\n        <line x1=\"-30\" y1=\"20\" x2=\"30\" y2=\"20\" />\n        <line x1=\"0\" y1=\"-32\" x2=\"30\" y2=\"20\" />\n\n        <line x1=\"0\" y1=\"-32\" x2=\"0\" y2=\"-12\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-12\" cy=\"8\" r=\"5\" />\n        <circle className=\"colour-1\" cx=\"0\" cy=\"-12\" r=\"5\" />\n        <circle className=\"colour-1\" cx=\"12\" cy=\"8\" r=\"5\" />\n\n        <circle className=\"colour-1\" cx=\"-30\" cy=\"20\" r=\"5\" />\n        <circle className=\"colour-1\" cx=\"0\" cy=\"-32\" r=\"5\" />\n        <circle className=\"colour-1\" cx=\"30\" cy=\"20\" r=\"5\" />\n    </g>\n</g>\n\nexport default [GraphTheory1];\n","/*\n * Construct a Hamiltonian path along a graph.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { getGraphWithPath } from './puzzleLoaders';\nimport { ColourablePath } from './PuzzleComponents/Graph';\n\nimport { allItemsColoured } from '../utils/evaluation';\nimport { getPointsOnACircle, getLoopOfEdges, getLineOfEdges } from '../utils/graphUtils';\n\n\nconst R3 = Math.sqrt(3);\nconst hamiltonianPath = [\n\t{\n        nodes: getPointsOnACircle(6),\n        edges: getLoopOfEdges(6)\n    }, {\n        nodes: getPointsOnACircle(6),\n        edges: getLoopOfEdges(6).concat([[1, 4]])\n    }, {\n        nodes: getPointsOnACircle(6),\n        edges: getLineOfEdges(6)\n    }, {\n        nodes: getPointsOnACircle(6),\n        edges: getLineOfEdges(6).concat([[2, 5]])\n    }, {\n        nodes: getPointsOnACircle(6),\n        edges: [[2, 3], [3, 4], [4, 5], [5, 0], [1, 4], [0, 3]]\n    }, {\n        nodes: getPointsOnACircle(3, { r: 0.75 })\n                .concat(getPointsOnACircle(3, { r: 2 })),\n        edges: getLoopOfEdges(3)\n                .concat(getLoopOfEdges(3, 5))\n                .concat([[2, 5]])\n    }, {\n        nodes: getPointsOnACircle(3, { r: 0.75 })\n                .concat(getPointsOnACircle(3, { r: 2 }))\n                .concat([[-R3, -2], [R3, -2]]),\n        edges: getLoopOfEdges(3)\n                .concat(getLoopOfEdges(3, 5))\n                .concat([[0, 3], [2, 5], [3, 6], [4, 7]])\n    }, {\n        nodes: getPointsOnACircle(3, { r: 0.75 })\n                .concat(getPointsOnACircle(3, { r: 2 }))\n                .concat([[-R3, -2], [R3, -2]]),\n        edges: getLoopOfEdges(3)\n                .concat(getLoopOfEdges(3, 5))\n                .concat([[2, 5], [3, 6], [4, 7], [5, 6], [5, 7]])\n    }\n];\n\nconst puzzles = [hamiltonianPath];\n\nexport const GraphTheory = (n) =>\n    <PuzzlePage\n        colourPalette={1}\n        clearButton\n        puzzles={puzzles[n]}\n        evaluate={({ nodes }) => allItemsColoured(nodes)}\n\t\tgetPuzzleObject={getGraphWithPath}\n\t\tdisplayPuzzle={ColourablePath}\n    />\n\n","import React from 'react';\n\n\nconst ColourMapIcon1 = () =>\n    <g className=\"graph-nodes\">\n        <rect className=\"colour-1\" x=\"-28\" y=\"-28\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"0\" y=\"-28\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"-28\" y=\"0\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"0\" y=\"0\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-3\" x=\"-12\" y=\"-12\" width=\"24\" height=\"24\" rx=\"2\" ry=\"2\" />\n    </g>\n\nconst ColourMapIcon2 = () =>\n    <g className=\"graph-nodes\">\n        <rect className=\"colour-1\" x=\"-30\" y=\"-30\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"0\" y=\"-30\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"-30\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-3\" x=\"-10\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"10\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"-30\" y=\"10\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"0\" y=\"10\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n    </g>\n\nexport default [ColourMapIcon1, ColourMapIcon2];\n","import React from 'react';\nimport { isColourable } from './utils';\n\n\nexport const Map = ({ regions=[], colourItem }) =>\n    <g className=\"graph\">\n        <g className=\"graph-nodes\">\n            { regions.map((item, i) =>\n                <rect\n                    key={i}\n                    x={item.x}\n                    y={item.y}\n                    width={item.width}\n                    height={item.height}\n                    rx=\"3\"\n                    ry=\"3\"\n                    {...isColourable(item, i, colourItem)}\n                />\n            )}\n        </g>\n    </g>\n","/*\n * Colour regions on a map such that no two touching regions have the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Map } from './PuzzleComponents/Map';\nimport { getMapObject } from './puzzleLoaders';\nimport { allItemsColoured, allConnectedItemsHaveDifferentColours } from '../utils/evaluation';\n\n\nconst puzzles1 = [\n    {\n        colourPalette: 1,\n        regions: [[0, 0, 32, 32]]\n    }, {\n        colourPalette: 2,\n        regions: [[-16, 0, 32, 32], [16, 0, 32, 32]],\n        connections: [[0, 1]]\n    }, {\n        colourPalette: 2,\n        regions: [[-32, 0, 32, 32], [0, 0, 32, 32], [32, 0, 32, 32]],\n        connections: [[0, 1], [1, 2]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [0, -16, 64, 32]],\n        connections: [[0, 1], [1, 2], [0, 2]]\n    }, {\n        colourPalette: 2,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [-16, -16, 32, 32], [16, -16, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [-16, -16, 32, 32], [16, -16, 32, 32], [0, 0, 28, 28]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 3,\n        regions: [[0, 0, 72, 72], [-12, 12, 24, 24], [12, 12, 24, 24], [-12, -12, 24, 24], [12, -12, 24, 24], [0, 0, 24, 24]],\n        connections: [[1, 2], [3, 4], [1, 3], [2, 4], [0, 1], [0, 2], [0, 3], [0, 4], [5, 1], [5, 2], [5, 3], [5, 4]]\n    }, {\n        colourPalette: 4,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [0, -16, 64, 32], [0, 0, 28, 28]],\n        connections: [[0, 1], [0, 2], [0, 3], [1, 2], [1, 3], [2, 3]]\n    }\n];\n\nconst puzzles2 = [\n    {\n        colourPalette: 2,\n        regions: [[0, 0, 96, 96], [0, 0, 32, 32]],\n        connections: [[0, 1]]\n    }, {\n        colourPalette: 3,\n        regions: [[-24, 0, 48, 96], [24, 0, 48, 96], [0, 0, 32, 32]],\n        connections: [[0, 1], [1, 2], [0, 2]]\n    }, {\n        colourPalette: 4,\n        regions: [[0, -32, 96, 32], [-24, 16, 48, 64], [24, 16, 48, 64], [0, 0, 32, 32]],\n        connections: [[0, 1], [0, 2], [0, 3], [1, 2], [1, 3], [2, 3]]\n    }, {\n        colourPalette: 3,\n        regions: [[-24, -24, 48, 48], [24, -24, 48, 48], [-24, 24, 48, 48], [24, 24, 48, 48], [0, 0, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, -32, 64, 32], [32, -16, 32, 64], [-32, 16, 32, 64], [16, 32, 64, 32], [0, 0, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 2,\n        regions: [\n            [-32, -32, 32, 32], [0, -32, 32, 32], [32, -32, 32, 32],\n            [-32, 0, 32, 32], [0, 0, 32, 32], [32, 0, 32, 32],\n            [-32, 32, 32, 32], [0, 32, 32, 32], [32, 32, 32, 32]\n        ],\n        connections: [\n            [0, 1], [1, 2], [3, 4], [4, 5], [6, 7], [7, 8],\n            [0, 3], [1, 4], [2, 5], [3, 6], [4, 7], [5, 8]\n        ]\n    }\n];\n\nconst puzzles = [puzzles1, puzzles2];\n\nconst ColourableMap = (puzzle, selectedColour, update) => {\n    const colourItem = index => {\n        puzzle.regions[index].colour = selectedColour;\n        update(puzzle);\n    }\n\n    return <Map {...puzzle} colourItem={colourItem}/>\n};\n\nconst evaluate = ({ regions, connections }) => \n    allItemsColoured(regions) &&\n    allConnectedItemsHaveDifferentColours(connections);\n\nexport const ColourMap = (n) =>\n\t<PuzzlePage\n\t\tpuzzles={puzzles[n]}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getMapObject}\n\t\tdisplayPuzzle={ColourableMap} />\n","import React from 'react';\n\n\nconst IdentityIcon1 = () => <React.Fragment>\n    <defs>\n        <g id=\"identity-1-puzzle\">\n            <g className=\"graph-edges\">\n                <line x1=\"-15\" y1=\"13\" x2=\"0\" y2=\"-13\" />\n                <line x1=\"-15\" y1=\"13\" x2=\"15\" y2=\"13\" />\n                <line x1=\"0\" y1=\"-13\" x2=\"15\" y2=\"13\" />\n            </g>\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-1\" cx=\"-15\" cy=\"13\" r=\"5\" />\n                <circle className=\"colour-2\" cx=\"0\" cy=\"-13\" r=\"5\" />\n                <circle className=\"colour-3\" cx=\"15\" cy=\"13\" r=\"5\" />\n            </g>\n        </g>\n    </defs>\n\n    <use href=\"#identity-1-puzzle\" transform=\"translate(-24, -4)\"/>\n    <use href=\"#identity-1-puzzle\" transform=\"translate(24, -4)\"/>\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n</React.Fragment>\n\nconst ReflectionIcon1 = () => <React.Fragment>\n    <defs>\n        <g id=\"reflection-1-puzzle\">\n            <g className=\"graph-edges\">\n                <line x1=\"12\" y1=\"0\" x2=\"-11\" y2=\"-15\" />\n                <line x1=\"12\" y1=\"0\" x2=\"-11\" y2=\"15\" />\n                <line x1=\"-11\" y1=\"-15\" x2=\"-11\" y2=\"15\" />\n            </g>\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-2\" cx=\"12\" cy=\"0\" r=\"5\" />\n                <circle className=\"colour-1\" cx=\"-11\" cy=\"15\" r=\"5\" />\n                <circle className=\"colour-1\" cx=\"-11\" cy=\"-15\" r=\"5\" />\n            </g>\n        </g>\n    </defs>\n\n    <use href=\"#reflection-1-puzzle\" transform=\"translate(-20)\"/>\n    <use href=\"#reflection-1-puzzle\" transform=\"translate(20) scale(-1, 1)\"/>\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n</React.Fragment>\n\nconst RotationIcon1 = () => <React.Fragment>\n    <defs>\n        <g id=\"rotation-1-puzzle\">\n            <g className=\"graph-edges\">\n                <line x1=\"-16\" y1=\"13\" x2=\"-2\" y2=\"-13\" />\n                <line x1=\"-16\" y1=\"13\" x2=\"12\" y2=\"13\" />\n                <line x1=\"-2\" y1=\"-13\" x2=\"12\" y2=\"13\" />\n            </g>\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-1\" cx=\"-16\" cy=\"13\" r=\"5\" />\n                <circle className=\"colour-2\" cx=\"-2\" cy=\"-13\" r=\"5\" />\n                <circle className=\"colour-1\" cx=\"12\" cy=\"13\" r=\"5\" />\n            </g>\n        </g>\n    </defs>\n\n    <use href=\"#rotation-1-puzzle\" transform=\"translate(-20)\"/>\n    <use href=\"#rotation-1-puzzle\" transform=\"translate(20) rotate(180)\"/>\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n</React.Fragment>\n\nconst TransformColourIcon1 = () => <React.Fragment>\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n\n    <g transform=\"translate(-20)\">\n        <g className=\"graph-edges\">\n            <line x1=\"0\" y1=\"16\" x2=\"0\" y2=\"-16\" />\n        </g>\n        <g className=\"graph-nodes\">\n            <circle className=\"colour-1\" cx=\"0\" cy=\"-16\" r=\"5\" />\n            <circle className=\"colour-2\" cx=\"0\" cy=\"0\" r=\"5\" />\n            <circle className=\"colour-1\" cx=\"0\" cy=\"16\" r=\"5\" />\n        </g>\n    </g>\n\n    <g transform=\"translate(20)\">\n        <g className=\"graph-edges\">\n            <line x1=\"0\" y1=\"16\" x2=\"0\" y2=\"-16\" />\n        </g>\n        <g className=\"graph-nodes\">\n            <circle className=\"colour-2\" cx=\"0\" cy=\"-16\" r=\"5\" />\n            <circle className=\"colour-1\" cx=\"0\" cy=\"0\" r=\"5\" />\n            <circle className=\"colour-2\" cx=\"0\" cy=\"16\" r=\"5\" />\n        </g>\n    </g>\n</React.Fragment>\n\nexport default [IdentityIcon1, ReflectionIcon1, RotationIcon1, TransformColourIcon1];\n","/*\n * Colour all nodes on a graph such that no edges joins two nodes of the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Graph } from './PuzzleComponents/Graph';\nimport { getGraphAndUncolouredCopy } from './puzzleLoaders';\nimport { getNodesOnCircle, getLoopOfEdges, getLineOfEdges } from '../utils/graphUtils';\nimport { graphNodesAreSameColour, samePatternButDifferent } from '../utils/evaluation';\n\n\nconst identity1 = [\n\t{\n\t\tcolourPalette: 1,\n        nodes: [[0, 0, 1]]\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2]),\n        edges: getLineOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: [[-1, 0, 1], [0, 0, 2], [1, 0, 1]],\n        edges: [[0, 1], [1, 2]]\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 4,\n        nodes: getNodesOnCircle([1, 2, 3, 4]),\n        edges: getLoopOfEdges(4)\n\t}, {\n        size: 24,\n        colourPalette: 3,\n        nodes: [[-1, -1, 1], [1, -1, 1], [-0.5, 0, 2], [0.5, 0, 3], [-1, 1, 3], [1, 1, 2]],\n        edges: [[0, 2], [2, 3], [3, 1], [2, 4], [3, 5]]\n    }, {\n        size: 24,\n        colourPalette: 4,\n        nodes: [[-1.5, -1, 1], [-0.5, -1, 2], [0.5, -1, 1], [-0.5, 0, 1], [0.5, 0, 3], [-0.5, 1, 3], [0.5, 1, 4], [1.5, 1, 3]],\n        edges: [[0, 1], [1, 2], [1, 3], [3, 4], [4, 6], [5, 6], [6, 7]]\n    }\n];\n\nconst reflection1 = [\n\t{\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 2], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 1]),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3]),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 2, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 4,\n        nodes: getNodesOnCircle([1, 2, 3, 4]),\n        edges: getLoopOfEdges(4)\n\t}\n];\n\nconst rotation1 = [\n\t{\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 2], { dy: 0.25 }),\n\t\tedges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2], { offsetAngle: 90 }),\n\t\tedges: getLoopOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2]),\n\t\tedges: getLoopOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 2, 2]),\n\t\tedges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 1, 2]),\n\t\tedges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 2], { dy: 0.25 }),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3], { dy: 0.25 }),\n\t\tedges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 4,\n        nodes: getNodesOnCircle([1, 2, 3, 4]),\n        edges: getLoopOfEdges(4)\n\t}\n];\n\nconst colour1 = [\n\t{\n\t\tcolourPalette: 1,\n        nodes: [[0, 0, 2]]\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2]),\n        edges: getLineOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: [[-1, 0, 1], [0, 0, 2], [1, 0, 1]],\n        edges: getLineOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3]),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3, 2]).concat([[0, 0, 3]]),\n        edges: getLoopOfEdges(4).concat([[0, 4], [1, 4] ,[2, 4], [3, 4]])\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3, 1, 2, 3]),\n        edges: getLoopOfEdges(6)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([2, 3, 1, 3, 2, 1]),\n        edges: getLoopOfEdges(6)\n\t}\n];\n\nconst ColourableGraph = (puzzle, selectedColour, update) => {\n    const colourNode = nodeIndex => {\n        puzzle.blank.nodes[nodeIndex].colour = selectedColour;\n        update(puzzle);\n    }\n\n    return <Graph {...puzzle.blank} colourNode={colourNode}/>\n};\n\nconst Transformation = ({ puzzles, transform, evaluate }) => {\n\tconst displayGraphs = (puzzle, selectedColour, update) => <g>\n        <g transform=\"translate(-60)\">\n            <Graph {...puzzle.target} />\n        </g>\n        <g transform={ \"translate(60) \" + transform }>\n            { ColourableGraph(puzzle, selectedColour, update) }\n        </g>\n\n        <line className=\"reflection-line\" y1=\"-200\" y2=\"200\" />\n    </g>\n\n\treturn <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getGraphAndUncolouredCopy}\n\t\tdisplayPuzzle={displayGraphs} />\n};\n\nconst patternMatchGraphs = ({ blank, target }) => {\n\tconst seq1 = blank.nodes.map(node => node.colour);\n\tconst seq2 = target.nodes.map(node => node.colour);\n\treturn samePatternButDifferent(seq1, seq2);\n}\n\nconst puzzles = [\n\t<Transformation puzzles={identity1} transform=\"\" evaluate={graphNodesAreSameColour} />,\n\t<Transformation puzzles={reflection1} transform=\"scale(-1 1)\" evaluate={graphNodesAreSameColour}/>,\n\t<Transformation puzzles={rotation1} transform=\"rotate(180)\" evaluate={graphNodesAreSameColour} />,\n\t<Transformation puzzles={colour1} transform=\"\" evaluate={patternMatchGraphs} />,\n];\n\nexport const Transformations = (n) => puzzles[n];\n","import React from 'react';\n\n\nconst SequencesIcon1 = () => \n    <g className=\"graph-nodes\">\n        <rect className=\"colour-1\" x=\"-37.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"-22.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"-7.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"7.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"22.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n    </g>\n\nconst SequencesIcon2 = () => \n    <g className=\"graph-nodes\">\n        {[1, 2, 1, 0, 1, 2, 1].map((colour, index) =>\n            <rect\n                key={index}\n                className={\"colour-\" + colour}\n                x={-42 + index * 12}\n                y=\"-7.5\"\n                width=\"12\" height=\"12\" rx=\"2\" ry=\"2\" />\n        )}\n    </g>\n\nconst SequencesIcon3 = () => <React.Fragment>\n    <defs>\n        <g id=\"triangle\" className=\"graph-edges\">\n            <line x1=\"-15\" y1=\"13\" x2=\"0\" y2=\"-13\" />\n            <line x1=\"-15\" y1=\"13\" x2=\"15\" y2=\"13\" />\n            <line x1=\"0\" y1=\"-13\" x2=\"15\" y2=\"13\" />\n        </g>\n        <g id=\"triangle-1\">\n            <use href=\"#triangle\" />\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-1\" cx=\"-15\" cy=\"13\" r=\"7\" />\n                <circle className=\"colour-2\" cx=\"0\" cy=\"-13\" r=\"7\" />\n                <circle className=\"colour-1\" cx=\"15\" cy=\"13\" r=\"7\" />\n            </g>\n        </g>\n        <g id=\"triangle-2\">\n            <use href=\"#triangle\" />\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-2\" cx=\"-15\" cy=\"13\" r=\"7\" />\n                <circle className=\"colour-1\" cx=\"0\" cy=\"-13\" r=\"7\" />\n                <circle className=\"colour-2\" cx=\"15\" cy=\"13\" r=\"7\" />\n            </g>\n        </g>\n    </defs>\n\n    <use href=\"#triangle-1\" transform=\"translate(-34, -4) scale(0.45)\"/>\n    <use href=\"#triangle-2\" transform=\"translate(-11, -4) scale(0.45)\"/>\n    <use href=\"#triangle-1\" transform=\"translate(11, -4) scale(0.45)\"/>\n    <use href=\"#triangle-2\" transform=\"translate(34, -4) scale(0.45)\"/>\n</React.Fragment>\n\nexport default [\n    SequencesIcon1,\n    SequencesIcon2,\n    SequencesIcon3,\n];\n","import React from 'react';\nimport { Graph } from './Graph';\nimport { isColourable } from './utils';\n\n\nexport const Sequence = ({ sequence=[], colourItem }) => {\n    const size = Math.min(24, 200 / sequence.length);\n    const startX = -(sequence.length * size) / 2;\n\n    return <g className=\"sequence\">\n        { sequence.map((item, i) => {\n            return <rect\n                key={i}\n                x={startX + i * size }\n                y={-size / 2}\n                width={size - 1}\n                height={size - 1}\n                rx=\"3\"\n                ry=\"3\"\n                {...isColourable(item, i, colourItem)}\n            />\n        })}\n    </g>\n};\n\nexport const GraphSequence = (puzzle, selectedColour, update) => {\n    const sequence = puzzle.sequence;\n\n    let size = Math.min(120, 240 / sequence.length);\n    const scale = Math.min(1, size / 90);\n    size /= scale;\n    const startX = -size * (sequence.length - 1) / 2;\n\n    return <g className=\"sequence\"  transform={`scale(${ scale })`}>\n        { sequence.map((graph, i) => {\n            const colourNode = nodeIndex => {\n                graph.nodes[nodeIndex].colour = selectedColour;\n                update(puzzle);\n            };\n\n            return <g key={i} transform={`translate(${ startX + i * size })`}>\n                <Graph {...graph} colourNode={colourNode} />\n            </g>\n        })}\n    </g>\n};\n","/*\n * Colour regions on a map such that no two touching regions have the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Sequence, GraphSequence } from './PuzzleComponents/Sequence';\nimport { getSequenceObject, getGraphSequence } from './puzzleLoaders';\nimport { allItemsColoured, sequencesMatch } from '../utils/evaluation';\nimport { triangleGraph, squareGraph } from '../utils/graphUtils';\n\n\n// Sequence of coloured blocks with uncoloured blocks at the end\nconst puzzles1 = [\n    {\n        colourPalette: 1,\n        pattern: [1, 1, 1, 0],\n        answer: [1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 1, 1, 0, 0],\n        answer: [1, 1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 2, 1, 2, 0, 0],\n        answer: [1, 2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 3, 1, 2, 3, 0, 0, 0],\n        answer: [1, 2, 3]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 2, 2, 1, 1, 0, 0],\n        answer: [2, 2]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 2, 1, 2, 2, 0, 0, 0],\n        answer: [1, 2, 2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 3, 3, 1, 2, 3, 3, 0, 0, 0, 0],\n        answer: [1, 2, 3, 3]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 0, 0, 0, 0],\n        answer: [1, 2, 1, 1]\n    }\n];\n\n// Sequence of coloured blocks with uncoloured blocks in the middle of the sequence\nconst puzzles2 = [\n    {\n        colourPalette: 1,\n        pattern: [1, 1, 0, 1, 1],\n        answer: [1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 0, 1, 2, 1],\n        answer: [2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 3, 0, 2, 3],\n        answer: [1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 2, 2, 1, 0, 0, 2],\n        answer: [1, 2]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 2, 1, 2, 0, 0, 2, 2],\n        answer: [2, 1]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 3, 2, 1, 0, 1, 2, 3, 2, 1],\n        answer: [3]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 3, 0, 0, 3, 1, 2, 3, 2, 1],\n        answer: [2, 1]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 1, 0, 0, 0, 1, 2, 3, 1, 1, 2, 3],\n        answer: [2, 3, 1]\n    }\n];\n\n// Sequence of coloured graphs with uncoloured one at the end\nconst t1 = triangleGraph(1);\nconst t2 = triangleGraph(2);\nconst t112 = triangleGraph([1, 1, 2]);\nconst t221 = triangleGraph([2, 2, 1]);\nconst t121 = triangleGraph([1, 2, 1]);\nconst t211 = triangleGraph([2, 1, 1]);\nconst t123 = triangleGraph([1, 2, 3]);\nconst t231 = triangleGraph([2, 3, 1]);\nconst t312 = triangleGraph([3, 1, 2]);\n\nconst s1122 = squareGraph([1, 1, 2, 2]);\nconst s2211 = squareGraph([2, 2, 1, 1]);\nconst s2112 = squareGraph([2, 1, 1, 2]);\nconst s1221 = squareGraph([1, 2, 2, 1]);\nconst s1212 = squareGraph([1, 2, 1, 2]);\nconst s2121 = squareGraph([2, 1, 2, 1]);\n\nconst puzzles3 = [\n    {\n        colourPalette: 1,\n        graphs: [t1, t1, t1, null],\n        answer: [t1]\n    }, {\n        colourPalette: 2,\n        graphs: [t1, t2, t1, t2, null],\n        answer: [t1]\n    }, {\n        colourPalette: 2,\n        graphs: [t112, t221, t112, t221, null],\n        answer: [t112]\n    }, {\n        colourPalette: 2,\n        graphs: [s1122, s2211, s1122, s2211, null],\n        answer: [s1122]\n    }, {\n        colourPalette: 2,\n        graphs: [s1212, s2121, s1212, s2121, s1212, null],\n        answer: [s2121]\n    }, {\n        colourPalette: 2,\n        graphs: [s1122, s1221, s2211, null],\n        answer: [s2112]\n    }, {\n        colourPalette: 2,\n        graphs: [t112, t121, t211, t112, t121, null],\n        answer: [t211]\n    }, {\n        colourPalette: 3,\n        graphs: [t123, t231, t312, t123, null],\n        answer: [t312]\n    }\n];\n\nconst puzzles = [puzzles1, puzzles2, puzzles3];\n\nconst correctSequence = ({ sequence, target }) =>\n    sequencesMatch(sequence, target, 'colour');\n\nconst correctGraphSequence = ({ sequence, target }) =>\n    sequence.every((graph, index) =>\n        sequencesMatch(graph.nodes, target[index].nodes, 'colour')\n    );\n\nconst ColourableSequence = (puzzle, selectedColour, update) => {\n    const colourItem = index => {\n        if (puzzle.sequence[index].colour === selectedColour) {\n            puzzle.sequence[index].colour = 0;\n        } else {\n            puzzle.sequence[index].colour = selectedColour;\n        }\n        update(puzzle);\n    }\n\n    return <Sequence {...puzzle} colourItem={colourItem}/>\n};\n\nexport const Sequences = (n) => {\n    if (n < 2) {\n        return <PuzzlePage\n            puzzles={puzzles[n]}\n            evaluate={correctSequence}\n            getPuzzleObject={getSequenceObject}\n            displayPuzzle={ColourableSequence} />\n    } else {\n        return <PuzzlePage\n            puzzles={puzzles[n]}\n            evaluate={correctGraphSequence}\n            getPuzzleObject={getGraphSequence}\n            displayPuzzle={GraphSequence} />\n    }\n}\n","import React from 'react';\n\n\nconst Categorisation1 = () => <g>\n    <g className=\"categories\">\n        <circle className=\"colour-1\" cx=\"-24\" cy=\"0\" r=\"23\" />\n        <circle className=\"colour-2\" cx=\"24\" cy=\"0\" r=\"23\" />\n    </g>\n    <g className=\"graph-edges\">\n        <line x1=\"30\" y1=\"0\" x2=\"18\" y2=\"0\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-24\" cy=\"0\" r=\"4\" />\n        <circle className=\"colour-1\" cx=\"32\" cy=\"0\" r=\"4\" />\n        <circle className=\"colour-1\" cx=\"16\" cy=\"0\" r=\"4\" />\n    </g>\n</g>\n\nconst Categorisation2 = () => <g>\n    <g className=\"categories\">\n        <circle className=\"colour-1\" cx=\"-24\" cy=\"0\" r=\"23\" />\n        <circle className=\"colour-2\" cx=\"24\" cy=\"0\" r=\"23\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-24\" cy=\"0\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"24\" cy=\"0\" r=\"8\" />\n    </g>\n</g>\n\nconst Categorisation3 = () => <g>\n    <g className=\"categories\">\n        <circle className=\"colour-1\" cx=\"-20\" cy=\"-20\" r=\"19\" />\n        <circle className=\"colour-2\" cx=\"20\" cy=\"-20\" r=\"19\" />\n        <circle className=\"colour-2\" cx=\"-20\" cy=\"20\" r=\"19\" />\n        <circle className=\"colour-3\" cx=\"20\" cy=\"20\" r=\"19\" />\n    </g>\n    <g className=\"graph-edges\">\n        <line x1=\"-25\" y1=\"-20\" x2=\"-15\" y2=\"-20\" />\n        <line x1=\"25\" y1=\"-20\" x2=\"15\" y2=\"-20\" />\n        <line x1=\"-25\" y1=\"20\" x2=\"-15\" y2=\"20\" />\n        <line x1=\"25\" y1=\"20\" x2=\"15\" y2=\"20\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-28\" cy=\"-20\" r=\"4\" />\n        <circle className=\"colour-1\" cx=\"-12\" cy=\"-20\" r=\"4\" />\n        <circle className=\"colour-1\" cx=\"28\" cy=\"-20\" r=\"4\" />\n        <circle className=\"colour-2\" cx=\"12\" cy=\"-20\" r=\"4\" />\n        <circle className=\"colour-1\" cx=\"-28\" cy=\"20\" r=\"4\" />\n        <circle className=\"colour-2\" cx=\"-12\" cy=\"20\" r=\"4\" />\n        <circle className=\"colour-2\" cx=\"28\" cy=\"20\" r=\"4\" />\n        <circle className=\"colour-2\" cx=\"12\" cy=\"20\" r=\"4\" />\n    </g>\n</g>\n\n    export default [Categorisation1, Categorisation2, Categorisation3];\n","import React from 'react';\nimport { getPointsOnACircle } from '../../utils/graphUtils';\nimport { isColourable } from './utils';\n\n\nconst getCirclePackedInCircle = (R, n) => {\n    const phi = Math.PI * (0.5 - 1 / n);\n    const cPhi = Math.cos(phi);\n    const r = R / (1 + cPhi);\n    const points = getPointsOnACircle(n, { r });\n\n    return {\n        scale: cPhi / (1 + cPhi),\n        categorySize: r * cPhi,\n        categoryPositions: points\n    };\n};\n\nexport const Categories = ({ size, categories, colourCategory }) => {\n    const { scale, categorySize, categoryPositions } = getCirclePackedInCircle(size, categories.length);\n\n    return <g>\n        { categories.map((category, i) => {\n            let transform = `translate(${ categoryPositions[i][0] } ${ categoryPositions[i][1] })`;\n            if (category.rotate) {\n                transform += ` rotate(${ category.rotate })`;\n            }\n\n            return <g key={i} transform={transform}>\n                <circle\n                    {...isColourable(category, i, colourCategory, 'category')}\n                    r={categorySize * 0.95}\n                    />\n                <g className=\"no-pointer\" transform={`scale(${ scale * 2 } ${ scale * 2 })`}>\n                    { category.component }\n                </g>\n            </g>\n        })}\n    </g>\n}\n","import React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Graph } from './PuzzleComponents/Graph';\nimport { Categories } from './PuzzleComponents/Categories';\nimport { getCategoryObjects, getGraphObject } from './puzzleLoaders';\nimport {\n    linearGraph,\n    loopGraph,\n    getPointsOnACircle,\n    getNodesOnCircle,\n    getLineOfEdges,\n    getLoopOfEdges\n} from '../utils/graphUtils';\nimport { allItemsColoured, sequencesAreEquivalent } from '../utils/evaluation';\n\n\n// Graphs are all the same colour and need to be match by shape\nconst puzzle1 = [\n    {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: { nodes: [[0, 0, 1]] }},\n            { type: 2, item: linearGraph([1, 1]) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, copies: 3, item: linearGraph([1, 1, 1]) },\n            { type: 2, copies: 2, item: loopGraph([1, 1, 1], 0.8) }\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            { type: 1, copies: 2, item: linearGraph([1, 1, 1]) },\n            { type: 2, copies: 2, item: loopGraph([1, 1, 1], 0.8) },\n            { type: 3, copies: 2, item: {\n                nodes: [[0.5, 0.5], [-0.5, 0.5], [0.5, -0.5]],\n                edges: [[0, 1], [0, 2]],\n                colour: 1\n            }}\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            { type: 1, copies: 2, item: loopGraph([1, 1, 1, 1], 0.8) },\n            {\n                type: 2,\n                copies: 3,\n                item: {\n                    nodes: getPointsOnACircle(4, { r: 0.8 }),\n                    edges: getLineOfEdges(4),\n                    colour: 1\n                }\n            }, {\n                type: 3,\n                item: {\n                    nodes: getPointsOnACircle(4, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [0, 3]],\n                    colour: 1\n                }\n            },\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            {\n                type: 1,\n                copies: 2,\n                item: {\n                    nodes: getPointsOnACircle(4, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [0, 3]],\n                    colour: 1\n                }\n            }, {\n                type: 2,\n                copies: 2,\n                item: {\n                    nodes: getPointsOnACircle(4, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [2, 3]],\n                    colour: 1\n                }\n            }, {\n                type: 3,\n                copies: 2,\n                item: {\n                    nodes: getPointsOnACircle(4, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [0, 3], [2, 3]],\n                    colour: 1\n                }\n            },\n        ]\n    }, {\n        colourPalette: 4,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 1, 1, 1, 1], 0.8) },\n            {\n                type: 2,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(5, { r: 0.8 }),\n                    edges: getLineOfEdges(5),\n                    colour: 1\n                }\n            }, {\n                type: 3 ,\n                copies: 2,\n                item: {\n                    nodes: getPointsOnACircle(5, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [0, 3], [0, 4]],\n                    colour: 1\n                }\n            }, {\n                type: 4,\n                item: {\n                    nodes: getPointsOnACircle(5, { r: 0.8 }),\n                    edges: [[0, 1], [0, 2], [0, 3], [3, 4]],\n                    colour: 1\n                }\n            }\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            {\n                type: 1,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(6, { r: 0.9 }),\n                    edges: ([[0, 1], [1, 2], [2, 5], [4, 5], [3, 4]]),\n                    colour: 1\n                }\n            }, {\n                type: 2,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(6, { r: 0.9 }),\n                    edges: ([[0, 1], [1, 2], [2, 4], [4, 5], [3, 4]]),\n                    colour: 1\n                }\n            }, {\n                type: 3,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(6, { r: 0.9 }),\n                    edges: ([[0, 1], [1, 2], [1, 4], [4, 5], [3, 4]]),\n                    colour: 1\n                }\n            }\n        ]\n    }, {\n        colourPalette: 4,\n        randomRotate: true,\n        categories: [\n            {\n                type: 1,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(6),\n                    edges: getLoopOfEdges(6).concat([[0, 3], [0, 4], [1, 5]]),\n                    colour: 1\n                }\n            }, {\n                type: 2,\n                copies: 2, \n                item: {\n                    nodes: getPointsOnACircle(6),\n                    edges: getLoopOfEdges(6).concat([[0, 3], [0, 4], [1, 4]]),\n                    colour: 1\n                }\n            }, {\n                type: 3,\n                copies: 1, \n                item: {\n                    nodes: getPointsOnACircle(6),\n                    edges: getLoopOfEdges(6).concat([[0, 3], [0, 4], [2, 4]]),\n                    colour: 1\n                }\n            }, {\n                type: 4,\n                copies: 1, \n                item: {\n                    nodes: getPointsOnACircle(6),\n                    edges: getLoopOfEdges(6).concat([[0, 2], [0, 4], [1, 5]]),\n                    colour: 1\n                }\n            }\n        ]\n    }\n]\n\n// Graphs are all the same shape and orientation and need to be matched by colour\nconst puzzle2 = [\n\t{\n        colourPalette: 2,\n        categories: [\n            { type: 1, item: { nodes: [[0, 0, 1]] }},\n            { type: 2, item: { nodes: [[0, 0, 2]] }},\n        ]\n    }, {\n\t\tcolourPalette: 2,\n        categories: [\n            { type: 1, item: linearGraph([1, 1]) },\n            { type: 1, item: linearGraph([1, 1]) },\n            { type: 2, item: linearGraph([2, 2]) },\n            { type: 2, item: linearGraph([2, 2]) },\n        ]\n    }, {\n\t\tcolourPalette: 3,\n        categories: [\n            { type: 1, item: linearGraph([1, 1]) },\n            { type: 2, item: linearGraph([1, 2]) },\n            { type: 2, item: linearGraph([1, 2]) },\n            { type: 3, item: linearGraph([2, 2]) },\n        ]\n    }, {\n        colourPalette: 2,\n        categories: [\n            { type: 1, item: linearGraph([1, 2, 1]) },\n            { type: 1, item: linearGraph([1, 2, 1]) },\n            { type: 2, item: linearGraph([2, 1, 2]) },\n            { type: 2, item: linearGraph([2, 1, 2]) },\n        ]\n    }, {\n        colourPalette: 3,\n        categories: [\n            { type: 1, item: linearGraph([1, 1, 2]) },\n            { type: 1, item: linearGraph([1, 1, 2]) },\n            { type: 2, item: linearGraph([1, 2, 1]) },\n            { type: 3, item: linearGraph([2, 1, 1]) },\n            { type: 3, item: linearGraph([2, 1, 1]) },\n        ]\n    }, {\n        colourPalette: 3,\n        categories: [\n            { type: 1, item: loopGraph([1, 1, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1], 0.75) },\n            { type: 3, item: loopGraph([2, 1, 1], 0.75) },\n            { type: 3, item: loopGraph([2, 1, 1], 0.75) },\n        ]\n    }, {\n        colourPalette: 3,\n        categories: [\n            { type: 1, item: loopGraph([1, 1, 2, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 1, 2, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1, 2], 0.75) },\n            { type: 3, item: loopGraph([2, 1, 2, 1], 0.75) },\n            { type: 3, item: loopGraph([2, 1, 2, 1], 0.75) },\n        ]\n    }, {\n        colourPalette: 4,\n        categories: [\n            { type: 1, item: loopGraph([1, 2, 3, 1, 2, 3], 0.75) },\n            { type: 2, item: loopGraph([3, 2, 1, 3, 2, 1], 0.75) },\n            { type: 2, item: loopGraph([3, 2, 1, 3, 2, 1], 0.75) },\n            { type: 3, item: loopGraph([1, 2, 3, 2, 3, 1], 0.75) },\n            { type: 3, item: loopGraph([1, 2, 3, 2, 3, 1], 0.75) },\n            { type: 4, item: loopGraph([3, 2, 1, 2, 3, 1], 0.75) },\n        ]\n    }\n];\n\n// Graphs are all the same shape but rotated and need to be matched by colour\nconst puzzle3 = [\n    {\n        colourPalette: 3,\n        categories: [\n            { type: 1, item: linearGraph([1, 1]) },\n            { type: 2, item: linearGraph([1, 2]) },\n            { type: 2, item: linearGraph([2, 1]) },\n            { type: 3, item: linearGraph([2, 2]) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: linearGraph([1, 2, 1]) },\n            { type: 1, item: linearGraph([1, 2, 1]) },\n            { type: 1, item: linearGraph([1, 2, 1]) },\n            { type: 2, item: linearGraph([2, 1, 2]) },\n            { type: 2, item: linearGraph([2, 1, 2]) },\n            { type: 2, item: linearGraph([2, 1, 2]) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 2, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 2, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 2, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 1, 2], 0.75) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 1, 2, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 1, 2, 2], 0.75) },\n            { type: 1, item: loopGraph([1, 1, 2, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 2, 1, 2], 0.75) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 2, 3], 0.75) },\n            { type: 1, item: loopGraph([1, 2, 3], 0.75) },\n            { type: 2, item: loopGraph([1, 3, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 3, 2], 0.75) },\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 1, 2, 3], 0.75) },\n            { type: 1, item: loopGraph([1, 1, 2, 3], 0.75) },\n            { type: 2, item: loopGraph([1, 1, 3, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 1, 3, 2], 0.75) },\n            { type: 3, item: loopGraph([1, 2, 1, 3], 0.75) },\n            { type: 3, item: loopGraph([1, 2, 1, 3], 0.75) },\n        ]\n    }, {\n        colourPalette: 4,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 2, 3, 4], 0.75) },\n            { type: 1, item: loopGraph([1, 2, 3, 4], 0.75) },\n            { type: 2, item: loopGraph([1, 4, 3, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 4, 3, 2], 0.75) },\n            { type: 3, item: loopGraph([1, 3, 2, 4], 0.75) },\n            { type: 4, item: loopGraph([1, 2, 4, 3], 0.75) },\n        ]\n    }, {\n        colourPalette: 4,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: loopGraph([1, 2, 3, 1, 2, 3], 0.75) },\n            { type: 2, item: loopGraph([1, 3, 2, 1, 3, 2], 0.75) },\n            { type: 2, item: loopGraph([1, 3, 2, 1, 3, 2], 0.75) },\n            { type: 3, item: loopGraph([1, 2, 3, 2, 3, 1], 0.75) },\n            { type: 4, item: loopGraph([1, 2, 1, 3, 2, 3], 0.75) },\n            { type: 4, item: loopGraph([1, 2, 1, 3, 2, 3], 0.75) },\n        ]\n    }\n];\n\nconst triangleWithCenter = getNodesOnCircle([1, 1, 1], { r: 1.2 }).concat([[0, 0, 1]]);\nconst lowTriangle = [[0, -1, 1], [-1, 0.5, 1], [0, 0.5, 1], [1, 0.5, 1]];\n\n// Graphs have the same set of connections, but nodes are moved\nconst puzzle4 = [\n    {\n        // Triangles vs straight lines\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: linearGraph([1, 1, 1]) },\n            { type: 2, item: loopGraph([1, 1, 1],) },\n            { type: 1,\n                item: {\n                    nodes: [[0.7, 0.7, 1], [-0.7, 0.7, 1], [-0.7, -0.7, 1]],\n                    edges: getLineOfEdges(3)\n                }\n            },\n            { type: 2,\n                item: {\n                    nodes: [[0.7, 0.7, 1], [-0.7, 0.7, 1], [-0.7, -0.7, 1]],\n                    edges: getLoopOfEdges(3)\n                }\n            }\n        ]\n    }, {\n        // Quadrilaterals vs straight lines\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: linearGraph([1, 1, 1, 1]) },\n            { type: 2, item: loopGraph([1, 1, 1, 1]) },\n            // {\n            //     type: 1,\n            //     item: {\n            //         nodes: getNodesOnCircle([1, 1, 1, 1], { r: 0.8 }),\n            //         edges: [[0, 1], [1, 3], [2, 3]]\n            //     }\n            // },\n            {\n                type: 1,\n                item: {\n                    nodes: getNodesOnCircle([1, 1, 1, 1]),\n                    edges: getLineOfEdges(4)\n                }\n            },\n            {\n                type: 2,\n                item: {\n                    nodes: triangleWithCenter,\n                    edges: getLoopOfEdges(4)\n                }\n            }\n        ]\n    }, {\n        // Stars vs triangles with hanging point\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            {\n                type: 1,\n                item: {\n                    nodes: triangleWithCenter,\n                    edges: [[0, 1], [1, 2], [0, 3], [0, 2]]\n                }\n            }, {\n                type: 2,\n                item: {\n                    nodes: triangleWithCenter,\n                    edges: [[0, 3], [1, 3], [2, 3]]\n                }\n            }, {\n                type: 2,\n                item: {\n                    nodes: lowTriangle,\n                    edges: [[0, 1], [0, 2], [0, 3]]\n                }\n            }, {\n                type: 1,\n                item: {\n                    nodes: lowTriangle,\n                    edges: [[0, 1], [0, 2], [0, 3], [1, 2]]\n                }\n            }, {\n                type: 1,\n                item: {\n                    nodes: lowTriangle,\n                    edges: [[0, 1], [0, 2], [1, 2], [2, 3]]\n                }\n            }\n        ]\n    }\n];\n\nconst puzzles = [puzzle1, puzzle2, puzzle3, puzzle4];\n\nconst displayCategories = (categories, selectedColour, update) => {\n    categories.forEach(item => {\n        item.component = <Graph {...getGraphObject(item.object)} />\n    });\n\n    const colourCategory = index => {\n        if (categories[index].colour === selectedColour) {\n            categories[index].colour = 0;\n        } else {\n            categories[index].colour = selectedColour;\n        }\n        update(categories);\n    };\n\n    return <Categories size=\"128\" categories={categories} colourCategory={colourCategory} />\n};\n\nconst evaluate = puzzle =>\n    allItemsColoured(puzzle) &&\n    sequencesAreEquivalent(puzzle.map(item => item.category), puzzle.map(item => item.colour));\n\nexport const Categorisation = (n) =>\n    <PuzzlePage\n        puzzles={puzzles[n]}\n        evaluate={evaluate}\n        getPuzzleObject={getCategoryObjects}\n        displayPuzzle={displayCategories} />\n","import ColourGraphIcons from './PuzzleMap/Icons/ColourGraphs';\nimport { ColourGraph } from './Puzzles/ColourGraphs';\n\nimport GraphTheoryIcons from './PuzzleMap/Icons/GraphTheory';\nimport { GraphTheory } from './Puzzles/GraphTheory';\n\nimport ColourMapIcons from './PuzzleMap/Icons/ColourMaps';\nimport { ColourMap } from './Puzzles/ColourMaps';\n\nimport TransformationIcons from './PuzzleMap/Icons/Transformations';\nimport { Transformations } from './Puzzles/Transformations';\n\nimport SequencesIcons from './PuzzleMap/Icons/Sequences';\nimport { Sequences } from './Puzzles/Sequences';\n\nimport CategorisationIcons from './PuzzleMap/Icons/Categorisation';\nimport { Categorisation } from './Puzzles/Categorisation';\n\n\n// Mapping puzzle names to URLS, icons and components\nexport const puzzleData = {\n    'categorisation-0': {\n        slug: 'categorisation-0',\n        icon: CategorisationIcons[0](),\n        component: () => Categorisation(0),\n    },\n    'categorisation-1': {\n        slug: 'categorisation-1',\n        icon: CategorisationIcons[1](),\n        component: () => Categorisation(1),\n    },\n    'categorisation-2': {\n        slug: 'categorisation-2',\n        icon: CategorisationIcons[2](),\n        component: () => Categorisation(2),\n    },\n    'categorisation-3': {\n        slug: 'categorisation-3',\n        icon: CategorisationIcons[2](),\n        component: () => Categorisation(3),\n    },\n    'graph-theory-0': {\n        slug: 'graph-theory-0',\n        icon: GraphTheoryIcons[0](),\n        component: () => GraphTheory(0), \n    }\n};\n\naddData('colour-graphs', 'colour-graphs', ColourGraphIcons, ColourGraph, 3);\naddData('colour-maps', 'colour-maps', ColourMapIcons, ColourMap, 2);\naddData('transformations', 'transformations', TransformationIcons, Transformations, 4);\naddData('sequences', 'sequences', SequencesIcons, Sequences, 3);\n\nfunction addData(name, slug, icons, components, n) {\n    for (let i = 0; i < n; i++) {\n        puzzleData[`${ name }-${ i }`] = {\n            slug: `${ slug }-${ i }`,\n            icon: icons[i](),\n            component: () => components(i)\n        }\n    }\n}\n\nfunction getData(name, n) {\n    return Array\n        .from({ length: n })\n        .map((_, index) => puzzleData[`${ name }-${ index }`]);\n}\n\n// Puzzle data grouped into categories\nexport const puzzleLayout = [\n    getData('sequences', 3),\n    getData('categorisation', 4),\n    getData('transformations', 4),\n    getData('colour-graphs', 3),\n    getData('colour-maps', 2),\n    getData('graph-theory', 1),\n];\n","import React from 'react';\nimport './icons.css';\n\nexport default (props) =>\n    <svg viewBox=\"-55 -55 110 110\">\n        <defs>\n            <filter id=\"glow-spotlight\" x=\"-200%\" y=\"-200%\" width=\"400%\" height=\"400%\">\n                <feGaussianBlur stdDeviation=\"2\" result=\"colouredBlur\" />\n                <feMerge>\n                    <feMergeNode in=\"coloredBlur\"/>\n                    <feMergeNode in=\"SourceGraphic\"/>\n                </feMerge>\n            </filter>\n        </defs>\n        <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n        <circle className=\"spotlight-outline\" cx=\"0\" cy=\"0\" r=\"49\" />\n        { props.children }\n    </svg>\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { puzzleLayout } from '../puzzleData';\nimport Icon from './Icons/Icon';\nimport './puzzleMap.css';\n\n\nexport default () =>\n    <main className=\"front-page\">\n        <nav className=\"puzzle-map\">\n            {\n                puzzleLayout.map((section, i) =>\n                    <div className=\"puzzle-section\" key={i}>{\n                        section.map(\n                            ({ slug, icon }) => <Link className=\"map-link\" key={slug} to={'/pattern-puzzles/' + slug}>\n                                <Icon>{ icon }</Icon>\n                            </Link>\n                        )\n                    }</div>\n                )\n            }\n        </nav>\n    </main>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { puzzleData } from './puzzleData';\nimport PuzzleMap from './PuzzleMap/PuzzleMap';\n\nimport './base.css';\n\n\nconst BASE_URL = '/pattern-puzzles';\n\nexport default () =>\n    <Router>\n        <Switch>\n            {\n                Object.values(puzzleData).map(({ slug, component }) =>\n                    <Route key={slug} path={`${ BASE_URL }/${ slug }`} component={component} />\n                )\n            }\n            <Route path={`${BASE_URL}/`} component={PuzzleMap} />\n        </Switch>\n    </Router>\n"],"sourceRoot":""}