{"version":3,"sources":["PuzzleMap/puzzleData.js","Icons/ColourGraphs.js","Icons/ColourMaps.js","Icons/Transformations.js","Icons/RepeatingPatterns.js","PuzzleMap/PuzzleMap.js","Toolbars/Toolbar.js","Puzzles/PuzzlePage.js","Puzzles/PuzzleComponents/utils.js","Puzzles/PuzzleComponents/Graph.js","Puzzles/puzzleLoaders.js","utils/graphUtils.js","utils/evaluationUtils.js","Puzzles/ColourGraphs.js","Puzzles/PuzzleComponents/Map.js","Puzzles/ColourMaps.js","Puzzles/Transformations.js","Puzzles/PuzzleComponents/Sequence.js","Puzzles/RepeatingPatterns.js","App.js","serviceWorker.js","index.js"],"names":["puzzles","slug","icon","react_default","a","createElement","viewBox","className","cx","cy","r","x","y","width","height","fill","x1","y1","x2","y2","d","rx","ry","id","href","transform","PuzzleMap","map","section","i","key","_ref","react_router_dom","to","DELTA_ANGLE","Math","PI","Toolbar","puzzle","nColours","selectedColour","angle","colours","_loop","cos","sin","concat","setColour","setState","push","role","aria-checked","tabIndex","onClick","onKeyDown","evt","callback","keyCode","handleKeyDown","selectColourIndicator","COLOURS","PuzzlePage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","index","solved","update","bind","assertThisInitialized","getPuzzle","nextPuzzle","childState","evaluate","length","aria-label","nextState","_this$props","getPuzzleObject","_this$props2","displayPuzzle","_this$state","colourPalette","puzzleElement","style","color","getNextPuzzleButton","preserveAspectRatio","result","in","dx","dy","stdDeviation","in2","mode","React","Component","getItemColourType","item","colourItem","fixed","colour","Graph","nodes","edges","colourNode","puzzlePage","page","newNodes","slice","_this2","_this$state$nodes","_this$state$edges","edge","node","_getItemColourType","getGraphObject","_ref$nodes","_ref$edges","_ref$size","size","_ref$r","nodeObjects","_ref2","_ref3","slicedToArray","Boolean","edgeObjects","_ref4","_ref5","n1","n2","node1","node2","getTwoGraphObjects","_ref6","_ref6$nodes","_ref6$edges","_ref6$size","_ref6$r","target","blank","_ref7","_ref8","getMapObject","_ref9","_ref9$regions","regions","_ref9$connections","connections","_ref9$size","regionObjects","_ref10","_ref11","connectionObjects","_ref12","_ref13","getSequenceObject","_ref14","pattern","answer","patternObjects","sequence","getNodesOnCircle","n","arguments","undefined","_ref$offsetAngle","offsetAngle","_ref$dx","_ref$dy","Array","isArray","dAngle","getLoopOfEdges","start","stop","allItemsColoured","items","every","allConnectedItemsHaveDifferentColours","cxns","cxn","sequencesMatch","seq1","seq2","attr","puzzles1","puzzles2","scale","puzzles3","ColourGraph","PuzzlePage_PuzzlePage","graphObject","Graph_Graph","assign","ColourGraph1","ColourGraphs_ColourGraph","ColourGraph2","ColourGraph3","Map","newRegions","region","ColourMap","mapObject","Map_Map","ColourMap1","ColourMaps_ColourMap","ColourMap2","Transformation","Reflection1","Transformations_Transformation","Rotation1","newSequence","_this3","min","startX","RepeatingPatterns","Sequence_Map","RepeatingPatterns1","RepeatingPatterns_RepeatingPatterns","BASE_URL","window","location","hostname","match","ReactDOM","render","react_router","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed780c2d.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n    ColourGraphIcon1,\n    ColourGraphIcon2,\n    ColourGraphIcon3\n} from '../Icons/ColourGraphs';\n\nimport {\n    ColourMapIcon1,\n    ColourMapIcon2,\n} from '../Icons/ColourMaps';\n\nimport {\n    ReflectionIcon1,\n    RotationIcon1\n} from '../Icons/Transformations';\n\nimport { RepeatingPatternsIcon1 } from '../Icons/RepeatingPatterns';\n\nconst puzzles = [\n    [\n        { slug: 'colour-graphs-1', icon: <ColourGraphIcon1/> },\n        { slug: 'colour-graphs-2', icon: <ColourGraphIcon2/> },\n        { slug: 'colour-graphs-3', icon: <ColourGraphIcon3/> },\n    ],[\n        { slug: 'colour-maps-1', icon: <ColourMapIcon1/> },\n        { slug: 'colour-maps-2', icon: <ColourMapIcon2/> },\n    ],[\n        { slug: 'reflection-1', icon: <ReflectionIcon1/> },\n        { slug: 'rotation-1', icon: <RotationIcon1/> },\n    ],[\n        { slug: 'repeating-patterns-1', icon: <RepeatingPatternsIcon1/> },\n    ],\n];\n\nexport default puzzles;\n","import React from 'react';\n\nexport const ColourGraphIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-edges\">\n        <rect x=\"-20\" y=\"-20\" width=\"40\" height=\"40\" fill=\"none\" />\n        <line x1=\"-20\" y1=\"-20\" x2=\"20\" y2=\"20\" />\n        <line x1=\"-20\" y1=\"20\" x2=\"20\" y2=\"-20\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-20\" cy=\"-20\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"-20\" cy=\"20\" r=\"8\" />\n        <circle className=\"colour-1\" cx=\"20\" cy=\"20\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"20\" cy=\"-20\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"0\" cy=\"0\" r=\"8\" />\n    </g>\n</svg>\n\nexport const ColourGraphIcon2 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-edges\">\n        <rect x=\"-32\" y=\"-16\" width=\"64\" height=\"32\" />\n        <line x1=\"0\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n        <line x1=\"-32\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n        <line x1=\"32\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-32\" cy=\"-16\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"0\" cy=\"-16\" r=\"8\" />\n        <circle className=\"colour-1\" cx=\"32\" cy=\"-16\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"32\" cy=\"16\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"0\" cy=\"16\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"-32\" cy=\"16\" r=\"8\" />\n    </g>\n</svg>\n\nexport const ColourGraphIcon3 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-edges\">\n        <path d=\"M32 0L16 27.7h-32L-32 0 -16 -27.71h32z\" />\n        <line x1=\"16\" y1=\"-27.71\" x2=\"16\" y2=\"27.71\" />\n        <line x1=\"-16\" y1=\"-27.71\" x2=\"-16\" y2=\"27.71\" />\n        <line className=\"edge-outline\" x1=\"-32\" y1=\"0\" x2=\"32\" y2=\"0\" />\n        <line x1=\"-32\" y1=\"0\" x2=\"32\" y2=\"0\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"32\" cy=\"0\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"16\" cy=\"27.71\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"-16\" cy=\"27.71\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"-32\" cy=\"0\" r=\"8\" />\n        <circle className=\"colour-1\" cx=\"-16\" cy=\"-27.71\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"16\" cy=\"-27.71\" r=\"8\" />\n    </g>\n</svg>\n","import React from 'react';\n\n\nexport const ColourMapIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-nodes\">\n        <rect className=\"colour-1\" x=\"-28\" y=\"-28\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"0\" y=\"-28\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"-28\" y=\"0\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"0\" y=\"0\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-3\" x=\"-12\" y=\"-12\" width=\"24\" height=\"24\" rx=\"2\" ry=\"2\" />\n    </g>\n</svg>\n\nexport const ColourMapIcon2 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-nodes\">\n        <rect className=\"colour-1\" x=\"-30\" y=\"-30\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"0\" y=\"-30\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"-30\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-3\" x=\"-10\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"10\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"-30\" y=\"10\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"0\" y=\"10\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n    </g>\n</svg>","import React from 'react';\n\nexport const ReflectionIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <defs>\n        <g id=\"reflection-1-puzzle\">\n            <g className=\"graph-edges\">\n                <line x1=\"12\" y1=\"0\" x2=\"-11\" y2=\"-15\" />\n                <line x1=\"12\" y1=\"0\" x2=\"-11\" y2=\"15\" />\n                <line x1=\"-11\" y1=\"-15\" x2=\"-11\" y2=\"15\" />\n            </g>\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-2\" cx=\"12\" cy=\"0\" r=\"5\" />\n                <circle className=\"colour-1\" cx=\"-11\" cy=\"15\" r=\"5\" />\n                <circle className=\"colour-1\" cx=\"-11\" cy=\"-15\" r=\"5\" />\n            </g>\n        </g>\n    </defs>\n\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n\n    <use href=\"#reflection-1-puzzle\" transform=\"translate(-20)\"/>\n    <use href=\"#reflection-1-puzzle\" transform=\"translate(20) scale(-1, 1)\"/>\n</svg>\n\nexport const RotationIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <defs>\n        <g id=\"rotation-1-puzzle\">\n            <g className=\"graph-edges\">\n                <line x1=\"-16\" y1=\"13\" x2=\"-2\" y2=\"-13\" />\n                <line x1=\"-16\" y1=\"13\" x2=\"12\" y2=\"13\" />\n                <line x1=\"-2\" y1=\"-13\" x2=\"12\" y2=\"13\" />\n            </g>\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-1\" cx=\"-16\" cy=\"13\" r=\"5\" />\n                <circle className=\"colour-2\" cx=\"-2\" cy=\"-13\" r=\"5\" />\n                <circle className=\"colour-1\" cx=\"12\" cy=\"13\" r=\"5\" />\n            </g>\n        </g>\n    </defs>\n\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n\n    <use href=\"#rotation-1-puzzle\" transform=\"translate(-20)\"/>\n    <use href=\"#rotation-1-puzzle\" transform=\"translate(20) rotate(180)\"/>\n</svg>\n","import React from 'react';\n\nexport const RepeatingPatternsIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-nodes\">\n        <rect className=\"colour-1\" x=\"-37.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"-22.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"-7.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"7.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"22.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n    </g>\n</svg>\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport puzzles from './puzzleData';\nimport './puzzleMap.css';\n\n\nexport default () =>\n    <main className=\"front-page\">\n        <nav className=\"puzzle-map\">\n            {\n                puzzles.map((section, i) =>\n                    <div className=\"puzzle-section\" key={i}>{\n                        section.map(\n                            ({ slug, icon }) => <Link className=\"map-link\" key={slug} to={'/pattern-puzzles/' + slug}>\n                                { icon }\n                            </Link>\n                        )\n                    }</div>\n                )\n            }\n        </nav>\n    </main>\n","import React from 'react';\n\n\nconst TOOLBAR_R = 113;\nconst DELTA_ANGLE = Math.PI / 20;\n\nconst handleKeyDown = (evt, callback) => {\n    if (evt.key === 'Enter' || evt.keyCode === 32) {\n        callback();\n    }\n};\n\nexport default function ({ puzzle, nColours, selectedColour }) {\n    const r = 6;\n    let angle = Math.PI - DELTA_ANGLE * (nColours - 1) / 2;\n\n    const colours = [];\n    for (let i = 1; i <= nColours; i++) {\n        const cx = (TOOLBAR_R + r) * Math.cos(angle);\n        const cy = (TOOLBAR_R + r) * Math.sin(angle);\n        \n        let className = `colour-palette colour-${i}`;\n        if (selectedColour === i) {\n            className += ' selected';\n        }\n\n        const setColour = () => puzzle.setState({ selectedColour: i });\n\n        colours.push(\n            <circle\n                className={className}\n                role=\"radio\"\n                aria-checked={selectedColour === i}\n                tabIndex=\"0\"\n                key={i}\n                cx={cx}\n                cy={cy}\n                r={r}\n                onClick={setColour}\n                onKeyDown={(evt) => handleKeyDown(evt, setColour) }\n            />\n        );\n\n        angle += DELTA_ANGLE;\n    }\n\n    let selectColourIndicator = \"selected-colour-indicator\";\n    if (selectedColour) {\n        selectColourIndicator += ` colour-${selectedColour}`;\n    }\n\n    return <g className=\"toolbar\">\n        <circle className={selectColourIndicator} r=\"109\" />\n        <g className=\"colour-palette\" role=\"radiogroup\">\n            { colours }\n        </g>\n    </g>;\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Toolbar from '../Toolbars/Toolbar';\n\nimport './puzzle.css';\n\n\nconst COLOURS = [\n    'rgb(30, 20, 20)',\n    'rgb(20, 146, 196)',\n    'rgb(196, 20, 96)',\n    'rgb(20, 198, 96)',\n    'rgb(147, 20, 198)',\n];\n\nexport default class PuzzlePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: 0,\n\t\t\tsolved: false,\n            selectedColour: null,\n        }\n\n        this.update = this.update.bind(this);\n        this.getPuzzle = this.getPuzzle.bind(this);\n        this.nextPuzzle = this.nextPuzzle.bind(this);\n    }\n\n    componentDidMount() {\n        this.getPuzzle(0);\n    }\n\n    update(childState) {\n        this.setState({\n            solved: this.props.evaluate(childState, this.state.puzzle)\n        });\n    }\n\n    getNextPuzzleButton() {\n        if (!this.state.solved) { return null; }\n\n        if (this.state.index < this.props.puzzles.length - 1) {\n            return <div className=\"menu-button next-puzzle-button\" aria-label=\"Next puzzle\">\n                <svg viewBox=\"-10 -10 20 20\">\n                    <circle r=\"9\" onClick={this.nextPuzzle}/>\n                </svg>\n            </div>\n        } else {\n            return <Link to=\"/pattern-puzzles/\" className=\"menu-button next-puzzle-button\" aria-label=\"Puzzle completed\">\n                <svg viewBox=\"-10 -10 20 20\">\n                    <circle r=\"9\" />\n                </svg>\n            </Link>\n        }\n    }\n\n    nextPuzzle() {\n        const nextState = this.state.index + 1;\n        this.setState({\n            index: nextState,\n            solved: false,\n            selectedColour: null\n        });\n        this.getPuzzle(nextState);\n    }\n\n    getPuzzle(index) {\n        const { getPuzzleObject, puzzles } = this.props;\n        this.setState({\n            puzzle: getPuzzleObject(puzzles[index])\n        });\n    }\n\n    render() {\n        const { puzzles, displayPuzzle } = this.props;\n        const { index, selectedColour, puzzle } = this.state;\n        if (!puzzle) { return null; }\n\n        const colourPalette = puzzles[index].colourPalette;\n        const puzzleElement = displayPuzzle(this, puzzle);\n\n        // Determine what the selected colour is if we have selected one\n        const style = selectedColour ? { color: COLOURS[selectedColour] } : {};\n        const className = selectedColour ? \"colour-selected\" : \"\";\n\n        return <main>\n            <nav>\n                <Link to=\"/pattern-puzzles/\" className=\"menu-button back-button\" aria-label=\"Back to menu\">\n                    <svg viewBox=\"-10 -10 20 20\">\n                        <circle r=\"9\" />\n                    </svg>\n                </Link>\n\n                { this.getNextPuzzleButton() }\n            </nav>\n\n            <svg id=\"puzzle-chamber\" viewBox=\"-128 -128 256 256\" preserveAspectRatio=\"xMidYMid slice\">\n                <defs>\n                    <filter id=\"shadow-filter\">\n                        <feOffset result=\"offOut\" in=\"SourceAlpha\" dx=\"2\" dy=\"2\"/>\n                        <feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\"5\" />\n                        <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\n                    </filter>\n                    <filter id=\"glow-filter\" x=\"-200%\" y=\"-200%\" width=\"400%\" height=\"400%\">\n                        <feGaussianBlur stdDeviation=\"1\" result=\"colouredBlur\" />\n                        <feMerge>\n                            <feMergeNode in=\"coloredBlur\"/>\n                            <feMergeNode in=\"SourceGraphic\"/>\n                        </feMerge>\n                    </filter>\n                </defs>\n\n                <g id=\"puzzle\" key={index} className={className} style={style}>\n                    { puzzleElement }\n                </g>\n\n                <circle id=\"chamber-window\" r=\"145\" />\n                <Toolbar \n                    puzzle={this}\n                    nColours={colourPalette}\n                    selectedColour={selectedColour}\n                />\n            </svg>\n        </main>\n    }\n};\n","export function getItemColourType(item, colourItem) {\n    let className;\n    let onClick;\n\n    if (!item.fixed) {\n        onClick = colourItem;\n        className = \"colourable \";\n        if (item.colour) {\n            className += `fill-${item.colour}`;\n        } else {\n            className += \"empty-region\";\n        }\n    } else {\n        className = `fill-${item.colour}`;\n    }\n\n    return { className, onClick };\n}\n","import React from 'react';\nimport { getItemColourType } from './utils';\n\nimport './graph.css';\n\n\nexport default class Graph extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nodes: props.nodes,\n            edges: props.edges\n        };\n\n        this.colourNode = this.colourNode.bind(this);\n    }\n\n    colourNode(i) {\n        // Add colour to array of node colours\n        const puzzlePage = this.props.page;\n        const newNodes = this.state.nodes.slice();\n        newNodes[i].colour = puzzlePage.state.selectedColour;\n\n        this.setState({\n            nodes: newNodes\n        });\n\n        puzzlePage.update(this.state);\n    }\n\n    render() {\n        const {\n            nodes = [],\n            edges = []\n        } = this.state;\n\n        return <g className=\"graph\">\n            <g className=\"graph-edges\">\n                { edges.map((edge, i) =>\n                    <g key={i}>\n                        <line\n                            className=\"edge-outline\"\n                            x1={edge.x1}\n                            y1={edge.y1}\n                            x2={edge.x2}\n                            y2={edge.y2}\n                        />\n                        <line\n                            x1={edge.x1}\n                            y1={edge.y1}\n                            x2={edge.x2}\n                            y2={edge.y2}\n                        />\n                    </g>\n                )}\n            </g>\n\n            <g className=\"graph-nodes\">\n                { nodes.map((node, i) => {\n                    const colourNode = () => this.colourNode(i);\n                    const {className, onClick } = getItemColourType(node, colourNode);\n\n                    return <circle\n                        key={i}\n                        className={className}\n                        cx={node.x}\n                        cy={node.y}\n                        r={node.r}\n                        onClick={onClick}\n                    />\n                })}\n            </g>\n        </g>\n    }\n};\n","// Given arrays of node coordinates and edge coordinates, return an object of nodes and edges\nexport function getGraphObject({ nodes=[], edges=[], size=32, r=8 }) {\n    const nodeObjects = nodes.map(([x, y, colour]) => ({\n        r,\n        x: x * size,\n        y: y * size,\n        colour,\n        fixed: Boolean(colour)\n    }));\n\n    const edgeObjects = edges.map(([n1, n2]) => {\n        const node1 = nodeObjects[n1];\n        const node2 = nodeObjects[n2];\n        return {\n            node1,\n            node2,\n            x1: node1.x,\n            y1: node1.y,\n            x2: node2.x,\n            y2: node2.y\n        };\n    });\n\n    return {\n        nodes: nodeObjects,\n        edges: edgeObjects\n    };\n}\n\n// Given arrays of node coordinates and edge coordinates, return two objects of nodes and edges,\n// one includes the node colours and one is empty\nexport function getTwoGraphObjects({ nodes=[], edges=[], size=32, r=8 }) {\n    const target = getGraphObject({ nodes, edges, size, r });\n\n    // Remove the colours from the nodes\n    const blankNodes = nodes.map(([x, y]) => [x, y]);\n    const blankGraph = getGraphObject({ nodes: blankNodes, edges, size, r });\n\n    return { target, blank: blankGraph };\n}\n\nexport function getMapObject({ regions=[], connections=[], size=1 }) {\n    const regionObjects = regions.map(([x, y, width, height]) => ({\n        x: (x - width / 2) * size,\n        y: (y - height / 2) * size,\n        width: width * size,\n        height: height * size,\n    }));\n\n    const connectionObjects = connections.map(([n1, n2]) => ({\n        node1: regionObjects[n1],\n        node2: regionObjects[n2],\n    }));\n\n    // Create a graph of the map in order to evaluate the solution\n    return {\n        regions: regionObjects,\n        connections: connectionObjects\n    };\n}\n\nexport function getSequenceObject({ pattern, answer }) {\n    const patternObjects = pattern.map(item => ({\n        colour: item,\n        fixed: true\n    }));\n\n    const sequence = patternObjects.concat(\n        answer.map(item => ({ colour: 0 })\n    ));\n    \n    // Target sequence is the existing sequence plus the answer fragment\n    const target = patternObjects.concat(\n        answer.map(item => ({ colour: item })\n    ));\n\n    return { sequence, target };\n}\n","export function getNodesOnCircle(colours, {r=1, offsetAngle=0, dx=0, dy=0}={}) {\n    var n;\n    if (Array.isArray(colours)) {\n        n = colours.length;\n    } else {\n        n = colours;\n        colours = new Array(n);\n    }\n\n    var nodes = [];\n    var dAngle = 2 * Math.PI / n;\n    var angle = (offsetAngle * Math.PI / 180 || 0) - 0.5 * dAngle;\n\n    for (var i = 0; i < n; i++) {\n        nodes.push([\n            dx + r * Math.sin(angle),\n            dy + r * Math.cos(angle),\n            colours[i]\n        ]);\n        angle += dAngle;\n    }\n\n    return nodes;\n}\n\nexport function getLoopOfEdges(start, stop) {\n    if (stop === undefined) {\n        stop = start - 1;\n        start = 0;\n    }\n\n    var edges = [];\n    for (var i = start; i < stop; i++) {\n        edges.push([i, i + 1]);\n    }\n    edges.push([start, stop]);\n    return edges;\n}\n","export function allItemsColoured(items) {\n    return items.every(item => item.colour > 0);\n}\n\nexport function allConnectedItemsHaveDifferentColours(cxns) {\n    return cxns.every(cxn => cxn.node1.colour !== cxn.node2.colour);\n}\n\nexport const sequencesMatch = (seq1, seq2, attr) => {\n    if (seq1.length !== seq2.length) { return false; }\n    for (var i = 0; i < seq1.length; i++) {\n        if (seq1[i][attr] !== seq2[i][attr]) {\n            return false;\n        }\n    }\n    return true;\n};\n","/*\n * Colour all nodes on a graph such that no edges joins two nodes of the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport Graph from './PuzzleComponents/Graph';\nimport { getGraphObject } from './puzzleLoaders';\nimport { getNodesOnCircle, getLoopOfEdges } from '../utils/graphUtils';\nimport { allItemsColoured, allConnectedItemsHaveDifferentColours } from '../utils/evaluationUtils';\n\n\nconst puzzles1 = [\n\t{\n\t\tcolourPalette: 1,\n\t\tnodes: [[0, 0]]\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: [[-1, 0], [1, 0]],\n\t\tedges: [[0, 1]],\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: [[-2, 0], [0, 0], [2, 0]],\n\t\tedges: [[0, 1], [1, 2]],\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: getNodesOnCircle(3),\n\t\tedges: getLoopOfEdges(3),\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4),\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4).concat([[1, 3]]),\n\t}, {\n\t\tcolourPalette: 4,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4).concat([[1, 3], [0, 2]]),\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: [[0, 0]].concat(getNodesOnCircle(4)),\n\t\tedges: getLoopOfEdges(1, 4).concat([[0, 1], [0, 2], [0, 3], [0, 4]]),\n\t}\n];\n\nconst puzzles2 = [\n    {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6),\n    }, {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[1, 4]]),\n    }, {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 3]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [1, 4], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [1, 4], [1, 3]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: getNodesOnCircle(3).concat(getNodesOnCircle(3, { r: 2, offsetAngle: 60 })),\n        edges: getLoopOfEdges(3).concat([[0, 3], [1, 3], [1, 4], [2, 4], [0, 5], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        scale: 16,\n        nodes: getNodesOnCircle(3).concat(getNodesOnCircle(3, { r: 4, offsetAngle: 60 })),\n        edges: getLoopOfEdges(3)\n            .concat(getLoopOfEdges(3, 5))\n            .concat([[0, 3], [1, 3], [1, 4], [2, 4], [0, 5], [2, 5]]),\n    }\n];\n\n// TODO: Give more colourPalette than required\nconst puzzles3 = [\n    {\n        colourPalette: 2,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6),\n    }, {\n        colourPalette: 2,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [2, 4], [0, 4]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[1, 3], [0, 4], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[2, 4], [1, 3], [0, 4], [1, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 3], [1, 4], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [1, 3], [2, 4], [3, 5], [4, 0], [5, 1]]),\n    }\n];\n\nconst ColourGraph = ({ puzzles }) => {\n\tconst evaluate = ({ nodes, edges }) => \n\t    allItemsColoured(nodes) && allConnectedItemsHaveDifferentColours(edges);\n\n\tconst displayGraph = (page, graphObject) => <Graph page={page} {...graphObject} />\n\n\treturn <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getGraphObject}\n\t\tdisplayPuzzle={displayGraph} />;\n};\n\nexport const ColourGraph1 = () => <ColourGraph puzzles={puzzles1} />\n\nexport const ColourGraph2 = () => <ColourGraph puzzles={puzzles2} />\n\nexport const ColourGraph3 = () => <ColourGraph puzzles={puzzles3} />\n","import React from 'react';\n\n\nexport default class Map extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            regions: props.regions,\n            connections: props.connections\n        };\n\n        this.colourNode = this.colourNode.bind(this);\n    }\n\n    colourNode(i) {\n        // Add colour to array of node colours\n        const puzzlePage = this.props.page;\n        const newRegions = this.state.regions.slice();\n        newRegions[i].colour = puzzlePage.state.selectedColour;\n\n        this.setState({\n            regions: newRegions\n        });\n\n        puzzlePage.update(this.state);\n    }\n\n    render() {\n        const regions = this.state.regions;\n\n        return <g className=\"graph\">\n            <g className=\"graph-nodes\">\n                { regions.map((region, i) => {\n                    let className = \"colourable \";\n                    if (region.colour) {\n                        className += `fill-${region.colour}`;\n                    } else {\n                        className += \"empty-region\";\n                    }\n\n                    return <rect\n                        key={i}\n                        className={className}\n                        x={region.x}\n                        y={region.y}\n                        width={region.width}\n                        height={region.height}\n                        rx=\"3\"\n                        ry=\"3\"\n                        onClick={() => this.colourNode(i)}\n                    />\n                })}\n            </g>\n        </g>\n    }\n};\n","/*\n * Colour regions on a map such that no two touching regions have the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport Map from './PuzzleComponents/Map';\nimport { getMapObject } from './puzzleLoaders';\nimport { allItemsColoured, allConnectedItemsHaveDifferentColours } from '../utils/evaluationUtils';\n\n\nconst puzzles1 = [\n    {\n        colourPalette: 1,\n        regions: [[0, 0, 32, 32]]\n    }, {\n        colourPalette: 2,\n        regions: [[-16, 0, 32, 32], [16, 0, 32, 32]],\n        connections: [[0, 1]]\n    }, {\n        colourPalette: 2,\n        regions: [[-32, 0, 32, 32], [0, 0, 32, 32], [32, 0, 32, 32]],\n        connections: [[0, 1], [1, 2]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [0, -16, 64, 32]],\n        connections: [[0, 1], [1, 2], [0, 2]]\n    }, {\n        colourPalette: 2,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [-16, -16, 32, 32], [16, -16, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [-16, -16, 32, 32], [16, -16, 32, 32], [0, 0, 28, 28]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 3,\n        regions: [[0, 0, 72, 72], [-12, 12, 24, 24], [12, 12, 24, 24], [-12, -12, 24, 24], [12, -12, 24, 24], [0, 0, 24, 24]],\n        connections: [[1, 2], [3, 4], [1, 3], [2, 4], [0, 1], [0, 2], [0, 3], [0, 4], [5, 1], [5, 2], [5, 3], [5, 4]]\n    }, {\n        colourPalette: 4,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [0, -16, 64, 32], [0, 0, 28, 28]],\n        connections: [[0, 1], [0, 2], [0, 3], [1, 2], [1, 3], [2, 3]]\n    }\n];\n\nconst puzzles2 = [\n    {\n        colourPalette: 2,\n        regions: [[0, 0, 96, 96], [0, 0, 32, 32]],\n        connections: [[0, 1]]\n    }, {\n        colourPalette: 3,\n        regions: [[-24, 0, 48, 96], [24, 0, 48, 96], [0, 0, 32, 32]],\n        connections: [[0, 1], [1, 2], [0, 2]]\n    }, {\n        colourPalette: 4,\n        regions: [[0, -32, 96, 32], [-24, 16, 48, 64], [24, 16, 48, 64], [0, 0, 32, 32]],\n        connections: [[0, 1], [0, 2], [0, 3], [1, 2], [1, 3], [2, 3]]\n    }, {\n        colourPalette: 3,\n        regions: [[-24, -24, 48, 48], [24, -24, 48, 48], [-24, 24, 48, 48], [24, 24, 48, 48], [0, 0, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, -32, 64, 32], [32, -16, 32, 64], [-32, 16, 32, 64], [16, 32, 64, 32], [0, 0, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 2,\n        regions: [\n            [-32, -32, 32, 32], [0, -32, 32, 32], [32, -32, 32, 32],\n            [-32, 0, 32, 32], [0, 0, 32, 32], [32, 0, 32, 32],\n            [-32, 32, 32, 32], [0, 32, 32, 32], [32, 32, 32, 32]\n        ],\n        connections: [\n            [0, 1], [1, 2], [3, 4], [4, 5], [6, 7], [7, 8],\n            [0, 3], [1, 4], [2, 5], [3, 6], [4, 7], [5, 8]\n        ]\n    }\n];\n\nconst ColourMap = ({ puzzles }) => {\n\tconst evaluate = ({ regions, connections }) => \n\t    allItemsColoured(regions) && allConnectedItemsHaveDifferentColours(connections);\n\n\tconst displayMap = (page, mapObject) => <Map page={page} {...mapObject} />\n\n\treturn <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getMapObject}\n\t\tdisplayPuzzle={displayMap} />;\n};\n\nexport const ColourMap1 = () => <ColourMap puzzles={puzzles1} />\nexport const ColourMap2 = () => <ColourMap puzzles={puzzles2} />\n","/*\n * Colour all nodes on a graph such that no edges joins two nodes of the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport Graph from './PuzzleComponents/Graph';\nimport { getTwoGraphObjects } from './puzzleLoaders';\nimport { getNodesOnCircle, getLoopOfEdges } from '../utils/graphUtils';\nimport { allItemsColoured, sequencesMatch } from '../utils/evaluationUtils';\n\n\nconst puzzles1 = [\n\t{\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 2], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 1]),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3]),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 2, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 4,\n        nodes: getNodesOnCircle([1, 2, 3, 4]),\n        edges: getLoopOfEdges(4)\n\t}\n];\n\nconst puzzles2 = [\n\t{\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 2], { dy: 0.25 }),\n\t\tedges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2], { offsetAngle: 90 }),\n\t\tedges: getLoopOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2]),\n\t\tedges: getLoopOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 2, 2]),\n\t\tedges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 1, 2]),\n\t\tedges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 2], { dy: 0.25 }),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3], { dy: 0.25 }),\n\t\tedges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 4,\n        nodes: getNodesOnCircle([1, 2, 3, 4]),\n        edges: getLoopOfEdges(4)\n\t}\n];\n\nconst Transformation = ({ puzzles, transform }) => {\n\tconst evaluate = (blank, { target }) => {\n\t\treturn allItemsColoured(blank.nodes) && sequencesMatch(blank.nodes, target.nodes, 'colour');\n\t}\n\n\tconst displayGraph = (page, {target, blank}) => <g>\n        <g transform=\"translate(-50)\">\n            <Graph page={page} {...target} />\n        </g>\n        <g transform={\"translate(50) \" + transform }>\n            <Graph page={page} {...blank} />\n        </g>\n\n        <line className=\"reflection-line\" y1=\"-200\" y2=\"200\" />\n    </g>\n\n\treturn <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getTwoGraphObjects}\n\t\tdisplayPuzzle={displayGraph} />;\n};\n\nexport const Identity1 = () => <Transformation puzzles={puzzles1} transform=\"\"/>\n\nexport const Reflection1 = () => <Transformation puzzles={puzzles1} transform=\"scale(-1 1)\"/>\n\nexport const Rotation1 = () => <Transformation puzzles={puzzles2} transform=\"rotate(180)\"/>\n","import React from 'react';\nimport { getItemColourType } from './utils';\n\n\nexport default class Map extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sequence: props.sequence,\n        };\n\n        this.colourNode = this.colourNode.bind(this);\n    }\n\n    colourNode(i) {\n        // Add colour to array of node colours\n        const puzzlePage = this.props.page;\n        const newSequence = this.state.sequence.slice();\n        newSequence[i].colour = puzzlePage.state.selectedColour;\n\n        // Update colour and then update parent page\n        this.setState(\n            { sequence: newSequence },\n            () => puzzlePage.update(this.state)\n        );\n    }\n\n    render() {\n        const sequence = this.state.sequence;\n        const size = Math.min(24, 160 / sequence.length);\n        const startX = -(sequence.length * size) / 2;\n\n        return <g className=\"sequence\">\n            { sequence.map((item, i) => {\n                const colourNode = () => this.colourNode(i);\n                const {className, onClick } = getItemColourType(item, colourNode);\n\n                return <rect\n                    key={i}\n                    className={className}\n                    x={startX + i * size }\n                    y={-size / 2}\n                    width={size - 1}\n                    height={size - 1}\n                    rx=\"3\"\n                    ry=\"3\"\n                    onClick={onClick}\n                />\n            })}\n        </g>\n    }\n};\n","/*\n * Colour regions on a map such that no two touching regions have the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport Sequence from './PuzzleComponents/Sequence';\nimport { getSequenceObject } from './puzzleLoaders';\nimport { allItemsColoured, sequencesMatch } from '../utils/evaluationUtils';\n\n\nconst puzzles1 = [\n    {\n        colourPalette: 1,\n        pattern: [1, 1, 1, 1],\n        answer: [1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 1, 1],\n        answer: [1, 1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 2, 1, 2],\n        answer: [1, 2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 3, 1, 2, 3],\n        answer: [1, 2, 3]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 2, 2, 1, 1],\n        answer: [2, 2]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 2, 1, 2, 2],\n        answer: [1, 2, 2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 2, 3, 3, 3, 1, 2, 2],\n        answer: [3, 3, 3]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 1, 2, 1, 2, 1, 1, 2],\n        answer: [1, 2, 1, 1]\n    }\n];\n\nconst RepeatingPatterns = ({ puzzles }) => {\n\tconst evaluate = ({ sequence }, { target }) => {\n        return allItemsColoured(sequence) && sequencesMatch(sequence, target, 'colour');\n    }\n\n\tconst displaySequence = (page, sequence) => <Sequence page={page} {...sequence} />\n\n\treturn <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getSequenceObject}\n\t\tdisplayPuzzle={displaySequence} />;\n};\n\nexport const RepeatingPatterns1 = (props) => <RepeatingPatterns puzzles={puzzles1} {...props} />","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport PuzzleMap from './PuzzleMap/PuzzleMap';\nimport {\n    ColourGraph1,\n    ColourGraph2,\n    ColourGraph3\n} from './Puzzles/ColourGraphs';\n\nimport {\n    ColourMap1,\n    ColourMap2\n} from './Puzzles/ColourMaps';\n\nimport {\n    Reflection1,\n    Rotation1,\n} from './Puzzles/Transformations';\n\nimport { RepeatingPatterns1 } from './Puzzles/RepeatingPatterns';\n\nimport './base.css';\nimport './Icons/icons.css';\n\n\nconst BASE_URL = '/pattern-puzzles';\n\nexport default () =>\n    <Router>\n        <Switch>\n            <Route path={`${BASE_URL}/colour-graphs-1`} component={ColourGraph1} />\n            <Route path={`${BASE_URL}/colour-graphs-2`} component={ColourGraph2} />\n            <Route path={`${BASE_URL}/colour-graphs-3`} component={ColourGraph3} />\n            <Route path={`${BASE_URL}/colour-maps-1`} component={ColourMap1} />\n            <Route path={`${BASE_URL}/colour-maps-2`} component={ColourMap2} />\n            <Route path={`${BASE_URL}/repeating-patterns-1`} component={RepeatingPatterns1} />\n            <Route path={`${BASE_URL}/reflection-1`} component={Reflection1} />\n            <Route path={`${BASE_URL}/rotation-1`} component={Rotation1} />\n            <Route path={`${BASE_URL}/`} component={PuzzleMap} />\n        </Switch>\n    </Router>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}