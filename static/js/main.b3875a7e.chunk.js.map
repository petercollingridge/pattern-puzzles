{"version":3,"sources":["PuzzleMap/puzzleData.js","Icons/ColourGraphs.js","Icons/ColourMaps.js","Icons/Transformations.js","Icons/RepeatingPatterns.js","Icons/Categorisation.js","PuzzleMap/PuzzleMap.js","Toolbars/Toolbar.js","Puzzles/PuzzlePage.js","Puzzles/PuzzleComponents/Primitives.js","Puzzles/PuzzleComponents/utils.js","Puzzles/PuzzleComponents/Graph.js","Puzzles/puzzleLoaders.js","utils/common.js","utils/graphUtils.js","utils/evaluation.js","Puzzles/ColourGraphs.js","Puzzles/PuzzleComponents/Map.js","Puzzles/ColourMaps.js","Puzzles/Transformations.js","Puzzles/PuzzleComponents/Sequence.js","Puzzles/RepeatingPatterns.js","Puzzles/PuzzleComponents/Categories.js","Puzzles/Categorisation.js","App.js","serviceWorker.js","index.js"],"names":["puzzles","slug","icon","react_default","a","createElement","viewBox","className","cx","cy","r","x","y","width","height","fill","x1","y1","x2","y2","d","rx","ry","id","href","transform","PuzzleMap","map","section","i","key","_ref","react_router_dom","to","DELTA_ANGLE","Math","PI","Toolbar","puzzle","nColours","selectedColour","angle","colours","_loop","cos","sin","concat","setColour","setState","push","role","aria-checked","tabIndex","onClick","onKeyDown","evt","callback","keyCode","handleKeyDown","selectColourIndicator","COLOURS","PuzzlePage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","index","solved","update","bind","assertThisInitialized","getPuzzle","nextPuzzle","_this$props","getPuzzleObject","colourPalette","nextState","evaluate","length","aria-label","_this$state","style","color","getNextPuzzleButton","preserveAspectRatio","result","in","dx","dy","stdDeviation","in2","mode","displayPuzzle","React","Component","Line","getColourClassName","item","fixed","colour","getClickToColour","colourItem","Graph","_ref$edges","edges","_ref$nodes","nodes","colourNode","edge","Primitives_Line","assign","node","getGraphObject","_ref$size","size","_ref$r","nodeObjects","_ref2","_ref3","slicedToArray","Boolean","edgeObjects","_ref4","_ref5","n1","n2","node1","node2","getGraphAndUncolouredCopy","_ref6","_ref6$nodes","_ref6$edges","_ref6$size","_ref6$r","target","blank","_ref7","_ref8","getMapObject","_ref9","_ref9$regions","regions","_ref9$connections","connections","_ref9$size","regionObjects","_ref10","_ref11","connectionObjects","_ref12","_ref13","getSequenceObject","_ref14","pattern","answer","patternObjects","sequence","getCategoryObjects","_ref15","categories","randomRotate","categoryObjects","forEach","category","type","object","rotate","floor","random","arr","j","temp","shuffle","getPointsOnACircle","n","arguments","undefined","_ref$offsetAngle","offsetAngle","_ref$dx","_ref$dy","points","dAngle","getNodesOnCircle","_ref2$r","_ref2$offsetAngle","_ref2$dx","_ref2$dy","Array","isArray","getLoopOfEdges","start","stop","linearGraph","scale","startX","loopGraph","allItemsColoured","every","allConnectedItemsHaveDifferentColours","filter","cxn","graphIsChromatic","sequencesMatch","seq1","seq2","attr","attributesHaveMapping","attr1","attr2","mapping","Map","value","get","set","puzzles1","puzzles2","puzzles3","ColourableGraph","Graph_Graph","nodeIndex","ColourGraph","PuzzlePage_PuzzlePage","ColourGraph1","ColourGraphs_ColourGraph","ColourGraph2","ColourGraph3","_ref$regions","region","ColourableMap","Map_Map","ColourMap","ColourMap1","ColourMaps_ColourMap","ColourMap2","identity1","reflection1","rotation1","Transformation","Identity1","Transformations_Transformation","Reflection1","Rotation1","Sequence","_ref$sequence","min","ColourableSequence","Sequence_Sequence","RepeatingPatterns","RepeatingPatterns1","RepeatingPatterns_RepeatingPatterns","Categories","colourCategory","_getCirclePackedInCir","R","phi","cPhi","categoryPositions","categorySize","getCirclePackedInCircle","component","puzzle1","displayCategories","Categories_Categories","Categorisation","Categorisation1","Categorisation_Categorisation","BASE_URL","window","location","hostname","match","ReactDOM","render","react_router","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3875a7e.chunk.js","sourcesContent":["import React from 'react';\n\nimport { ColourGraphIcon1, ColourGraphIcon2, ColourGraphIcon3 } from '../Icons/ColourGraphs';\nimport { ColourMapIcon1, ColourMapIcon2 } from '../Icons/ColourMaps';\nimport { IdentityIcon1, ReflectionIcon1, RotationIcon1 } from '../Icons/Transformations';\nimport { RepeatingPatternsIcon1 } from '../Icons/RepeatingPatterns';\nimport { Categorisation1 } from '../Icons/Categorisation';\n\nconst puzzles = [\n    [\n        { slug: 'colour-graphs-1', icon: <ColourGraphIcon1/> },\n        { slug: 'colour-graphs-2', icon: <ColourGraphIcon2/> },\n        { slug: 'colour-graphs-3', icon: <ColourGraphIcon3/> },\n    ], [\n        { slug: 'colour-maps-1', icon: <ColourMapIcon1/> },\n        { slug: 'colour-maps-2', icon: <ColourMapIcon2/> },\n    ], [\n        { slug: 'identity-1', icon: <IdentityIcon1/> },\n        { slug: 'reflection-1', icon: <ReflectionIcon1/> },\n        { slug: 'rotation-1', icon: <RotationIcon1/> },\n    ], [\n        { slug: 'repeating-patterns-1', icon: <RepeatingPatternsIcon1/> },\n    ], [\n        { slug: 'categorisation-1', icon: <Categorisation1/> },\n    ],\n];\n\nexport default puzzles;\n","import React from 'react';\n\nexport const ColourGraphIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-edges\">\n        <rect x=\"-20\" y=\"-20\" width=\"40\" height=\"40\" fill=\"none\" />\n        <line x1=\"-20\" y1=\"-20\" x2=\"20\" y2=\"20\" />\n        <line x1=\"-20\" y1=\"20\" x2=\"20\" y2=\"-20\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-20\" cy=\"-20\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"-20\" cy=\"20\" r=\"8\" />\n        <circle className=\"colour-1\" cx=\"20\" cy=\"20\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"20\" cy=\"-20\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"0\" cy=\"0\" r=\"8\" />\n    </g>\n</svg>\n\nexport const ColourGraphIcon2 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-edges\">\n        <rect x=\"-32\" y=\"-16\" width=\"64\" height=\"32\" />\n        <line x1=\"0\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n        <line x1=\"-32\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n        <line x1=\"32\" y1=\"-16\" x2=\"0\" y2=\"16\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-32\" cy=\"-16\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"0\" cy=\"-16\" r=\"8\" />\n        <circle className=\"colour-1\" cx=\"32\" cy=\"-16\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"32\" cy=\"16\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"0\" cy=\"16\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"-32\" cy=\"16\" r=\"8\" />\n    </g>\n</svg>\n\nexport const ColourGraphIcon3 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-edges\">\n        <path d=\"M32 0L16 27.7h-32L-32 0 -16 -27.71h32z\" />\n        <line x1=\"16\" y1=\"-27.71\" x2=\"16\" y2=\"27.71\" />\n        <line x1=\"-16\" y1=\"-27.71\" x2=\"-16\" y2=\"27.71\" />\n        <line className=\"edge-outline\" x1=\"-32\" y1=\"0\" x2=\"32\" y2=\"0\" />\n        <line x1=\"-32\" y1=\"0\" x2=\"32\" y2=\"0\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"32\" cy=\"0\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"16\" cy=\"27.71\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"-16\" cy=\"27.71\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"-32\" cy=\"0\" r=\"8\" />\n        <circle className=\"colour-1\" cx=\"-16\" cy=\"-27.71\" r=\"8\" />\n        <circle className=\"colour-3\" cx=\"16\" cy=\"-27.71\" r=\"8\" />\n    </g>\n</svg>\n","import React from 'react';\n\n\nexport const ColourMapIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-nodes\">\n        <rect className=\"colour-1\" x=\"-28\" y=\"-28\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"0\" y=\"-28\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"-28\" y=\"0\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"0\" y=\"0\" width=\"28\" height=\"28\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-3\" x=\"-12\" y=\"-12\" width=\"24\" height=\"24\" rx=\"2\" ry=\"2\" />\n    </g>\n</svg>\n\nexport const ColourMapIcon2 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-nodes\">\n        <rect className=\"colour-1\" x=\"-30\" y=\"-30\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"0\" y=\"-30\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"-30\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-3\" x=\"-10\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"10\" y=\"-10\" width=\"20\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"-30\" y=\"10\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"0\" y=\"10\" width=\"30\" height=\"20\" rx=\"2\" ry=\"2\" />\n    </g>\n</svg>","import React from 'react';\n\nexport const IdentityIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <defs>\n        <g id=\"identity-1-puzzle\">\n            <g className=\"graph-edges\">\n                <line x1=\"-15\" y1=\"13\" x2=\"0\" y2=\"-13\" />\n                <line x1=\"-15\" y1=\"13\" x2=\"15\" y2=\"13\" />\n                <line x1=\"0\" y1=\"-13\" x2=\"15\" y2=\"13\" />\n            </g>\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-1\" cx=\"-15\" cy=\"13\" r=\"5\" />\n                <circle className=\"colour-2\" cx=\"0\" cy=\"-13\" r=\"5\" />\n                <circle className=\"colour-3\" cx=\"15\" cy=\"13\" r=\"5\" />\n            </g>\n        </g>\n    </defs>\n\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n\n    <use href=\"#identity-1-puzzle\" transform=\"translate(-24, -4)\"/>\n    <use href=\"#identity-1-puzzle\" transform=\"translate(24, -4)\"/>\n</svg>\n\n\n\nexport const ReflectionIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <defs>\n        <g id=\"reflection-1-puzzle\">\n            <g className=\"graph-edges\">\n                <line x1=\"12\" y1=\"0\" x2=\"-11\" y2=\"-15\" />\n                <line x1=\"12\" y1=\"0\" x2=\"-11\" y2=\"15\" />\n                <line x1=\"-11\" y1=\"-15\" x2=\"-11\" y2=\"15\" />\n            </g>\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-2\" cx=\"12\" cy=\"0\" r=\"5\" />\n                <circle className=\"colour-1\" cx=\"-11\" cy=\"15\" r=\"5\" />\n                <circle className=\"colour-1\" cx=\"-11\" cy=\"-15\" r=\"5\" />\n            </g>\n        </g>\n    </defs>\n\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n\n    <use href=\"#reflection-1-puzzle\" transform=\"translate(-20)\"/>\n    <use href=\"#reflection-1-puzzle\" transform=\"translate(20) scale(-1, 1)\"/>\n</svg>\n\nexport const RotationIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <defs>\n        <g id=\"rotation-1-puzzle\">\n            <g className=\"graph-edges\">\n                <line x1=\"-16\" y1=\"13\" x2=\"-2\" y2=\"-13\" />\n                <line x1=\"-16\" y1=\"13\" x2=\"12\" y2=\"13\" />\n                <line x1=\"-2\" y1=\"-13\" x2=\"12\" y2=\"13\" />\n            </g>\n            <g className=\"graph-nodes\">\n                <circle className=\"colour-1\" cx=\"-16\" cy=\"13\" r=\"5\" />\n                <circle className=\"colour-2\" cx=\"-2\" cy=\"-13\" r=\"5\" />\n                <circle className=\"colour-1\" cx=\"12\" cy=\"13\" r=\"5\" />\n            </g>\n        </g>\n    </defs>\n\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <line className=\"reflection-line\" y1=\"-50\" y2=\"50\" />\n\n    <use href=\"#rotation-1-puzzle\" transform=\"translate(-20)\"/>\n    <use href=\"#rotation-1-puzzle\" transform=\"translate(20) rotate(180)\"/>\n</svg>\n","import React from 'react';\n\nexport const RepeatingPatternsIcon1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"graph-nodes\">\n        <rect className=\"colour-1\" x=\"-37.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"-22.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"-7.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-2\" x=\"7.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n        <rect className=\"colour-1\" x=\"22.5\" y=\"-7.5\" width=\"15\" height=\"15\" rx=\"2\" ry=\"2\" />\n    </g>\n</svg>\n","import React from 'react';\n\n\nexport const Categorisation1 = () => <svg viewBox=\"-50 -50 100 100\">\n    <circle className=\"spotlight\" cx=\"0\" cy=\"0\" r=\"49\" />\n    <g className=\"categories\">\n        <circle className=\"colour-1\" cx=\"-24\" cy=\"0\" r=\"23\" />\n        <circle className=\"colour-2\" cx=\"24\" cy=\"0\" r=\"23\" />\n    </g>\n    <g className=\"graph-nodes\">\n        <circle className=\"colour-1\" cx=\"-24\" cy=\"0\" r=\"8\" />\n        <circle className=\"colour-2\" cx=\"24\" cy=\"0\" r=\"8\" />\n    </g>\n</svg>\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport puzzles from './puzzleData';\nimport './puzzleMap.css';\n\n\nexport default () =>\n    <main className=\"front-page\">\n        <nav className=\"puzzle-map\">\n            {\n                puzzles.map((section, i) =>\n                    <div className=\"puzzle-section\" key={i}>{\n                        section.map(\n                            ({ slug, icon }) => <Link className=\"map-link\" key={slug} to={'/pattern-puzzles/' + slug}>\n                                { icon }\n                            </Link>\n                        )\n                    }</div>\n                )\n            }\n        </nav>\n    </main>\n","import React from 'react';\n\n\nconst TOOLBAR_R = 136;\nconst DELTA_ANGLE = Math.PI / 18;\n\nconst handleKeyDown = (evt, callback) => {\n    if (evt.key === 'Enter' || evt.keyCode === 32) {\n        callback();\n    }\n};\n\nexport default function ({ puzzle, nColours, selectedColour }) {\n    const r = 8;\n    let angle = Math.PI - DELTA_ANGLE * (nColours - 1) / 2;\n\n    const colours = [];\n    for (let i = 1; i <= nColours; i++) {\n        const cx = (TOOLBAR_R + r) * Math.cos(angle);\n        const cy = (TOOLBAR_R + r) * Math.sin(angle);\n        \n        let className = `colour-palette colour-${i}`;\n        if (selectedColour === i) {\n            className += ' selected';\n        }\n\n        const setColour = () => puzzle.setState({ selectedColour: i });\n\n        colours.push(\n            <circle\n                className={className}\n                role=\"radio\"\n                aria-checked={selectedColour === i}\n                tabIndex=\"0\"\n                key={i}\n                cx={cx}\n                cy={cy}\n                r={r}\n                onClick={setColour}\n                onKeyDown={(evt) => handleKeyDown(evt, setColour) }\n            />\n        );\n\n        angle += DELTA_ANGLE;\n    }\n\n    let selectColourIndicator = \"selected-colour-indicator\";\n    if (selectedColour) {\n        selectColourIndicator += ` colour-${selectedColour}`;\n    }\n\n    return <g className=\"toolbar\">\n        <circle className={selectColourIndicator} r=\"132\" />\n        <g className=\"colour-palette\" role=\"radiogroup\">\n            { colours }\n        </g>\n    </g>;\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Toolbar from '../Toolbars/Toolbar';\n\nimport './puzzle.css';\n\n\nconst COLOURS = [\n    'rgb(30, 20, 20)',\n    'rgb(20, 146, 196)',\n    'rgb(196, 20, 96)',\n    'rgb(20, 198, 96)',\n    'rgb(147, 20, 198)',\n];\n\nexport default class PuzzlePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: 0,\n\t\t\tsolved: false,\n            selectedColour: null,\n        }\n\n        this.update = this.update.bind(this);\n        this.getPuzzle = this.getPuzzle.bind(this);\n        this.nextPuzzle = this.nextPuzzle.bind(this);\n    }\n\n    componentDidMount() {\n        // Load the first puzzle\n        this.getPuzzle(0);\n    }\n\n    getPuzzle(index) {\n        const { getPuzzleObject, puzzles } = this.props;\n        this.setState({\n            puzzle: getPuzzleObject(puzzles[index]),\n            colourPalette: puzzles[index].colourPalette\n        });\n    }\n\n    nextPuzzle() {\n        const nextState = this.state.index + 1;\n        this.setState({\n            index: nextState,\n            solved: false,\n            selectedColour: null\n        });\n        this.getPuzzle(nextState);\n    }\n\n    // Child element has updated so evaluate to see if puzzle has been solved\n    update(puzzle) {\n        const solved = this.props.evaluate(puzzle)\n        this.setState({ puzzle, solved });\n    }\n\n    getNextPuzzleButton() {\n        // Only show button if the puzzle has been solved\n        if (!this.state.solved) { return null; }\n\n        if (this.state.index < this.props.puzzles.length - 1) {\n            // Button to go to the next puzzle\n            return <div className=\"menu-button next-puzzle-button\" aria-label=\"Next puzzle\">\n                <svg viewBox=\"-10 -10 20 20\">\n                    <circle r=\"9\" onClick={this.nextPuzzle}/>\n                </svg>\n            </div>\n        } else {\n            // Button to go back to the home page\n            return <Link to=\"/pattern-puzzles/\" className=\"menu-button next-puzzle-button\" aria-label=\"Puzzle completed\">\n                <svg viewBox=\"-10 -10 20 20\">\n                    <circle r=\"9\" />\n                </svg>\n            </Link>\n        }\n    }\n\n    render() {\n        const { index, puzzle, selectedColour, colourPalette } = this.state;\n        if (!puzzle) { return null; }\n\n        // Determine what the selected colour is if we have selected one\n        const style = selectedColour ? { color: COLOURS[selectedColour] } : {};\n        const className = selectedColour ? \"colour-selected\" : \"\";\n\n        return <main>\n            <nav>\n                <Link to=\"/pattern-puzzles/\" className=\"menu-button back-button\" aria-label=\"Back to menu\">\n                    <svg viewBox=\"-10 -10 20 20\">\n                        <circle r=\"9\" />\n                    </svg>\n                </Link>\n\n                { this.getNextPuzzleButton() }\n            </nav>\n\n            <svg id=\"puzzle-chamber\" viewBox=\"-128 -128 256 256\" preserveAspectRatio=\"xMidYMid meet\">\n                <defs>\n                    <filter id=\"shadow-filter\">\n                        <feOffset result=\"offOut\" in=\"SourceAlpha\" dx=\"2\" dy=\"2\"/>\n                        <feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\"5\" />\n                        <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\n                    </filter>\n                    <filter id=\"glow-filter\" x=\"-200%\" y=\"-200%\" width=\"400%\" height=\"400%\">\n                        <feGaussianBlur stdDeviation=\"1\" result=\"colouredBlur\" />\n                        <feMerge>\n                            <feMergeNode in=\"coloredBlur\"/>\n                            <feMergeNode in=\"SourceGraphic\"/>\n                        </feMerge>\n                    </filter>\n                </defs>\n\n                <rect className=\"background\" x=\"-200\" y=\"-200\" width=\"400\" height=\"400\" />\n\n                <g id=\"puzzle\" key={index} className={className} style={style}>\n                    { this.props.displayPuzzle(puzzle, selectedColour, this.update) }\n                </g>\n\n                <circle id=\"chamber-window\" r=\"212\" />\n                <Toolbar \n                    puzzle={this}\n                    nColours={colourPalette}\n                    selectedColour={selectedColour}\n                />\n            </svg>\n        </main>\n    }\n};\n","import React from 'react';\n\n\nexport const Line = ({ x1, y1, x2, y2 }) =>\n    <line x1={x1} y1={y1} x2={x2} y2={y2} />\n","export function getColourClassName(item) {\n    let className;\n\n    if (!item.fixed) {\n        className = \"colourable \";\n        if (item.colour) {\n            className += `fill-${item.colour}`;\n        } else {\n            className += \"empty-region\";\n        }\n    } else {\n        className = `fill-${item.colour}`;\n    }\n\n    return className;\n}\n\nexport function getClickToColour(colourItem, item, i) {\n    if (colourItem && !item.fixed) {\n        return () => colourItem(i);\n    }\n}\n","import React from 'react';\nimport { Line } from './Primitives';\nimport { getColourClassName, getClickToColour } from './utils';\n\n\nexport const Graph = ({ edges=[], nodes=[], colourNode }) =>\n    <g className=\"graph\">\n        <g className=\"graph-edges\">\n            { edges.map((edge, i) =>\n                <g key={i}>\n                    <Line className=\"edge-outline\" {...edge} />\n                    <Line {...edge} />\n                </g>\n            )}\n        </g>\n\n        <g className=\"graph-nodes\">\n            { nodes.map((node, i) => \n                <circle\n                    key={i}\n                    r={node.r}\n                    cx={node.x}\n                    cy={node.y}\n                    className={getColourClassName(node)}\n                    onClick={getClickToColour(colourNode, node, i)}\n                />\n            )}\n        </g>\n    </g>\n","/***\n * These functions take the raw puzzle data and return an object that can used to\n * display the puzzle and determine when the correct answer is found\n***/\n\nimport { shuffle } from '../utils/common';\n\n// Given arrays of node coordinates and edge coordinates, return an object of nodes and edges\nexport function getGraphObject({ nodes=[], edges=[], size=32, r=8 }) {\n    const nodeObjects = nodes.map(([x, y, colour]) => ({\n        r,\n        x: x * size,\n        y: y * size,\n        colour,\n        fixed: Boolean(colour)\n    }));\n\n    const edgeObjects = edges.map(([n1, n2]) => {\n        const node1 = nodeObjects[n1];\n        const node2 = nodeObjects[n2];\n        return {\n            node1,\n            node2,\n            x1: node1.x,\n            y1: node1.y,\n            x2: node2.x,\n            y2: node2.y\n        };\n    });\n\n    return {\n        nodes: nodeObjects,\n        edges: edgeObjects\n    };\n}\n\n// Given arrays of node coordinates and edge coordinates, return two objects of nodes and edges,\n// one includes the node colours and one is empty\nexport function getGraphAndUncolouredCopy({ nodes=[], edges=[], size=32, r=8 }) {\n    const target = getGraphObject({ nodes, edges, size, r });\n\n    // Remove the colours from the nodes\n    const blankNodes = nodes.map(([x, y]) => [x, y]);\n    const blankGraph = getGraphObject({ nodes: blankNodes, edges, size, r });\n\n    return { target, blank: blankGraph };\n}\n\nexport function getMapObject({ regions=[], connections=[], size=1 }) {\n    const regionObjects = regions.map(([x, y, width, height]) => ({\n        x: (x - width / 2) * size,\n        y: (y - height / 2) * size,\n        width: width * size,\n        height: height * size,\n    }));\n\n    const connectionObjects = connections.map(([n1, n2]) => ({\n        node1: regionObjects[n1],\n        node2: regionObjects[n2],\n    }));\n\n    // Create a graph of the map in order to evaluate the solution\n    return {\n        regions: regionObjects,\n        connections: connectionObjects\n    };\n}\n\nexport function getSequenceObject({ pattern, answer }) {\n    const patternObjects = pattern.map(item => ({\n        colour: item,\n        fixed: true\n    }));\n\n    const sequence = patternObjects.concat(\n        answer.map(item => ({ colour: 0 })\n    ));\n    \n    // Target sequence is the existing sequence plus the answer fragment\n    const target = patternObjects.concat(\n        answer.map(item => ({ colour: item })\n    ));\n\n    return { sequence, target };\n}\n\n// Return an array of category object which have a colour, and an object to display\nexport function getCategoryObjects({ categories, randomRotate }) {\n    const categoryObjects = [];\n    \n    categories.forEach(category => {\n        categoryObjects.push({\n            category: category.type,\n            object: category.item,\n            rotate: randomRotate ? Math.floor(Math.random() * 12) * 30 : 0\n        });\n    });\n\n    return shuffle(categoryObjects);\n}\n","export function shuffle(arr) {\n    for (let i = arr.length; i--; ) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n    return arr;\n}\n","export function getPointsOnACircle(n, {r=1, offsetAngle=0, dx=0, dy=0}={}) {\n    const points = [];\n    const dAngle = 2 * Math.PI / n;\n    let angle = (offsetAngle * Math.PI / 180 || 0) - 0.5 * dAngle;\n\n    for (let i = 0; i < n; i++) {\n        points.push([\n            dx + r * Math.sin(angle),\n            dy + r * Math.cos(angle),\n        ]);\n        angle += dAngle;\n    }\n\n    return points;\n}\n\nexport function getNodesOnCircle(colours, {r=1, offsetAngle=0, dx=0, dy=0}={}) {\n    // If colours is a number rather than an array, create an empty array of that size\n    // i.e. none of the nodes will have a colour\n    if (!Array.isArray(colours)) {\n        colours = new Array(colours);\n    }\n\n    const n = colours.length;\n    const points = getPointsOnACircle(n, { r, offsetAngle, dx, dy });\n\n    // Combine coordinates with colours\n    const nodes = points.map(([x, y], i) => [x, y, colours[i]]);\n\n    return nodes;\n}\n\nexport function getLoopOfEdges(start, stop) {\n    if (stop === undefined) {\n        stop = start - 1;\n        start = 0;\n    }\n\n    var edges = [];\n    for (var i = start; i < stop; i++) {\n        edges.push([i, i + 1]);\n    }\n    edges.push([start, stop]);\n    return edges;\n}\n\nexport function linearGraph(colours, scale=1) {\n    if (!Array.isArray(colours)) {\n        colours = new Array(colours);\n    }\n\n    const n = colours.length;\n    const startX = - (n - 1) * scale / 2;\n    const nodes = colours.map((colour, i) => [startX + i * scale, 0, colour])\n    const edges = [];\n\n    for (let i = 1; i < n; i++) {\n        edges.push([i - 1, i]);\n    }\n\n    return { nodes, edges };\n}\n\nexport function loopGraph(colours, scale=1) {\n    if (!Array.isArray(colours)) {\n        colours = new Array(colours);\n    }\n\n    const nodes = getNodesOnCircle(colours, { r: scale });\n    const edges = getLoopOfEdges(colours.length);\n\n    return { nodes, edges };\n}\n","export function allItemsColoured(items=[]) {\n    return items.every(item => item.colour > 0);\n}\n\nexport function allConnectedItemsHaveDifferentColours(cxns=[]) {\n    const failingCxns = cxns.filter(cxn => cxn.node1.colour === cxn.node2.colour);\n    return failingCxns.length === 0;\n}\n\nexport const graphIsChromatic = ({ nodes, edges }) => \n    allItemsColoured(nodes) &&\n    allConnectedItemsHaveDifferentColours(edges);\n\nexport const sequencesMatch = (seq1, seq2, attr) => {\n    if (seq1.length !== seq2.length) { return false; }\n    for (let i = 0; i < seq1.length; i++) {\n        if (seq1[i][attr] !== seq2[i][attr]) {\n            return false;\n        }\n    }\n    return true;\n};\n\n// Test whether there is a consistent mapping between two attributes for all items in an array\nexport const attributesHaveMapping = (arr, attr1, attr2) => {\n    const mapping = new Map();\n    for (let i = 0; i < arr.length; i++) {\n        const item = arr[i];\n        const value = mapping.get(item[attr1]);\n        if (value === undefined) {\n            mapping.set(item[attr1], item[attr2]);\n        } else if (value !== item[attr2]) {\n            return false;\n        }\n    }\n    return true;\n};\n","/*\n * Colour all nodes on a graph such that no edges joins two nodes of the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Graph } from './PuzzleComponents/Graph';\nimport { getGraphObject } from './puzzleLoaders';\nimport { getNodesOnCircle, getLoopOfEdges } from '../utils/graphUtils';\nimport { graphIsChromatic } from '../utils/evaluation';\n\n\nconst puzzles1 = [\n\t{\n\t\tcolourPalette: 1,\n\t\tnodes: [[0, 0]]\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: [[-1, 0], [1, 0]],\n\t\tedges: [[0, 1]],\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: [[-2, 0], [0, 0], [2, 0]],\n\t\tedges: [[0, 1], [1, 2]],\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: getNodesOnCircle(3),\n\t\tedges: getLoopOfEdges(3),\n\t}, {\n\t\tcolourPalette: 2,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4),\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4).concat([[1, 3]]),\n\t}, {\n\t\tcolourPalette: 4,\n\t\tnodes: getNodesOnCircle(4),\n\t\tedges: getLoopOfEdges(4).concat([[1, 3], [0, 2]]),\n\t}, {\n\t\tcolourPalette: 3,\n\t\tnodes: [[0, 0]].concat(getNodesOnCircle(4)),\n\t\tedges: getLoopOfEdges(1, 4).concat([[0, 1], [0, 2], [0, 3], [0, 4]]),\n\t}\n];\n\nconst puzzles2 = [\n    {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6),\n    }, {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[1, 4]]),\n    }, {\n        colourPalette: 2,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 3]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [1, 4], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: [[-2, -1], [0, -1], [2, -1], [2, 1], [0, 1], [-2, 1]],\n        edges: getLoopOfEdges(6).concat([[0, 4], [1, 4], [1, 3]]),\n    }, {\n        colourPalette: 3,\n        scale: 24,\n        nodes: getNodesOnCircle(3).concat(getNodesOnCircle(3, { r: 2, offsetAngle: 60 })),\n        edges: getLoopOfEdges(3).concat([[0, 3], [1, 3], [1, 4], [2, 4], [0, 5], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        scale: 16,\n        nodes: getNodesOnCircle(3).concat(getNodesOnCircle(3, { r: 4, offsetAngle: 60 })),\n        edges: getLoopOfEdges(3)\n            .concat(getLoopOfEdges(3, 5))\n            .concat([[0, 3], [1, 3], [1, 4], [2, 4], [0, 5], [2, 5]]),\n    }\n];\n\n// TODO: Give more colourPalette than required\nconst puzzles3 = [\n    {\n        colourPalette: 2,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6),\n    }, {\n        colourPalette: 2,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [2, 4]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [2, 4], [0, 4]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[1, 3], [0, 4], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[2, 4], [1, 3], [0, 4], [1, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 3], [1, 4], [2, 5]]),\n    }, {\n        colourPalette: 3,\n        nodes: getNodesOnCircle(6),\n        edges: getLoopOfEdges(6).concat([[0, 2], [1, 3], [2, 4], [3, 5], [4, 0], [5, 1]]),\n    }\n];\n\nconst ColourableGraph = (puzzle, selectedColour, update) => {\n    const colourNode = nodeIndex => {\n        puzzle.nodes[nodeIndex].colour = selectedColour;\n        update(puzzle);\n    };\n\n    return <Graph {...puzzle} colourNode={colourNode}/>\n};\n\nconst ColourGraph = ({ puzzles }) => \n    <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={graphIsChromatic}\n\t\tgetPuzzleObject={getGraphObject}\n\t\tdisplayPuzzle={ColourableGraph}\n    />\n\nexport const ColourGraph1 = () => <ColourGraph puzzles={puzzles1} />\n\nexport const ColourGraph2 = () => <ColourGraph puzzles={puzzles2} />\n\nexport const ColourGraph3 = () => <ColourGraph puzzles={puzzles3} />\n","import React from 'react';\nimport { getColourClassName, getClickToColour } from './utils';\n\n\nexport const Map = ({ regions=[], colourItem }) =>\n    <g className=\"graph\">\n        <g className=\"graph-nodes\">\n            { regions.map((region, i) =>\n                <rect\n                    key={i}\n                    x={region.x}\n                    y={region.y}\n                    width={region.width}\n                    height={region.height}\n                    rx=\"3\"\n                    ry=\"3\"\n                    className={getColourClassName(region)}\n                    onClick={getClickToColour(colourItem, region, i)}\n                />\n            )}\n        </g>\n    </g>\n","/*\n * Colour regions on a map such that no two touching regions have the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Map } from './PuzzleComponents/Map';\nimport { getMapObject } from './puzzleLoaders';\nimport { allItemsColoured, allConnectedItemsHaveDifferentColours } from '../utils/evaluation';\n\n\nconst puzzles1 = [\n    {\n        colourPalette: 1,\n        regions: [[0, 0, 32, 32]]\n    }, {\n        colourPalette: 2,\n        regions: [[-16, 0, 32, 32], [16, 0, 32, 32]],\n        connections: [[0, 1]]\n    }, {\n        colourPalette: 2,\n        regions: [[-32, 0, 32, 32], [0, 0, 32, 32], [32, 0, 32, 32]],\n        connections: [[0, 1], [1, 2]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [0, -16, 64, 32]],\n        connections: [[0, 1], [1, 2], [0, 2]]\n    }, {\n        colourPalette: 2,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [-16, -16, 32, 32], [16, -16, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [-16, -16, 32, 32], [16, -16, 32, 32], [0, 0, 28, 28]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 3,\n        regions: [[0, 0, 72, 72], [-12, 12, 24, 24], [12, 12, 24, 24], [-12, -12, 24, 24], [12, -12, 24, 24], [0, 0, 24, 24]],\n        connections: [[1, 2], [3, 4], [1, 3], [2, 4], [0, 1], [0, 2], [0, 3], [0, 4], [5, 1], [5, 2], [5, 3], [5, 4]]\n    }, {\n        colourPalette: 4,\n        regions: [[-16, 16, 32, 32], [16, 16, 32, 32], [0, -16, 64, 32], [0, 0, 28, 28]],\n        connections: [[0, 1], [0, 2], [0, 3], [1, 2], [1, 3], [2, 3]]\n    }\n];\n\nconst puzzles2 = [\n    {\n        colourPalette: 2,\n        regions: [[0, 0, 96, 96], [0, 0, 32, 32]],\n        connections: [[0, 1]]\n    }, {\n        colourPalette: 3,\n        regions: [[-24, 0, 48, 96], [24, 0, 48, 96], [0, 0, 32, 32]],\n        connections: [[0, 1], [1, 2], [0, 2]]\n    }, {\n        colourPalette: 4,\n        regions: [[0, -32, 96, 32], [-24, 16, 48, 64], [24, 16, 48, 64], [0, 0, 32, 32]],\n        connections: [[0, 1], [0, 2], [0, 3], [1, 2], [1, 3], [2, 3]]\n    }, {\n        colourPalette: 3,\n        regions: [[-24, -24, 48, 48], [24, -24, 48, 48], [-24, 24, 48, 48], [24, 24, 48, 48], [0, 0, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 3,\n        regions: [[-16, -32, 64, 32], [32, -16, 32, 64], [-32, 16, 32, 64], [16, 32, 64, 32], [0, 0, 32, 32]],\n        connections: [[0, 1], [2, 3], [0, 2], [1, 3], [0, 4], [1, 4], [2, 4], [3, 4]]\n    }, {\n        colourPalette: 2,\n        regions: [\n            [-32, -32, 32, 32], [0, -32, 32, 32], [32, -32, 32, 32],\n            [-32, 0, 32, 32], [0, 0, 32, 32], [32, 0, 32, 32],\n            [-32, 32, 32, 32], [0, 32, 32, 32], [32, 32, 32, 32]\n        ],\n        connections: [\n            [0, 1], [1, 2], [3, 4], [4, 5], [6, 7], [7, 8],\n            [0, 3], [1, 4], [2, 5], [3, 6], [4, 7], [5, 8]\n        ]\n    }\n];\n\nconst ColourableMap = (puzzle, selectedColour, update) => {\n    const colourItem = index => {\n        puzzle.regions[index].colour = selectedColour;\n        update(puzzle);\n    }\n\n    return <Map {...puzzle} colourItem={colourItem}/>\n};\n\nconst evaluate = ({ regions, connections }) => \n    allItemsColoured(regions) &&\n    allConnectedItemsHaveDifferentColours(connections);\n\nconst ColourMap = ({ puzzles }) =>\n\t<PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getMapObject}\n\t\tdisplayPuzzle={ColourableMap} />\n\nexport const ColourMap1 = () => <ColourMap puzzles={puzzles1} />\nexport const ColourMap2 = () => <ColourMap puzzles={puzzles2} />\n","/*\n * Colour all nodes on a graph such that no edges joins two nodes of the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Graph } from './PuzzleComponents/Graph';\nimport { getGraphAndUncolouredCopy } from './puzzleLoaders';\nimport { getNodesOnCircle, getLoopOfEdges } from '../utils/graphUtils';\nimport { allItemsColoured, sequencesMatch } from '../utils/evaluation';\n\n\nconst identity1 = [\n\t{\n\t\tcolourPalette: 1,\n        nodes: [[0, 0, 1]]\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2]),\n        edges: getLoopOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: [[-1, 0, 1], [0, 0, 2], [1, 0, 1]],\n        edges: [[0, 1], [1, 2]]\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 4,\n        nodes: getNodesOnCircle([1, 2, 3, 4]),\n        edges: getLoopOfEdges(4)\n\t}, {\n        size: 24,\n        colourPalette: 3,\n        nodes: [[-1, -1, 1], [1, -1, 1], [-0.5, 0, 2], [0.5, 0, 3], [-1, 1, 3], [1, 1, 2]],\n        edges: [[0, 2], [2, 3], [3, 1], [2, 4], [3, 5]]\n    }, {\n        size: 24,\n        colourPalette: 3,\n        nodes: [[-1.5, -1, 1], [-0.5, -1, 2], [0.5, -1, 1], [-0.5, 0, 1], [0.5, 0, 3], [-0.5, 1, 3], [0.5, 1, 4], [1.5, 1, 3]],\n        edges: [[0, 1], [1, 2], [1, 3], [3, 4], [4, 6], [5, 6], [6, 7]]\n    }\n];\n\nconst reflection1 = [\n\t{\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 2], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3], {offsetAngle: 30}),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 1]),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3]),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 2, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 4,\n        nodes: getNodesOnCircle([1, 2, 3, 4]),\n        edges: getLoopOfEdges(4)\n\t}\n];\n\nconst rotation1 = [\n\t{\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 2], { dy: 0.25 }),\n\t\tedges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2], { offsetAngle: 90 }),\n\t\tedges: getLoopOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2]),\n\t\tedges: getLoopOfEdges(2)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 2, 2]),\n\t\tedges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 1, 1, 2]),\n\t\tedges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 1, 2]),\n        edges: getLoopOfEdges(4)\n\t}, {\n\t\tcolourPalette: 2,\n        nodes: getNodesOnCircle([1, 2, 2], { dy: 0.25 }),\n        edges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 3,\n        nodes: getNodesOnCircle([1, 2, 3], { dy: 0.25 }),\n\t\tedges: getLoopOfEdges(3)\n\t}, {\n\t\tcolourPalette: 4,\n        nodes: getNodesOnCircle([1, 2, 3, 4]),\n        edges: getLoopOfEdges(4)\n\t}\n];\n\n// Check the blank graph looks like the target\nconst evaluate = ({ blank, target }) => {\n\treturn allItemsColoured(blank.nodes) &&\n\t\tsequencesMatch(blank.nodes, target.nodes, 'colour');\n};\n\nconst ColourableGraph = (puzzle, selectedColour, update) => {\n    const colourNode = nodeIndex => {\n        puzzle.blank.nodes[nodeIndex].colour = selectedColour;\n        update(puzzle);\n    }\n\n    return <Graph {...puzzle.blank} colourNode={colourNode}/>\n};\n\nconst Transformation = ({ puzzles, transform }) => {\n\tconst displayGraphs = (puzzle, selectedColour, update) => <g>\n        <g transform=\"translate(-50)\">\n            <Graph {...puzzle.target} />\n        </g>\n        <g transform={ \"translate(50) \" + transform }>\n            { ColourableGraph(puzzle, selectedColour, update) }\n        </g>\n\n        <line className=\"reflection-line\" y1=\"-200\" y2=\"200\" />\n    </g>\n\n\treturn <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getGraphAndUncolouredCopy}\n\t\tdisplayPuzzle={displayGraphs} />\n};\n\nexport const Identity1 = () => <Transformation puzzles={identity1} transform=\"\"/>\n\nexport const Reflection1 = () => <Transformation puzzles={reflection1} transform=\"scale(-1 1)\"/>\n\nexport const Rotation1 = () => <Transformation puzzles={rotation1} transform=\"rotate(180)\"/>\n","import React from 'react';\nimport { getColourClassName, getClickToColour } from './utils';\n\n\nexport const Sequence = ({ sequence=[], colourItem }) => {\n    const size = Math.min(24, 160 / sequence.length);\n    const startX = -(sequence.length * size) / 2;\n\n    return <g className=\"sequence\">\n        { sequence.map((item, i) => {\n            return <rect\n                key={i}\n                x={startX + i * size }\n                y={-size / 2}\n                width={size - 1}\n                height={size - 1}\n                rx=\"3\"\n                ry=\"3\"\n                className={getColourClassName(item)}\n                onClick={getClickToColour(colourItem, item, i)}\n            />\n        })}\n    </g>\n};\n","/*\n * Colour regions on a map such that no two touching regions have the same colour.\n */\n\nimport React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Sequence } from './PuzzleComponents/Sequence';\nimport { getSequenceObject } from './puzzleLoaders';\nimport { allItemsColoured, sequencesMatch } from '../utils/evaluation';\n\n\nconst puzzles1 = [\n    {\n        colourPalette: 1,\n        pattern: [1, 1, 1, 1],\n        answer: [1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 1, 1],\n        answer: [1, 1]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 2, 1, 2],\n        answer: [1, 2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 3, 1, 2, 3],\n        answer: [1, 2, 3]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 1, 2, 2, 1, 1],\n        answer: [2, 2]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 2, 1, 2, 2],\n        answer: [1, 2, 2]\n    }, {\n        colourPalette: 3,\n        pattern: [1, 2, 2, 3, 3, 3, 1, 2, 2],\n        answer: [3, 3, 3]\n    }, {\n        colourPalette: 2,\n        pattern: [1, 2, 1, 1, 2, 1, 2, 1, 1, 2],\n        answer: [1, 2, 1, 1]\n    }\n];\n\nconst evaluate = ({ sequence, target }) =>\n    allItemsColoured(sequence) &&\n    sequencesMatch(sequence, target, 'colour');\n\nconst ColourableSequence = (puzzle, selectedColour, update) => {\n    const colourItem = index => {\n        puzzle.sequence[index].colour = selectedColour;\n        update(puzzle);\n    }\n\n    return <Sequence {...puzzle} colourItem={colourItem}/>\n};\n\nconst RepeatingPatterns = ({ puzzles }) =>\n    <PuzzlePage\n\t\tpuzzles={puzzles}\n\t\tevaluate={evaluate}\n\t\tgetPuzzleObject={getSequenceObject}\n\t\tdisplayPuzzle={ColourableSequence} />\n\nexport const RepeatingPatterns1 = (props) => <RepeatingPatterns puzzles={puzzles1} {...props} />","import React from 'react';\nimport { getPointsOnACircle } from '../../utils/graphUtils';\nimport { getColourClassName, getClickToColour } from './utils';\n\n\nconst getCirclePackedInCircle = (R, n) => {\n    const phi = Math.PI * (0.5 - 1 / n);\n    const cPhi = Math.cos(phi);\n    const r = R / (1 + cPhi);\n    const points = getPointsOnACircle(n, { r });\n\n    return {\n        categoryPositions: points,\n        categorySize: r * cPhi\n    };\n};\n\nexport const Categories = ({ size, categories, colourCategory }) => {\n    const { categoryPositions, categorySize } = getCirclePackedInCircle(size, categories.length);\n\n    return <g>\n        { categories.map((category, i) => {\n            let transform = `translate(${ categoryPositions[i][0] } ${ categoryPositions[i][1] })`;\n            if (category.rotate) {\n                transform += ` rotate(${ category.rotate })`;\n            }\n\n            return <g key={i} transform={transform}>\n                <circle\n                    className={'category ' + getColourClassName(category)}\n                    onClick={getClickToColour(colourCategory, category, i)}\n                    r={categorySize * 0.95}\n                    />\n                <g className=\"no-pointer\">\n                    { category.component }\n                </g>\n            </g>\n        })}\n    </g>\n}\n","import React from 'react';\n\nimport PuzzlePage from './PuzzlePage';\nimport { Graph } from './PuzzleComponents/Graph';\nimport { Categories } from './PuzzleComponents/Categories';\nimport { getCategoryObjects, getGraphObject } from './puzzleLoaders';\nimport { linearGraph, loopGraph } from '../utils/graphUtils';\nimport { allItemsColoured, attributesHaveMapping } from '../utils/evaluation';\n\n\n// Same graph type, different colours\nconst puzzle1 = [\n\t{\n        colourPalette: 2,\n        categories: [\n            { type: 1, item: getGraphObject({ nodes: [[0, 0, 1]] }) },\n            { type: 2, item: getGraphObject({ nodes: [[0, 0, 2]] }) },\n        ]\n    }, {\n\t\tcolourPalette: 2,\n        categories: [\n            { type: 1, item: getGraphObject(linearGraph([1, 1])) },\n            { type: 1, item: getGraphObject(linearGraph([1, 1])) },\n            { type: 2, item: getGraphObject(linearGraph([2, 2])) },\n        ]\n    }, {\n\t\tcolourPalette: 3,\n        categories: [\n            { type: 1, item: getGraphObject(linearGraph([1, 1])) },\n            { type: 2, item: getGraphObject(linearGraph([1, 2])) },\n            { type: 3, item: getGraphObject(linearGraph([2, 2])) },\n            { type: 3, item: getGraphObject(linearGraph([2, 2])) },\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: getGraphObject(linearGraph([1, 1, 1])) },\n            { type: 2, item: getGraphObject(linearGraph([1, 2, 1])) },\n            { type: 2, item: getGraphObject(linearGraph([1, 2, 1])) },\n            { type: 3, item: getGraphObject(linearGraph([2, 2, 2])) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: getGraphObject(loopGraph([1, 1, 2], 0.75)) },\n            { type: 1, item: getGraphObject(loopGraph([1, 1, 2], 0.75)) },\n            { type: 1, item: getGraphObject(loopGraph([1, 1, 2], 0.75)) },\n            { type: 2, item: getGraphObject(loopGraph([1, 2, 2], 0.75)) },\n            { type: 2, item: getGraphObject(loopGraph([1, 2, 2], 0.75)) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: getGraphObject(linearGraph([1, 2, 1])) },\n            { type: 1, item: getGraphObject(linearGraph([1, 2, 1])) },\n            { type: 2, item: getGraphObject(linearGraph([2, 1, 2])) },\n            { type: 2, item: getGraphObject(linearGraph([2, 1, 2])) },\n            { type: 2, item: getGraphObject(linearGraph([2, 1, 2])) },\n        ]\n    }, {\n        colourPalette: 3,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: getGraphObject(loopGraph([1, 1, 2, 2], 0.75)) },\n            { type: 1, item: getGraphObject(loopGraph([1, 1, 2, 2], 0.75)) },\n            { type: 2, item: getGraphObject(loopGraph([1, 2, 1, 2], 0.75)) },\n            { type: 2, item: getGraphObject(loopGraph([1, 2, 1, 2], 0.75)) },\n            { type: 3, item: getGraphObject(loopGraph([1, 1, 1, 2], 0.75)) },\n            { type: 3, item: getGraphObject(loopGraph([1, 1, 1, 2], 0.75)) },\n        ]\n    }, {\n        colourPalette: 2,\n        randomRotate: true,\n        categories: [\n            { type: 1, item: getGraphObject(loopGraph([1, 2, 3], 0.75)) },\n            { type: 1, item: getGraphObject(loopGraph([1, 2, 3], 0.75)) },\n            { type: 2, item: getGraphObject(loopGraph([1, 3, 2], 0.75)) },\n            { type: 2, item: getGraphObject(loopGraph([1, 3, 2], 0.75)) },\n            { type: 2, item: getGraphObject(loopGraph([1, 3, 2], 0.75)) },\n        ]\n    }\n];\n\nconst displayCategories = (categories, selectedColour, update) => {\n    categories.forEach(item => {\n        item.component = <Graph {...item.object} />\n    });\n\n    const colourCategory = index => {\n        categories[index].colour = selectedColour;\n        update(categories);\n    };\n\n    return <Categories size=\"128\" categories={categories} colourCategory={colourCategory} />\n};\n\nconst evaluate = puzzle =>\n    allItemsColoured(puzzle) &&\n    attributesHaveMapping(puzzle, 'category', 'colour') &&\n    attributesHaveMapping(puzzle, 'colour', 'category', 'colour');\n\nconst Categorisation = ({ puzzles }) =>\n    <PuzzlePage\n        puzzles={puzzles}\n        evaluate={evaluate}\n        getPuzzleObject={getCategoryObjects}\n        displayPuzzle={displayCategories} />\n\nexport const Categorisation1 = () => <Categorisation puzzles={puzzle1} />\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport PuzzleMap from './PuzzleMap/PuzzleMap';\nimport { ColourGraph1, ColourGraph2, ColourGraph3 } from './Puzzles/ColourGraphs';\nimport { ColourMap1, ColourMap2 } from './Puzzles/ColourMaps';\nimport { Identity1, Reflection1, Rotation1 } from './Puzzles/Transformations';\nimport { RepeatingPatterns1 } from './Puzzles/RepeatingPatterns';\nimport { Categorisation1 } from './Puzzles/Categorisation';\n\nimport './base.css';\nimport './Icons/icons.css';\n\n\nconst BASE_URL = '/pattern-puzzles';\n\nexport default () =>\n    <Router>\n        <Switch>\n            <Route path={`${BASE_URL}/colour-graphs-1`} component={ColourGraph1} />\n            <Route path={`${BASE_URL}/colour-graphs-2`} component={ColourGraph2} />\n            <Route path={`${BASE_URL}/colour-graphs-3`} component={ColourGraph3} />\n            <Route path={`${BASE_URL}/colour-maps-1`} component={ColourMap1} />\n            <Route path={`${BASE_URL}/colour-maps-2`} component={ColourMap2} />\n            <Route path={`${BASE_URL}/repeating-patterns-1`} component={RepeatingPatterns1} />\n            <Route path={`${BASE_URL}/identity-1`} component={Identity1} />\n            <Route path={`${BASE_URL}/reflection-1`} component={Reflection1} />\n            <Route path={`${BASE_URL}/rotation-1`} component={Rotation1} />\n            <Route path={`${BASE_URL}/categorisation-1`} component={Categorisation1} />\n            <Route path={`${BASE_URL}/`} component={PuzzleMap} />\n        </Switch>\n    </Router>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}